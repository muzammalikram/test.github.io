/*! jQuery Migrate v1.4.1 | (c) jQuery Foundation and other contributors | jquery.org/license */
"undefined"==typeof jQuery.migrateMute&&(jQuery.migrateMute=!0),function(a,b,c){function d(c){var d=b.console;f[c]||(f[c]=!0,a.migrateWarnings.push(c),d&&d.warn&&!a.migrateMute&&(d.warn("JQMIGRATE: "+c),a.migrateTrace&&d.trace&&d.trace()))}function e(b,c,e,f){if(Object.defineProperty)try{return void Object.defineProperty(b,c,{configurable:!0,enumerable:!0,get:function(){return d(f),e},set:function(a){d(f),e=a}})}catch(g){}a._definePropertyBroken=!0,b[c]=e}a.migrateVersion="1.4.1";var f={};a.migrateWarnings=[],b.console&&b.console.log&&b.console.log("JQMIGRATE: Migrate is installed"+(a.migrateMute?"":" with logging active")+", version "+a.migrateVersion),a.migrateTrace===c&&(a.migrateTrace=!0),a.migrateReset=function(){f={},a.migrateWarnings.length=0},"BackCompat"===document.compatMode&&d("jQuery is not compatible with Quirks Mode");var g=a("<input/>",{size:1}).attr("size")&&a.attrFn,h=a.attr,i=a.attrHooks.value&&a.attrHooks.value.get||function(){return null},j=a.attrHooks.value&&a.attrHooks.value.set||function(){return c},k=/^(?:input|button)$/i,l=/^[238]$/,m=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,n=/^(?:checked|selected)$/i;e(a,"attrFn",g||{},"jQuery.attrFn is deprecated"),a.attr=function(b,e,f,i){var j=e.toLowerCase(),o=b&&b.nodeType;return i&&(h.length<4&&d("jQuery.fn.attr( props, pass ) is deprecated"),b&&!l.test(o)&&(g?e in g:a.isFunction(a.fn[e])))?a(b)[e](f):("type"===e&&f!==c&&k.test(b.nodeName)&&b.parentNode&&d("Can't change the 'type' of an input or button in IE 6/7/8"),!a.attrHooks[j]&&m.test(j)&&(a.attrHooks[j]={get:function(b,d){var e,f=a.prop(b,d);return f===!0||"boolean"!=typeof f&&(e=b.getAttributeNode(d))&&e.nodeValue!==!1?d.toLowerCase():c},set:function(b,c,d){var e;return c===!1?a.removeAttr(b,d):(e=a.propFix[d]||d,e in b&&(b[e]=!0),b.setAttribute(d,d.toLowerCase())),d}},n.test(j)&&d("jQuery.fn.attr('"+j+"') might use property instead of attribute")),h.call(a,b,e,f))},a.attrHooks.value={get:function(a,b){var c=(a.nodeName||"").toLowerCase();return"button"===c?i.apply(this,arguments):("input"!==c&&"option"!==c&&d("jQuery.fn.attr('value') no longer gets properties"),b in a?a.value:null)},set:function(a,b){var c=(a.nodeName||"").toLowerCase();return"button"===c?j.apply(this,arguments):("input"!==c&&"option"!==c&&d("jQuery.fn.attr('value', val) no longer sets properties"),void(a.value=b))}};var o,p,q=a.fn.init,r=a.find,s=a.parseJSON,t=/^\s*</,u=/\[(\s*[-\w]+\s*)([~|^$*]?=)\s*([-\w#]*?#[-\w#]*)\s*\]/,v=/\[(\s*[-\w]+\s*)([~|^$*]?=)\s*([-\w#]*?#[-\w#]*)\s*\]/g,w=/^([^<]*)(<[\w\W]+>)([^>]*)$/;a.fn.init=function(b,e,f){var g,h;return b&&"string"==typeof b&&!a.isPlainObject(e)&&(g=w.exec(a.trim(b)))&&g[0]&&(t.test(b)||d("$(html) HTML strings must start with '<' character"),g[3]&&d("$(html) HTML text after last tag is ignored"),"#"===g[0].charAt(0)&&(d("HTML string cannot start with a '#' character"),a.error("JQMIGRATE: Invalid selector string (XSS)")),e&&e.context&&e.context.nodeType&&(e=e.context),a.parseHTML)?q.call(this,a.parseHTML(g[2],e&&e.ownerDocument||e||document,!0),e,f):(h=q.apply(this,arguments),b&&b.selector!==c?(h.selector=b.selector,h.context=b.context):(h.selector="string"==typeof b?b:"",b&&(h.context=b.nodeType?b:e||document)),h)},a.fn.init.prototype=a.fn,a.find=function(a){var b=Array.prototype.slice.call(arguments);if("string"==typeof a&&u.test(a))try{document.querySelector(a)}catch(c){a=a.replace(v,function(a,b,c,d){return"["+b+c+'"'+d+'"]'});try{document.querySelector(a),d("Attribute selector with '#' must be quoted: "+b[0]),b[0]=a}catch(e){d("Attribute selector with '#' was not fixed: "+b[0])}}return r.apply(this,b)};var x;for(x in r)Object.prototype.hasOwnProperty.call(r,x)&&(a.find[x]=r[x]);a.parseJSON=function(a){return a?s.apply(this,arguments):(d("jQuery.parseJSON requires a valid JSON string"),null)},a.uaMatch=function(a){a=a.toLowerCase();var b=/(chrome)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||a.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},a.browser||(o=a.uaMatch(navigator.userAgent),p={},o.browser&&(p[o.browser]=!0,p.version=o.version),p.chrome?p.webkit=!0:p.webkit&&(p.safari=!0),a.browser=p),e(a,"browser",a.browser,"jQuery.browser is deprecated"),a.boxModel=a.support.boxModel="CSS1Compat"===document.compatMode,e(a,"boxModel",a.boxModel,"jQuery.boxModel is deprecated"),e(a.support,"boxModel",a.support.boxModel,"jQuery.support.boxModel is deprecated"),a.sub=function(){function b(a,c){return new b.fn.init(a,c)}a.extend(!0,b,this),b.superclass=this,b.fn=b.prototype=this(),b.fn.constructor=b,b.sub=this.sub,b.fn.init=function(d,e){var f=a.fn.init.call(this,d,e,c);return f instanceof b?f:b(f)},b.fn.init.prototype=b.fn;var c=b(document);return d("jQuery.sub() is deprecated"),b},a.fn.size=function(){return d("jQuery.fn.size() is deprecated; use the .length property"),this.length};var y=!1;a.swap&&a.each(["height","width","reliableMarginRight"],function(b,c){var d=a.cssHooks[c]&&a.cssHooks[c].get;d&&(a.cssHooks[c].get=function(){var a;return y=!0,a=d.apply(this,arguments),y=!1,a})}),a.swap=function(a,b,c,e){var f,g,h={};y||d("jQuery.swap() is undocumented and deprecated");for(g in b)h[g]=a.style[g],a.style[g]=b[g];f=c.apply(a,e||[]);for(g in b)a.style[g]=h[g];return f},a.ajaxSetup({converters:{"text json":a.parseJSON}});var z=a.fn.data;a.fn.data=function(b){var e,f,g=this[0];return!g||"events"!==b||1!==arguments.length||(e=a.data(g,b),f=a._data(g,b),e!==c&&e!==f||f===c)?z.apply(this,arguments):(d("Use of jQuery.fn.data('events') is deprecated"),f)};var A=/\/(java|ecma)script/i;a.clean||(a.clean=function(b,c,e,f){c=c||document,c=!c.nodeType&&c[0]||c,c=c.ownerDocument||c,d("jQuery.clean() is deprecated");var g,h,i,j,k=[];if(a.merge(k,a.buildFragment(b,c).childNodes),e)for(i=function(a){return!a.type||A.test(a.type)?f?f.push(a.parentNode?a.parentNode.removeChild(a):a):e.appendChild(a):void 0},g=0;null!=(h=k[g]);g++)a.nodeName(h,"script")&&i(h)||(e.appendChild(h),"undefined"!=typeof h.getElementsByTagName&&(j=a.grep(a.merge([],h.getElementsByTagName("script")),i),k.splice.apply(k,[g+1,0].concat(j)),g+=j.length));return k});var B=a.event.add,C=a.event.remove,D=a.event.trigger,E=a.fn.toggle,F=a.fn.live,G=a.fn.die,H=a.fn.load,I="ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess",J=new RegExp("\\b(?:"+I+")\\b"),K=/(?:^|\s)hover(\.\S+|)\b/,L=function(b){return"string"!=typeof b||a.event.special.hover?b:(K.test(b)&&d("'hover' pseudo-event is deprecated, use 'mouseenter mouseleave'"),b&&b.replace(K,"mouseenter$1 mouseleave$1"))};a.event.props&&"attrChange"!==a.event.props[0]&&a.event.props.unshift("attrChange","attrName","relatedNode","srcElement"),a.event.dispatch&&e(a.event,"handle",a.event.dispatch,"jQuery.event.handle is undocumented and deprecated"),a.event.add=function(a,b,c,e,f){a!==document&&J.test(b)&&d("AJAX events should be attached to document: "+b),B.call(this,a,L(b||""),c,e,f)},a.event.remove=function(a,b,c,d,e){C.call(this,a,L(b)||"",c,d,e)},a.each(["load","unload","error"],function(b,c){a.fn[c]=function(){var a=Array.prototype.slice.call(arguments,0);return"load"===c&&"string"==typeof a[0]?H.apply(this,a):(d("jQuery.fn."+c+"() is deprecated"),a.splice(0,0,c),arguments.length?this.bind.apply(this,a):(this.triggerHandler.apply(this,a),this))}}),a.fn.toggle=function(b,c){if(!a.isFunction(b)||!a.isFunction(c))return E.apply(this,arguments);d("jQuery.fn.toggle(handler, handler...) is deprecated");var e=arguments,f=b.guid||a.guid++,g=0,h=function(c){var d=(a._data(this,"lastToggle"+b.guid)||0)%g;return a._data(this,"lastToggle"+b.guid,d+1),c.preventDefault(),e[d].apply(this,arguments)||!1};for(h.guid=f;g<e.length;)e[g++].guid=f;return this.click(h)},a.fn.live=function(b,c,e){return d("jQuery.fn.live() is deprecated"),F?F.apply(this,arguments):(a(this.context).on(b,this.selector,c,e),this)},a.fn.die=function(b,c){return d("jQuery.fn.die() is deprecated"),G?G.apply(this,arguments):(a(this.context).off(b,this.selector||"**",c),this)},a.event.trigger=function(a,b,c,e){return c||J.test(a)||d("Global events are undocumented and deprecated"),D.call(this,a,b,c||document,e)},a.each(I.split("|"),function(b,c){a.event.special[c]={setup:function(){var b=this;return b!==document&&(a.event.add(document,c+"."+a.guid,function(){a.event.trigger(c,Array.prototype.slice.call(arguments,1),b,!0)}),a._data(this,c,a.guid++)),!1},teardown:function(){return this!==document&&a.event.remove(document,c+"."+a._data(this,c)),!1}}}),a.event.special.ready={setup:function(){this===document&&d("'ready' event is deprecated")}};var M=a.fn.andSelf||a.fn.addBack,N=a.fn.find;if(a.fn.andSelf=function(){return d("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()"),M.apply(this,arguments)},a.fn.find=function(a){var b=N.apply(this,arguments);return b.context=this.context,b.selector=this.selector?this.selector+" "+a:a,b},a.Callbacks){var O=a.Deferred,P=[["resolve","done",a.Callbacks("once memory"),a.Callbacks("once memory"),"resolved"],["reject","fail",a.Callbacks("once memory"),a.Callbacks("once memory"),"rejected"],["notify","progress",a.Callbacks("memory"),a.Callbacks("memory")]];a.Deferred=function(b){var c=O(),e=c.promise();return c.pipe=e.pipe=function(){var b=arguments;return d("deferred.pipe() is deprecated"),a.Deferred(function(d){a.each(P,function(f,g){var h=a.isFunction(b[f])&&b[f];c[g[1]](function(){var b=h&&h.apply(this,arguments);b&&a.isFunction(b.promise)?b.promise().done(d.resolve).fail(d.reject).progress(d.notify):d[g[0]+"With"](this===e?d.promise():this,h?[b]:arguments)})}),b=null}).promise()},c.isResolved=function(){return d("deferred.isResolved is deprecated"),"resolved"===c.state()},c.isRejected=function(){return d("deferred.isRejected is deprecated"),"rejected"===c.state()},b&&b.call(c,c),c}}}(jQuery,window);
/*!
 * https://github.com/select2/select2/blob/master/dist/js/select2.full.js
 *
 * Note: This is a branded version with following changes:
 *  1) `jQuery.fn.select2` renamed to `jQuery.fn.wpmuiSelect`
 *     Replace occurances of "fn.select2" and ".select2(" in this file.
 *  2) Add/Set the following values to Defaults.prototype.reset()
 *     dropdownAutoWidth: true
 *     containerCssClass: 'wpmui-select2 :all:'
 *     dropdownCssClass: 'wpmui-select2'
 *
 * Select2 4.0.3
 * https://select2.github.io
 *
 * Released under the MIT license
 * https://github.com/select2/select2/blob/master/LICENSE.md
 */
(function(factory) {
	if (typeof define === 'function' && define.amd) {
		// AMD. Register as an anonymous module.
		define(['jquery'], factory);
	} else if (typeof exports === 'object') {
		// Node/CommonJS
		factory(require('jquery'));
	} else {
		// Browser globals
		factory(jQuery);
	}
}(function(jQuery) {
	// This is needed so we can catch the AMD loader configuration and use it
	// The inner file should be wrapped (by `banner.start.js`) in a function that
	// returns the AMD loader references.
	var S2 =
		(function() {
			// Restore the Select2 AMD loader so it can be used
			// Needed mostly in the language files, where the loader is not inserted
			if (jQuery && jQuery.fn && jQuery.fn.wpmuiSelect && jQuery.fn.wpmuiSelect.amd) {
				var S2 = jQuery.fn.wpmuiSelect.amd;
			}
			var S2;
			(function() {
				if (!S2 || !S2.requirejs) {
					if (!S2) {
						S2 = {};
					} else {
						require = S2;
					}
					/**
					 * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.
					 * Available via the MIT or new BSD license.
					 * see: https://github.com/jrburke/almond for details
					 */
					//Going sloppy to avoid 'use strict' string cost, but strict practices should
					//be followed.
					/*jslint sloppy: true */
					/*global setTimeout: false */

					var requirejs, require, define;
					(function(undef) {
						var main, req, makeMap, handlers,
							defined = {},
							waiting = {},
							config = {},
							defining = {},
							hasOwn = Object.prototype.hasOwnProperty,
							aps = [].slice,
							jsSuffixRegExp = /\.js$/;

						function hasProp(obj, prop) {
							return hasOwn.call(obj, prop);
						}

						/**
						 * Given a relative module name, like ./something, normalize it to
						 * a real name that can be mapped to a path.
						 * @param {String} name the relative name
						 * @param {String} baseName a real name that the name arg is relative
						 * to.
						 * @returns {String} normalized name
						 */

						function normalize(name, baseName) {
							var nameParts, nameSegment, mapValue, foundMap, lastIndex,
								foundI, foundStarMap, starI, i, j, part,
								baseParts = baseName && baseName.split("/"),
								map = config.map,
								starMap = (map && map['*']) || {};

							//Adjust any relative paths.
							if (name && name.charAt(0) === ".") {
								//If have a base name, try to normalize against it,
								//otherwise, assume it is a top-level require that will
								//be relative to baseUrl in the end.
								if (baseName) {
									name = name.split('/');
									lastIndex = name.length - 1;

									// Node .js allowance:
									if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {
										name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');
									}

									//Lop off the last part of baseParts, so that . matches the
									//"directory" and not name of the baseName's module. For instance,
									//baseName of "one/two/three", maps to "one/two/three.js", but we
									//want the directory, "one/two" for this normalization.
									name = baseParts.slice(0, baseParts.length - 1).concat(name);

									//start trimDots
									for (i = 0; i < name.length; i += 1) {
										part = name[i];
										if (part === ".") {
											name.splice(i, 1);
											i -= 1;
										} else if (part === "..") {
											if (i === 1 && (name[2] === '..' || name[0] === '..')) {
												//End of the line. Keep at least one non-dot
												//path segment at the front so it can be mapped
												//correctly to disk. Otherwise, there is likely
												//no path mapping for a path starting with '..'.
												//This can still fail, but catches the most reasonable
												//uses of ..
												break;
											} else if (i > 0) {
												name.splice(i - 1, 2);
												i -= 2;
											}
										}
									}
									//end trimDots

									name = name.join("/");
								} else if (name.indexOf('./') === 0) {
									// No baseName, so this is ID is resolved relative
									// to baseUrl, pull off the leading dot.
									name = name.substring(2);
								}
							}

							//Apply map config if available.
							if ((baseParts || starMap) && map) {
								nameParts = name.split('/');

								for (i = nameParts.length; i > 0; i -= 1) {
									nameSegment = nameParts.slice(0, i).join("/");

									if (baseParts) {
										//Find the longest baseName segment match in the config.
										//So, do joins on the biggest to smallest lengths of baseParts.
										for (j = baseParts.length; j > 0; j -= 1) {
											mapValue = map[baseParts.slice(0, j).join('/')];

											//baseName segment has  config, find if it has one for
											//this name.
											if (mapValue) {
												mapValue = mapValue[nameSegment];
												if (mapValue) {
													//Match, update name to the new value.
													foundMap = mapValue;
													foundI = i;
													break;
												}
											}
										}
									}

									if (foundMap) {
										break;
									}

									//Check for a star map match, but just hold on to it,
									//if there is a shorter segment match later in a matching
									//config, then favor over this star map.
									if (!foundStarMap && starMap && starMap[nameSegment]) {
										foundStarMap = starMap[nameSegment];
										starI = i;
									}
								}

								if (!foundMap && foundStarMap) {
									foundMap = foundStarMap;
									foundI = starI;
								}

								if (foundMap) {
									nameParts.splice(0, foundI, foundMap);
									name = nameParts.join('/');
								}
							}

							return name;
						}

						function makeRequire(relName, forceSync) {
							return function() {
								//A version of a require function that passes a moduleName
								//value for items that may need to
								//look up paths relative to the moduleName
								var args = aps.call(arguments, 0);

								//If first arg is not require('string'), and there is only
								//one arg, it is the array form without a callback. Insert
								//a null so that the following concat is correct.
								if (typeof args[0] !== 'string' && args.length === 1) {
									args.push(null);
								}
								return req.apply(undef, args.concat([relName, forceSync]));
							};
						}

						function makeNormalize(relName) {
							return function(name) {
								return normalize(name, relName);
							};
						}

						function makeLoad(depName) {
							return function(value) {
								defined[depName] = value;
							};
						}

						function callDep(name) {
							if (hasProp(waiting, name)) {
								var args = waiting[name];
								delete waiting[name];
								defining[name] = true;
								main.apply(undef, args);
							}

							if (!hasProp(defined, name) && !hasProp(defining, name)) {
								throw new Error('No ' + name);
							}
							return defined[name];
						}

						//Turns a plugin!resource to [plugin, resource]
						//with the plugin being undefined if the name
						//did not have a plugin prefix.

						function splitPrefix(name) {
							var prefix,
								index = name ? name.indexOf('!') : -1;
							if (index > -1) {
								prefix = name.substring(0, index);
								name = name.substring(index + 1, name.length);
							}
							return [prefix, name];
						}

						/**
						 * Makes a name map, normalizing the name, and using a plugin
						 * for normalization if necessary. Grabs a ref to plugin
						 * too, as an optimization.
						 */
						makeMap = function(name, relName) {
							var plugin,
								parts = splitPrefix(name),
								prefix = parts[0];

							name = parts[1];

							if (prefix) {
								prefix = normalize(prefix, relName);
								plugin = callDep(prefix);
							}

							//Normalize according
							if (prefix) {
								if (plugin && plugin.normalize) {
									name = plugin.normalize(name, makeNormalize(relName));
								} else {
									name = normalize(name, relName);
								}
							} else {
								name = normalize(name, relName);
								parts = splitPrefix(name);
								prefix = parts[0];
								name = parts[1];
								if (prefix) {
									plugin = callDep(prefix);
								}
							}

							//Using ridiculous property names for space reasons
							return {
								f: prefix ? prefix + '!' + name : name, //fullName
								n: name,
								pr: prefix,
								p: plugin
							};
						};

						function makeConfig(name) {
							return function() {
								return (config && config.config && config.config[name]) || {};
							};
						}

						handlers = {
							require: function(name) {
								return makeRequire(name);
							},
							exports: function(name) {
								var e = defined[name];
								if (typeof e !== 'undefined') {
									return e;
								} else {
									return (defined[name] = {});
								}
							},
							module: function(name) {
								return {
									id: name,
									uri: '',
									exports: defined[name],
									config: makeConfig(name)
								};
							}
						};

						main = function(name, deps, callback, relName) {
							var cjsModule, depName, ret, map, i,
								args = [],
								callbackType = typeof callback,
								usingExports;

							//Use name if no relName
							relName = relName || name;

							//Call the callback to define the module, if necessary.
							if (callbackType === 'undefined' || callbackType === 'function') {
								//Pull out the defined dependencies and pass the ordered
								//values to the callback.
								//Default to [require, exports, module] if no deps
								deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;
								for (i = 0; i < deps.length; i += 1) {
									map = makeMap(deps[i], relName);
									depName = map.f;

									//Fast path CommonJS standard dependencies.
									if (depName === "require") {
										args[i] = handlers.require(name);
									} else if (depName === "exports") {
										//CommonJS module spec 1.1
										args[i] = handlers.exports(name);
										usingExports = true;
									} else if (depName === "module") {
										//CommonJS module spec 1.1
										cjsModule = args[i] = handlers.module(name);
									} else if (hasProp(defined, depName) ||
										hasProp(waiting, depName) ||
										hasProp(defining, depName)) {
										args[i] = callDep(depName);
									} else if (map.p) {
										map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});
										args[i] = defined[depName];
									} else {
										throw new Error(name + ' missing ' + depName);
									}
								}

								ret = callback ? callback.apply(defined[name], args) : undefined;

								if (name) {
									//If setting exports via "module" is in play,
									//favor that over return value and exports. After that,
									//favor a non-undefined return value over exports use.
									if (cjsModule && cjsModule.exports !== undef &&
										cjsModule.exports !== defined[name]) {
										defined[name] = cjsModule.exports;
									} else if (ret !== undef || !usingExports) {
										//Use the return value from the function.
										defined[name] = ret;
									}
								}
							} else if (name) {
								//May just be an object definition for the module. Only
								//worry about defining if have a module name.
								defined[name] = callback;
							}
						};

						requirejs = require = req = function(deps, callback, relName, forceSync, alt) {
							if (typeof deps === "string") {
								if (handlers[deps]) {
									//callback in this case is really relName
									return handlers[deps](callback);
								}
								//Just return the module wanted. In this scenario, the
								//deps arg is the module name, and second arg (if passed)
								//is just the relName.
								//Normalize module name, if it contains . or ..
								return callDep(makeMap(deps, callback).f);
							} else if (!deps.splice) {
								//deps is a config object, not an array.
								config = deps;
								if (config.deps) {
									req(config.deps, config.callback);
								}
								if (!callback) {
									return;
								}

								if (callback.splice) {
									//callback is an array, which means it is a dependency list.
									//Adjust args if there are dependencies
									deps = callback;
									callback = relName;
									relName = null;
								} else {
									deps = undef;
								}
							}

							//Support require(['a'])
							callback = callback || function() {};

							//If relName is a function, it is an errback handler,
							//so remove it.
							if (typeof relName === 'function') {
								relName = forceSync;
								forceSync = alt;
							}

							//Simulate async callback;
							if (forceSync) {
								main(undef, deps, callback, relName);
							} else {
								//Using a non-zero value because of concern for what old browsers
								//do, and latest browsers "upgrade" to 4 if lower value is used:
								//https://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:
								//If want a value immediately, use require('id') instead -- something
								//that works in almond on the global level, but not guaranteed and
								//unlikely to work in other AMD implementations.
								setTimeout(function() {
									main(undef, deps, callback, relName);
								}, 4);
							}

							return req;
						};

						/**
						 * Just drops the config on the floor, but returns req in case
						 * the config return value is used.
						 */
						req.config = function(cfg) {
							return req(cfg);
						};

						/**
						 * Expose module registry for debugging and tooling
						 */
						requirejs._defined = defined;

						define = function(name, deps, callback) {
							if (typeof name !== 'string') {
								throw new Error('See almond README: incorrect module build, no module name');
							}

							//This module may not have dependencies
							if (!deps.splice) {
								//deps is not an array, so probably means
								//an object literal or factory function for
								//the value. Adjust args.
								callback = deps;
								deps = [];
							}

							if (!hasProp(defined, name) && !hasProp(waiting, name)) {
								waiting[name] = [name, deps, callback];
							}
						};

						define.amd = {
							jQuery: true
						};
					}());

					S2.requirejs = requirejs;
					S2.require = require;
					S2.define = define;
				}
			}());
			S2.define("almond", function() {});

			/* global jQuery:false, $:false */
			S2.define('jquery', [], function() {
				var _$ = jQuery || $;

				if (_$ == null && console && console.error) {
					console.error(
						'Select2: An instance of jQuery or a jQuery-compatible library was not ' +
						'found. Make sure that you are including jQuery before Select2 on your ' +
						'web page.'
					);
				}

				return _$;
			});

			S2.define('select2/utils', [
				'jquery'
			], function($) {
				var Utils = {};

				Utils.Extend = function(ChildClass, SuperClass) {
					var __hasProp = {}.hasOwnProperty;

					function BaseConstructor() {
						this.constructor = ChildClass;
					}

					for (var key in SuperClass) {
						if (__hasProp.call(SuperClass, key)) {
							ChildClass[key] = SuperClass[key];
						}
					}

					BaseConstructor.prototype = SuperClass.prototype;
					ChildClass.prototype = new BaseConstructor();
					ChildClass.__super__ = SuperClass.prototype;

					return ChildClass;
				};

				function getMethods(theClass) {
					var proto = theClass.prototype;

					var methods = [];

					for (var methodName in proto) {
						var m = proto[methodName];

						if (typeof m !== 'function') {
							continue;
						}

						if (methodName === 'constructor') {
							continue;
						}

						methods.push(methodName);
					}

					return methods;
				}

				Utils.Decorate = function(SuperClass, DecoratorClass) {
					var decoratedMethods = getMethods(DecoratorClass);
					var superMethods = getMethods(SuperClass);

					function DecoratedClass() {
						var unshift = Array.prototype.unshift;

						var argCount = DecoratorClass.prototype.constructor.length;

						var calledConstructor = SuperClass.prototype.constructor;

						if (argCount > 0) {
							unshift.call(arguments, SuperClass.prototype.constructor);

							calledConstructor = DecoratorClass.prototype.constructor;
						}

						calledConstructor.apply(this, arguments);
					}

					DecoratorClass.displayName = SuperClass.displayName;

					function ctr() {
						this.constructor = DecoratedClass;
					}

					DecoratedClass.prototype = new ctr();

					for (var m = 0; m < superMethods.length; m++) {
						var superMethod = superMethods[m];

						DecoratedClass.prototype[superMethod] =
							SuperClass.prototype[superMethod];
					}

					var calledMethod = function(methodName) {
						// Stub out the original method if it's not decorating an actual method
						var originalMethod = function() {};

						if (methodName in DecoratedClass.prototype) {
							originalMethod = DecoratedClass.prototype[methodName];
						}

						var decoratedMethod = DecoratorClass.prototype[methodName];

						return function() {
							var unshift = Array.prototype.unshift;

							unshift.call(arguments, originalMethod);

							return decoratedMethod.apply(this, arguments);
						};
					};

					for (var d = 0; d < decoratedMethods.length; d++) {
						var decoratedMethod = decoratedMethods[d];

						DecoratedClass.prototype[decoratedMethod] = calledMethod(decoratedMethod);
					}

					return DecoratedClass;
				};

				var Observable = function() {
					this.listeners = {};
				};

				Observable.prototype.on = function(event, callback) {
					this.listeners = this.listeners || {};

					if (event in this.listeners) {
						this.listeners[event].push(callback);
					} else {
						this.listeners[event] = [callback];
					}
				};

				Observable.prototype.trigger = function(event) {
					var slice = Array.prototype.slice;
					var params = slice.call(arguments, 1);

					this.listeners = this.listeners || {};

					// Params should always come in as an array
					if (params == null) {
						params = [];
					}

					// If there are no arguments to the event, use a temporary object
					if (params.length === 0) {
						params.push({});
					}

					// Set the `_type` of the first object to the event
					params[0]._type = event;

					if (event in this.listeners) {
						this.invoke(this.listeners[event], slice.call(arguments, 1));
					}

					if ('*' in this.listeners) {
						this.invoke(this.listeners['*'], arguments);
					}
				};

				Observable.prototype.invoke = function(listeners, params) {
					for (var i = 0, len = listeners.length; i < len; i++) {
						listeners[i].apply(this, params);
					}
				};

				Utils.Observable = Observable;

				Utils.generateChars = function(length) {
					var chars = '';

					for (var i = 0; i < length; i++) {
						var randomChar = Math.floor(Math.random() * 36);
						chars += randomChar.toString(36);
					}

					return chars;
				};

				Utils.bind = function(func, context) {
					return function() {
						func.apply(context, arguments);
					};
				};

				Utils._convertData = function(data) {
					for (var originalKey in data) {
						var keys = originalKey.split('-');

						var dataLevel = data;

						if (keys.length === 1) {
							continue;
						}

						for (var k = 0; k < keys.length; k++) {
							var key = keys[k];

							// Lowercase the first letter
							// By default, dash-separated becomes camelCase
							key = key.substring(0, 1).toLowerCase() + key.substring(1);

							if (!(key in dataLevel)) {
								dataLevel[key] = {};
							}

							if (k == keys.length - 1) {
								dataLevel[key] = data[originalKey];
							}

							dataLevel = dataLevel[key];
						}

						delete data[originalKey];
					}

					return data;
				};

				Utils.hasScroll = function(index, el) {
					// Adapted from the function created by @ShadowScripter
					// and adapted by @BillBarry on the Stack Exchange Code Review website.
					// The original code can be found at
					// https://codereview.stackexchange.com/q/13338
					// and was designed to be used with the Sizzle selector engine.

					var $el = $(el);
					var overflowX = el.style.overflowX;
					var overflowY = el.style.overflowY;

					//Check both x and y declarations
					if (overflowX === overflowY &&
						(overflowY === 'hidden' || overflowY === 'visible')) {
						return false;
					}

					if (overflowX === 'scroll' || overflowY === 'scroll') {
						return true;
					}

					return ($el.innerHeight() < el.scrollHeight ||
						$el.innerWidth() < el.scrollWidth);
				};

				Utils.escapeMarkup = function(markup) {
					var replaceMap = {
						'\\': '&#92;',
						'&': '&amp;',
						'<': '&lt;',
						'>': '&gt;',
						'"': '&quot;',
						'\'': '&#39;',
						'/': '&#47;'
					};

					// Do not try to escape the markup if it's not a string
					if (typeof markup !== 'string') {
						return markup;
					}

					return String(markup).replace(/[&<>"'\/\\]/g, function(match) {
						return replaceMap[match];
					});
				};

				// Append an array of jQuery nodes to a given element.
				Utils.appendMany = function($element, $nodes) {
					// jQuery 1.7.x does not support $.fn.append() with an array
					// Fall back to a jQuery object collection using $.fn.add()
					if ($.fn.jquery.substr(0, 3) === '1.7') {
						var $jqNodes = $();

						$.map($nodes, function(node) {
							$jqNodes = $jqNodes.add(node);
						});

						$nodes = $jqNodes;
					}

					$element.append($nodes);
				};

				return Utils;
			});

			S2.define('select2/results', [
				'jquery',
				'./utils'
			], function($, Utils) {
				function Results($element, options, dataAdapter) {
					this.$element = $element;
					this.data = dataAdapter;
					this.options = options;

					Results.__super__.constructor.call(this);
				}

				Utils.Extend(Results, Utils.Observable);

				Results.prototype.render = function() {
					var $results = $(
						'<ul class="select2-results__options" role="tree"></ul>'
					);

					if (this.options.get('multiple')) {
						$results.attr('aria-multiselectable', 'true');
					}

					this.$results = $results;

					return $results;
				};

				Results.prototype.clear = function() {
					this.$results.empty();
				};

				Results.prototype.displayMessage = function(params) {
					var escapeMarkup = this.options.get('escapeMarkup');

					this.clear();
					this.hideLoading();

					var $message = $(
						'<li role="treeitem" aria-live="assertive"' +
						' class="select2-results__option"></li>'
					);

					var message = this.options.get('translations').get(params.message);

					$message.append(
						escapeMarkup(
							message(params.args)
						)
					);

					$message[0].className += ' select2-results__message';

					this.$results.append($message);
				};

				Results.prototype.hideMessages = function() {
					this.$results.find('.select2-results__message').remove();
				};

				Results.prototype.append = function(data) {
					this.hideLoading();

					var $options = [];

					if (data.results == null || data.results.length === 0) {
						if (this.$results.children().length === 0) {
							this.trigger('results:message', {
								message: 'noResults'
							});
						}

						return;
					}

					data.results = this.sort(data.results);

					for (var d = 0; d < data.results.length; d++) {
						var item = data.results[d];

						var $option = this.option(item);

						$options.push($option);
					}

					this.$results.append($options);
				};

				Results.prototype.position = function($results, $dropdown) {
					var $resultsContainer = $dropdown.find('.select2-results');
					$resultsContainer.append($results);
				};

				Results.prototype.sort = function(data) {
					var sorter = this.options.get('sorter');

					return sorter(data);
				};

				Results.prototype.highlightFirstItem = function() {
					var $options = this.$results
						.find('.select2-results__option[aria-selected]');

					var $selected = $options.filter('[aria-selected=true]');

					// Check if there are any selected options
					if ($selected.length > 0) {
						// If there are selected options, highlight the first
						$selected.first().trigger('mouseenter');
					} else {
						// If there are no selected options, highlight the first option
						// in the dropdown
						$options.first().trigger('mouseenter');
					}

					this.ensureHighlightVisible();
				};

				Results.prototype.setClasses = function() {
					var self = this;

					this.data.current(function(selected) {
						var selectedIds = $.map(selected, function(s) {
							return s.id.toString();
						});

						var $options = self.$results
							.find('.select2-results__option[aria-selected]');

						$options.each(function() {
							var $option = $(this);

							var item = $.data(this, 'data');

							// id needs to be converted to a string when comparing
							var id = '' + item.id;

							if ((item.element != null && item.element.selected) ||
								(item.element == null && $.inArray(id, selectedIds) > -1)) {
								$option.attr('aria-selected', 'true');
							} else {
								$option.attr('aria-selected', 'false');
							}
						});

					});
				};

				Results.prototype.showLoading = function(params) {
					this.hideLoading();

					var loadingMore = this.options.get('translations').get('searching');

					var loading = {
						disabled: true,
						loading: true,
						text: loadingMore(params)
					};
					var $loading = this.option(loading);
					$loading.className += ' loading-results';

					this.$results.prepend($loading);
				};

				Results.prototype.hideLoading = function() {
					this.$results.find('.loading-results').remove();
				};

				Results.prototype.option = function(data) {
					var option = document.createElement('li');
					option.className = 'select2-results__option';

					var attrs = {
						'role': 'treeitem',
						'aria-selected': 'false'
					};

					if (data.disabled) {
						delete attrs['aria-selected'];
						attrs['aria-disabled'] = 'true';
					}

					if (data.id == null) {
						delete attrs['aria-selected'];
					}

					if (data._resultId != null) {
						option.id = data._resultId;
					}

					if (data.title) {
						option.title = data.title;
					}

					if (data.children) {
						attrs.role = 'group';
						attrs['aria-label'] = data.text;
						delete attrs['aria-selected'];
					}

					for (var attr in attrs) {
						var val = attrs[attr];

						option.setAttribute(attr, val);
					}

					if (data.children) {
						var $option = $(option);

						var label = document.createElement('strong');
						label.className = 'select2-results__group';

						var $label = $(label);
						this.template(data, label);

						var $children = [];

						for (var c = 0; c < data.children.length; c++) {
							var child = data.children[c];

							var $child = this.option(child);

							$children.push($child);
						}

						var $childrenContainer = $('<ul></ul>', {
							'class': 'select2-results__options select2-results__options--nested'
						});

						$childrenContainer.append($children);

						$option.append(label);
						$option.append($childrenContainer);
					} else {
						this.template(data, option);
					}

					$.data(option, 'data', data);

					return option;
				};

				Results.prototype.bind = function(container, $container) {
					var self = this;

					var id = container.id + '-results';

					this.$results.attr('id', id);

					container.on('results:all', function(params) {
						self.clear();
						self.append(params.data);

						if (container.isOpen()) {
							self.setClasses();
							self.highlightFirstItem();
						}
					});

					container.on('results:append', function(params) {
						self.append(params.data);

						if (container.isOpen()) {
							self.setClasses();
						}
					});

					container.on('query', function(params) {
						self.hideMessages();
						self.showLoading(params);
					});

					container.on('select', function() {
						if (!container.isOpen()) {
							return;
						}

						self.setClasses();
						self.highlightFirstItem();
					});

					container.on('unselect', function() {
						if (!container.isOpen()) {
							return;
						}

						self.setClasses();
						self.highlightFirstItem();
					});

					container.on('open', function() {
						// When the dropdown is open, aria-expended="true"
						self.$results.attr('aria-expanded', 'true');
						self.$results.attr('aria-hidden', 'false');

						self.setClasses();
						self.ensureHighlightVisible();
					});

					container.on('close', function() {
						// When the dropdown is closed, aria-expended="false"
						self.$results.attr('aria-expanded', 'false');
						self.$results.attr('aria-hidden', 'true');
						self.$results.removeAttr('aria-activedescendant');
					});

					container.on('results:toggle', function() {
						var $highlighted = self.getHighlightedResults();

						if ($highlighted.length === 0) {
							return;
						}

						$highlighted.trigger('mouseup');
					});

					container.on('results:select', function() {
						var $highlighted = self.getHighlightedResults();

						if ($highlighted.length === 0) {
							return;
						}

						var data = $highlighted.data('data');

						if ($highlighted.attr('aria-selected') == 'true') {
							self.trigger('close', {});
						} else {
							self.trigger('select', {
								data: data
							});
						}
					});

					container.on('results:previous', function() {
						var $highlighted = self.getHighlightedResults();

						var $options = self.$results.find('[aria-selected]');

						var currentIndex = $options.index($highlighted);

						// If we are already at te top, don't move further
						if (currentIndex === 0) {
							return;
						}

						var nextIndex = currentIndex - 1;

						// If none are highlighted, highlight the first
						if ($highlighted.length === 0) {
							nextIndex = 0;
						}

						var $next = $options.eq(nextIndex);

						$next.trigger('mouseenter');

						var currentOffset = self.$results.offset().top;
						var nextTop = $next.offset().top;
						var nextOffset = self.$results.scrollTop() + (nextTop - currentOffset);

						if (nextIndex === 0) {
							self.$results.scrollTop(0);
						} else if (nextTop - currentOffset < 0) {
							self.$results.scrollTop(nextOffset);
						}
					});

					container.on('results:next', function() {
						var $highlighted = self.getHighlightedResults();

						var $options = self.$results.find('[aria-selected]');

						var currentIndex = $options.index($highlighted);

						var nextIndex = currentIndex + 1;

						// If we are at the last option, stay there
						if (nextIndex >= $options.length) {
							return;
						}

						var $next = $options.eq(nextIndex);

						$next.trigger('mouseenter');

						var currentOffset = self.$results.offset().top +
							self.$results.outerHeight(false);
						var nextBottom = $next.offset().top + $next.outerHeight(false);
						var nextOffset = self.$results.scrollTop() + nextBottom - currentOffset;

						if (nextIndex === 0) {
							self.$results.scrollTop(0);
						} else if (nextBottom > currentOffset) {
							self.$results.scrollTop(nextOffset);
						}
					});

					container.on('results:focus', function(params) {
						params.element.addClass('select2-results__option--highlighted');
					});

					container.on('results:message', function(params) {
						self.displayMessage(params);
					});

					if ($.fn.mousewheel) {
						this.$results.on('mousewheel', function(e) {
							var top = self.$results.scrollTop();

							var bottom = self.$results.get(0).scrollHeight - top + e.deltaY;

							var isAtTop = e.deltaY > 0 && top - e.deltaY <= 0;
							var isAtBottom = e.deltaY < 0 && bottom <= self.$results.height();

							if (isAtTop) {
								self.$results.scrollTop(0);

								e.preventDefault();
								e.stopPropagation();
							} else if (isAtBottom) {
								self.$results.scrollTop(
									self.$results.get(0).scrollHeight - self.$results.height()
								);

								e.preventDefault();
								e.stopPropagation();
							}
						});
					}

					this.$results.on('mouseup', '.select2-results__option[aria-selected]',
						function(evt) {
							var $this = $(this);

							var data = $this.data('data');

							if ($this.attr('aria-selected') === 'true') {
								if (self.options.get('multiple')) {
									self.trigger('unselect', {
										originalEvent: evt,
										data: data
									});
								} else {
									self.trigger('close', {});
								}

								return;
							}

							self.trigger('select', {
								originalEvent: evt,
								data: data
							});
						});

					this.$results.on('mouseenter', '.select2-results__option[aria-selected]',
						function(evt) {
							var data = $(this).data('data');

							self.getHighlightedResults()
								.removeClass('select2-results__option--highlighted');

							self.trigger('results:focus', {
								data: data,
								element: $(this)
							});
						});
				};

				Results.prototype.getHighlightedResults = function() {
					var $highlighted = this.$results
						.find('.select2-results__option--highlighted');

					return $highlighted;
				};

				Results.prototype.destroy = function() {
					this.$results.remove();
				};

				Results.prototype.ensureHighlightVisible = function() {
					var $highlighted = this.getHighlightedResults();

					if ($highlighted.length === 0) {
						return;
					}

					var $options = this.$results.find('[aria-selected]');

					var currentIndex = $options.index($highlighted);

					var currentOffset = this.$results.offset().top;
					var nextTop = $highlighted.offset().top;
					var nextOffset = this.$results.scrollTop() + (nextTop - currentOffset);

					var offsetDelta = nextTop - currentOffset;
					nextOffset -= $highlighted.outerHeight(false) * 2;

					if (currentIndex <= 2) {
						this.$results.scrollTop(0);
					} else if (offsetDelta > this.$results.outerHeight() || offsetDelta < 0) {
						this.$results.scrollTop(nextOffset);
					}
				};

				Results.prototype.template = function(result, container) {
					var template = this.options.get('templateResult');
					var escapeMarkup = this.options.get('escapeMarkup');

					var content = template(result, container);

					if (content == null) {
						container.style.display = 'none';
					} else if (typeof content === 'string') {
						container.innerHTML = escapeMarkup(content);
					} else {
						$(container).append(content);
					}
				};

				return Results;
			});

			S2.define('select2/keys', [

			], function() {
				var KEYS = {
					BACKSPACE: 8,
					TAB: 9,
					ENTER: 13,
					SHIFT: 16,
					CTRL: 17,
					ALT: 18,
					ESC: 27,
					SPACE: 32,
					PAGE_UP: 33,
					PAGE_DOWN: 34,
					END: 35,
					HOME: 36,
					LEFT: 37,
					UP: 38,
					RIGHT: 39,
					DOWN: 40,
					DELETE: 46
				};

				return KEYS;
			});

			S2.define('select2/selection/base', [
				'jquery',
				'../utils',
				'../keys'
			], function($, Utils, KEYS) {
				function BaseSelection($element, options) {
					this.$element = $element;
					this.options = options;

					BaseSelection.__super__.constructor.call(this);
				}

				Utils.Extend(BaseSelection, Utils.Observable);

				BaseSelection.prototype.render = function() {
					var $selection = $(
						'<span class="select2-selection" role="combobox" ' +
						' aria-haspopup="true" aria-expanded="false">' +
						'</span>'
					);

					this._tabindex = 0;

					if (this.$element.data('old-tabindex') != null) {
						this._tabindex = this.$element.data('old-tabindex');
					} else if (this.$element.attr('tabindex') != null) {
						this._tabindex = this.$element.attr('tabindex');
					}

					$selection.attr('title', this.$element.attr('title'));
					$selection.attr('tabindex', this._tabindex);

					this.$selection = $selection;

					return $selection;
				};

				BaseSelection.prototype.bind = function(container, $container) {
					var self = this;

					var id = container.id + '-container';
					var resultsId = container.id + '-results';

					this.container = container;

					this.$selection.on('focus', function(evt) {
						self.trigger('focus', evt);
					});

					this.$selection.on('blur', function(evt) {
						self._handleBlur(evt);
					});

					this.$selection.on('keydown', function(evt) {
						self.trigger('keypress', evt);

						if (evt.which === KEYS.SPACE) {
							evt.preventDefault();
						}
					});

					container.on('results:focus', function(params) {
						self.$selection.attr('aria-activedescendant', params.data._resultId);
					});

					container.on('selection:update', function(params) {
						self.update(params.data);
					});

					container.on('open', function() {
						// When the dropdown is open, aria-expanded="true"
						self.$selection.attr('aria-expanded', 'true');
						self.$selection.attr('aria-owns', resultsId);

						self._attachCloseHandler(container);
					});

					container.on('close', function() {
						// When the dropdown is closed, aria-expanded="false"
						self.$selection.attr('aria-expanded', 'false');
						self.$selection.removeAttr('aria-activedescendant');
						self.$selection.removeAttr('aria-owns');

						self.$selection.focus();

						self._detachCloseHandler(container);
					});

					container.on('enable', function() {
						self.$selection.attr('tabindex', self._tabindex);
					});

					container.on('disable', function() {
						self.$selection.attr('tabindex', '-1');
					});
				};

				BaseSelection.prototype._handleBlur = function(evt) {
					var self = this;

					// This needs to be delayed as the active element is the body when the tab
					// key is pressed, possibly along with others.
					window.setTimeout(function() {
						// Don't trigger `blur` if the focus is still in the selection
						if (
							(document.activeElement == self.$selection[0]) ||
							($.contains(self.$selection[0], document.activeElement))
						) {
							return;
						}

						self.trigger('blur', evt);
					}, 1);
				};

				BaseSelection.prototype._attachCloseHandler = function(container) {
					var self = this;

					$(document.body).on('mousedown.select2.' + container.id, function(e) {
						var $target = $(e.target);

						var $select = $target.closest('.select2');

						var $all = $('.select2.select2-container--open');

						$all.each(function() {
							var $this = $(this);

							if (this == $select[0]) {
								return;
							}

							var $element = $this.data('element');

							$element.wpmuiSelect('close');
						});
					});
				};

				BaseSelection.prototype._detachCloseHandler = function(container) {
					$(document.body).off('mousedown.select2.' + container.id);
				};

				BaseSelection.prototype.position = function($selection, $container) {
					var $selectionContainer = $container.find('.selection');
					$selectionContainer.append($selection);
				};

				BaseSelection.prototype.destroy = function() {
					this._detachCloseHandler(this.container);
				};

				BaseSelection.prototype.update = function(data) {
					throw new Error('The `update` method must be defined in child classes.');
				};

				return BaseSelection;
			});

			S2.define('select2/selection/single', [
				'jquery',
				'./base',
				'../utils',
				'../keys'
			], function($, BaseSelection, Utils, KEYS) {
				function SingleSelection() {
					SingleSelection.__super__.constructor.apply(this, arguments);
				}

				Utils.Extend(SingleSelection, BaseSelection);

				SingleSelection.prototype.render = function() {
					var $selection = SingleSelection.__super__.render.call(this);

					$selection.addClass('select2-selection--single');

					$selection.html(
						'<span class="select2-selection__rendered"></span>' +
						'<span class="select2-selection__arrow" role="presentation">' +
						'<b role="presentation"></b>' +
						'</span>'
					);

					return $selection;
				};

				SingleSelection.prototype.bind = function(container, $container) {
					var self = this;

					SingleSelection.__super__.bind.apply(this, arguments);

					var id = container.id + '-container';

					this.$selection.find('.select2-selection__rendered').attr('id', id);
					this.$selection.attr('aria-labelledby', id);

					this.$selection.on('mousedown', function(evt) {
						// Only respond to left clicks
						if (evt.which !== 1) {
							return;
						}

						self.trigger('toggle', {
							originalEvent: evt
						});
					});

					this.$selection.on('focus', function(evt) {
						// User focuses on the container
					});

					this.$selection.on('blur', function(evt) {
						// User exits the container
					});

					container.on('focus', function(evt) {
						if (!container.isOpen()) {
							self.$selection.focus();
						}
					});

					container.on('selection:update', function(params) {
						self.update(params.data);
					});
				};

				SingleSelection.prototype.clear = function() {
					this.$selection.find('.select2-selection__rendered').empty();
				};

				SingleSelection.prototype.display = function(data, container) {
					var template = this.options.get('templateSelection');
					var escapeMarkup = this.options.get('escapeMarkup');

					return escapeMarkup(template(data, container));
				};

				SingleSelection.prototype.selectionContainer = function() {
					return $('<span></span>');
				};

				SingleSelection.prototype.update = function(data) {
					if (data.length === 0) {
						this.clear();
						return;
					}

					var selection = data[0];

					var $rendered = this.$selection.find('.select2-selection__rendered');
					var formatted = this.display(selection, $rendered);

					$rendered.empty().append(formatted);
					$rendered.prop('title', selection.title || selection.text);
				};

				return SingleSelection;
			});

			S2.define('select2/selection/multiple', [
				'jquery',
				'./base',
				'../utils'
			], function($, BaseSelection, Utils) {
				function MultipleSelection($element, options) {
					MultipleSelection.__super__.constructor.apply(this, arguments);
				}

				Utils.Extend(MultipleSelection, BaseSelection);

				MultipleSelection.prototype.render = function() {
					var $selection = MultipleSelection.__super__.render.call(this);

					$selection.addClass('select2-selection--multiple');

					$selection.html(
						'<ul class="select2-selection__rendered"></ul>'
					);

					return $selection;
				};

				MultipleSelection.prototype.bind = function(container, $container) {
					var self = this;

					MultipleSelection.__super__.bind.apply(this, arguments);

					this.$selection.on('click', function(evt) {
						self.trigger('toggle', {
							originalEvent: evt
						});
					});

					this.$selection.on(
						'click',
						'.select2-selection__choice__remove',
						function(evt) {
							// Ignore the event if it is disabled
							if (self.options.get('disabled')) {
								return;
							}

							var $remove = $(this);
							var $selection = $remove.parent();

							var data = $selection.data('data');

							self.trigger('unselect', {
								originalEvent: evt,
								data: data
							});
						}
					);
				};

				MultipleSelection.prototype.clear = function() {
					this.$selection.find('.select2-selection__rendered').empty();
				};

				MultipleSelection.prototype.display = function(data, container) {
					var template = this.options.get('templateSelection');
					var escapeMarkup = this.options.get('escapeMarkup');

					return escapeMarkup(template(data, container));
				};

				MultipleSelection.prototype.selectionContainer = function() {
					var $container = $(
						'<li class="select2-selection__choice">' +
						'<span class="select2-selection__choice__remove" role="presentation">' +
						'&times;' +
						'</span>' +
						'</li>'
					);

					return $container;
				};

				MultipleSelection.prototype.update = function(data) {
					this.clear();

					if (data.length === 0) {
						return;
					}

					var $selections = [];

					for (var d = 0; d < data.length; d++) {
						var selection = data[d];

						var $selection = this.selectionContainer();
						var formatted = this.display(selection, $selection);

						$selection.append(formatted);
						$selection.prop('title', selection.title || selection.text);

						$selection.data('data', selection);

						$selections.push($selection);
					}

					var $rendered = this.$selection.find('.select2-selection__rendered');

					Utils.appendMany($rendered, $selections);
				};

				return MultipleSelection;
			});

			S2.define('select2/selection/placeholder', [
				'../utils'
			], function(Utils) {
				function Placeholder(decorated, $element, options) {
					this.placeholder = this.normalizePlaceholder(options.get('placeholder'));

					decorated.call(this, $element, options);
				}

				Placeholder.prototype.normalizePlaceholder = function(_, placeholder) {
					if (typeof placeholder === 'string') {
						placeholder = {
							id: '',
							text: placeholder
						};
					}

					return placeholder;
				};

				Placeholder.prototype.createPlaceholder = function(decorated, placeholder) {
					var $placeholder = this.selectionContainer();

					$placeholder.html(this.display(placeholder));
					$placeholder.addClass('select2-selection__placeholder')
						.removeClass('select2-selection__choice');

					return $placeholder;
				};

				Placeholder.prototype.update = function(decorated, data) {
					var singlePlaceholder = (
						data.length == 1 && data[0].id != this.placeholder.id
					);
					var multipleSelections = data.length > 1;

					if (multipleSelections || singlePlaceholder) {
						return decorated.call(this, data);
					}

					this.clear();

					var $placeholder = this.createPlaceholder(this.placeholder);

					this.$selection.find('.select2-selection__rendered').append($placeholder);
				};

				return Placeholder;
			});

			S2.define('select2/selection/allowClear', [
				'jquery',
				'../keys'
			], function($, KEYS) {
				function AllowClear() {}

				AllowClear.prototype.bind = function(decorated, container, $container) {
					var self = this;

					decorated.call(this, container, $container);

					if (this.placeholder == null) {
						if (this.options.get('debug') && window.console && console.error) {
							console.error(
								'Select2: The `allowClear` option should be used in combination ' +
								'with the `placeholder` option.'
							);
						}
					}

					this.$selection.on('mousedown', '.select2-selection__clear',
						function(evt) {
							self._handleClear(evt);
						});

					container.on('keypress', function(evt) {
						self._handleKeyboardClear(evt, container);
					});
				};

				AllowClear.prototype._handleClear = function(_, evt) {
					// Ignore the event if it is disabled
					if (this.options.get('disabled')) {
						return;
					}

					var $clear = this.$selection.find('.select2-selection__clear');

					// Ignore the event if nothing has been selected
					if ($clear.length === 0) {
						return;
					}

					evt.stopPropagation();

					var data = $clear.data('data');

					for (var d = 0; d < data.length; d++) {
						var unselectData = {
							data: data[d]
						};

						// Trigger the `unselect` event, so people can prevent it from being
						// cleared.
						this.trigger('unselect', unselectData);

						// If the event was prevented, don't clear it out.
						if (unselectData.prevented) {
							return;
						}
					}

					this.$element.val(this.placeholder.id).trigger('change');

					this.trigger('toggle', {});
				};

				AllowClear.prototype._handleKeyboardClear = function(_, evt, container) {
					if (container.isOpen()) {
						return;
					}

					if (evt.which == KEYS.DELETE || evt.which == KEYS.BACKSPACE) {
						this._handleClear(evt);
					}
				};

				AllowClear.prototype.update = function(decorated, data) {
					decorated.call(this, data);

					if (this.$selection.find('.select2-selection__placeholder').length > 0 ||
						data.length === 0) {
						return;
					}

					var $remove = $(
						'<span class="select2-selection__clear">' +
						'&times;' +
						'</span>'
					);
					$remove.data('data', data);

					this.$selection.find('.select2-selection__rendered').prepend($remove);
				};

				return AllowClear;
			});

			S2.define('select2/selection/search', [
				'jquery',
				'../utils',
				'../keys'
			], function($, Utils, KEYS) {
				function Search(decorated, $element, options) {
					decorated.call(this, $element, options);
				}

				Search.prototype.render = function(decorated) {
					var $search = $(
						'<li class="select2-search select2-search--inline">' +
						'<input class="select2-search__field" type="search" tabindex="-1"' +
						' autocomplete="off" autocorrect="off" autocapitalize="off"' +
						' spellcheck="false" role="textbox" aria-autocomplete="list" />' +
						'</li>'
					);

					this.$searchContainer = $search;
					this.$search = $search.find('input');

					var $rendered = decorated.call(this);

					this._transferTabIndex();

					return $rendered;
				};

				Search.prototype.bind = function(decorated, container, $container) {
					var self = this;

					decorated.call(this, container, $container);

					container.on('open', function() {
						self.$search.trigger('focus');
					});

					container.on('close', function() {
						self.$search.val('');
						self.$search.removeAttr('aria-activedescendant');
						self.$search.trigger('focus');
					});

					container.on('enable', function() {
						self.$search.prop('disabled', false);

						self._transferTabIndex();
					});

					container.on('disable', function() {
						self.$search.prop('disabled', true);
					});

					container.on('focus', function(evt) {
						self.$search.trigger('focus');
					});

					container.on('results:focus', function(params) {
						self.$search.attr('aria-activedescendant', params.id);
					});

					this.$selection.on('focusin', '.select2-search--inline', function(evt) {
						self.trigger('focus', evt);
					});

					this.$selection.on('focusout', '.select2-search--inline', function(evt) {
						self._handleBlur(evt);
					});

					this.$selection.on('keydown', '.select2-search--inline', function(evt) {
						evt.stopPropagation();

						self.trigger('keypress', evt);

						self._keyUpPrevented = evt.isDefaultPrevented();

						var key = evt.which;

						if (key === KEYS.BACKSPACE && self.$search.val() === '') {
							var $previousChoice = self.$searchContainer
								.prev('.select2-selection__choice');

							if ($previousChoice.length > 0) {
								var item = $previousChoice.data('data');

								self.searchRemoveChoice(item);

								evt.preventDefault();
							}
						}
					});

					// Try to detect the IE version should the `documentMode` property that
					// is stored on the document. This is only implemented in IE and is
					// slightly cleaner than doing a user agent check.
					// This property is not available in Edge, but Edge also doesn't have
					// this bug.
					var msie = document.documentMode;
					var disableInputEvents = msie && msie <= 11;

					// Workaround for browsers which do not support the `input` event
					// This will prevent double-triggering of events for browsers which support
					// both the `keyup` and `input` events.
					this.$selection.on(
						'input.searchcheck',
						'.select2-search--inline',
						function(evt) {
							// IE will trigger the `input` event when a placeholder is used on a
							// search box. To get around this issue, we are forced to ignore all
							// `input` events in IE and keep using `keyup`.
							if (disableInputEvents) {
								self.$selection.off('input.search input.searchcheck');
								return;
							}

							// Unbind the duplicated `keyup` event
							self.$selection.off('keyup.search');
						}
					);

					this.$selection.on(
						'keyup.search input.search',
						'.select2-search--inline',
						function(evt) {
							// IE will trigger the `input` event when a placeholder is used on a
							// search box. To get around this issue, we are forced to ignore all
							// `input` events in IE and keep using `keyup`.
							if (disableInputEvents && evt.type === 'input') {
								self.$selection.off('input.search input.searchcheck');
								return;
							}

							var key = evt.which;

							// We can freely ignore events from modifier keys
							if (key == KEYS.SHIFT || key == KEYS.CTRL || key == KEYS.ALT) {
								return;
							}

							// Tabbing will be handled during the `keydown` phase
							if (key == KEYS.TAB) {
								return;
							}

							self.handleSearch(evt);
						}
					);
				};

				/**
				 * This method will transfer the tabindex attribute from the rendered
				 * selection to the search box. This allows for the search box to be used as
				 * the primary focus instead of the selection container.
				 *
				 * @private
				 */
				Search.prototype._transferTabIndex = function(decorated) {
					this.$search.attr('tabindex', this.$selection.attr('tabindex'));
					this.$selection.attr('tabindex', '-1');
				};

				Search.prototype.createPlaceholder = function(decorated, placeholder) {
					this.$search.attr('placeholder', placeholder.text);
				};

				Search.prototype.update = function(decorated, data) {
					var searchHadFocus = this.$search[0] == document.activeElement;

					this.$search.attr('placeholder', '');

					decorated.call(this, data);

					this.$selection.find('.select2-selection__rendered')
						.append(this.$searchContainer);

					this.resizeSearch();
					if (searchHadFocus) {
						this.$search.focus();
					}
				};

				Search.prototype.handleSearch = function() {
					this.resizeSearch();

					if (!this._keyUpPrevented) {
						var input = this.$search.val();

						this.trigger('query', {
							term: input
						});
					}

					this._keyUpPrevented = false;
				};

				Search.prototype.searchRemoveChoice = function(decorated, item) {
					this.trigger('unselect', {
						data: item
					});

					this.$search.val(item.text);
					this.handleSearch();
				};

				Search.prototype.resizeSearch = function() {
					this.$search.css('width', '25px');

					var width = '';

					if (this.$search.attr('placeholder') !== '') {
						width = this.$selection.find('.select2-selection__rendered').innerWidth();
					} else {
						var minimumWidth = this.$search.val().length + 1;

						width = (minimumWidth * 0.75) + 'em';
					}

					this.$search.css('width', width);
				};

				return Search;
			});

			S2.define('select2/selection/eventRelay', [
				'jquery'
			], function($) {
				function EventRelay() {}

				EventRelay.prototype.bind = function(decorated, container, $container) {
					var self = this;
					var relayEvents = [
						'open', 'opening',
						'close', 'closing',
						'select', 'selecting',
						'unselect', 'unselecting'
					];

					var preventableEvents = ['opening', 'closing', 'selecting', 'unselecting'];

					decorated.call(this, container, $container);

					container.on('*', function(name, params) {
						// Ignore events that should not be relayed
						if ($.inArray(name, relayEvents) === -1) {
							return;
						}

						// The parameters should always be an object
						params = params || {};

						// Generate the jQuery event for the Select2 event
						var evt = $.Event('select2:' + name, {
							params: params
						});

						self.$element.trigger(evt);

						// Only handle preventable events if it was one
						if ($.inArray(name, preventableEvents) === -1) {
							return;
						}

						params.prevented = evt.isDefaultPrevented();
					});
				};

				return EventRelay;
			});

			S2.define('select2/translation', [
				'jquery',
				'require'
			], function($, require) {
				function Translation(dict) {
					this.dict = dict || {};
				}

				Translation.prototype.all = function() {
					return this.dict;
				};

				Translation.prototype.get = function(key) {
					return this.dict[key];
				};

				Translation.prototype.extend = function(translation) {
					this.dict = $.extend({}, translation.all(), this.dict);
				};

				// Static functions

				Translation._cache = {};

				Translation.loadPath = function(path) {
					if (!(path in Translation._cache)) {
						var translations = require(path);

						Translation._cache[path] = translations;
					}

					return new Translation(Translation._cache[path]);
				};

				return Translation;
			});

			S2.define('select2/diacritics', [

			], function() {
				var diacritics = {
					'\u24B6': 'A',
					'\uFF21': 'A',
					'\u00C0': 'A',
					'\u00C1': 'A',
					'\u00C2': 'A',
					'\u1EA6': 'A',
					'\u1EA4': 'A',
					'\u1EAA': 'A',
					'\u1EA8': 'A',
					'\u00C3': 'A',
					'\u0100': 'A',
					'\u0102': 'A',
					'\u1EB0': 'A',
					'\u1EAE': 'A',
					'\u1EB4': 'A',
					'\u1EB2': 'A',
					'\u0226': 'A',
					'\u01E0': 'A',
					'\u00C4': 'A',
					'\u01DE': 'A',
					'\u1EA2': 'A',
					'\u00C5': 'A',
					'\u01FA': 'A',
					'\u01CD': 'A',
					'\u0200': 'A',
					'\u0202': 'A',
					'\u1EA0': 'A',
					'\u1EAC': 'A',
					'\u1EB6': 'A',
					'\u1E00': 'A',
					'\u0104': 'A',
					'\u023A': 'A',
					'\u2C6F': 'A',
					'\uA732': 'AA',
					'\u00C6': 'AE',
					'\u01FC': 'AE',
					'\u01E2': 'AE',
					'\uA734': 'AO',
					'\uA736': 'AU',
					'\uA738': 'AV',
					'\uA73A': 'AV',
					'\uA73C': 'AY',
					'\u24B7': 'B',
					'\uFF22': 'B',
					'\u1E02': 'B',
					'\u1E04': 'B',
					'\u1E06': 'B',
					'\u0243': 'B',
					'\u0182': 'B',
					'\u0181': 'B',
					'\u24B8': 'C',
					'\uFF23': 'C',
					'\u0106': 'C',
					'\u0108': 'C',
					'\u010A': 'C',
					'\u010C': 'C',
					'\u00C7': 'C',
					'\u1E08': 'C',
					'\u0187': 'C',
					'\u023B': 'C',
					'\uA73E': 'C',
					'\u24B9': 'D',
					'\uFF24': 'D',
					'\u1E0A': 'D',
					'\u010E': 'D',
					'\u1E0C': 'D',
					'\u1E10': 'D',
					'\u1E12': 'D',
					'\u1E0E': 'D',
					'\u0110': 'D',
					'\u018B': 'D',
					'\u018A': 'D',
					'\u0189': 'D',
					'\uA779': 'D',
					'\u01F1': 'DZ',
					'\u01C4': 'DZ',
					'\u01F2': 'Dz',
					'\u01C5': 'Dz',
					'\u24BA': 'E',
					'\uFF25': 'E',
					'\u00C8': 'E',
					'\u00C9': 'E',
					'\u00CA': 'E',
					'\u1EC0': 'E',
					'\u1EBE': 'E',
					'\u1EC4': 'E',
					'\u1EC2': 'E',
					'\u1EBC': 'E',
					'\u0112': 'E',
					'\u1E14': 'E',
					'\u1E16': 'E',
					'\u0114': 'E',
					'\u0116': 'E',
					'\u00CB': 'E',
					'\u1EBA': 'E',
					'\u011A': 'E',
					'\u0204': 'E',
					'\u0206': 'E',
					'\u1EB8': 'E',
					'\u1EC6': 'E',
					'\u0228': 'E',
					'\u1E1C': 'E',
					'\u0118': 'E',
					'\u1E18': 'E',
					'\u1E1A': 'E',
					'\u0190': 'E',
					'\u018E': 'E',
					'\u24BB': 'F',
					'\uFF26': 'F',
					'\u1E1E': 'F',
					'\u0191': 'F',
					'\uA77B': 'F',
					'\u24BC': 'G',
					'\uFF27': 'G',
					'\u01F4': 'G',
					'\u011C': 'G',
					'\u1E20': 'G',
					'\u011E': 'G',
					'\u0120': 'G',
					'\u01E6': 'G',
					'\u0122': 'G',
					'\u01E4': 'G',
					'\u0193': 'G',
					'\uA7A0': 'G',
					'\uA77D': 'G',
					'\uA77E': 'G',
					'\u24BD': 'H',
					'\uFF28': 'H',
					'\u0124': 'H',
					'\u1E22': 'H',
					'\u1E26': 'H',
					'\u021E': 'H',
					'\u1E24': 'H',
					'\u1E28': 'H',
					'\u1E2A': 'H',
					'\u0126': 'H',
					'\u2C67': 'H',
					'\u2C75': 'H',
					'\uA78D': 'H',
					'\u24BE': 'I',
					'\uFF29': 'I',
					'\u00CC': 'I',
					'\u00CD': 'I',
					'\u00CE': 'I',
					'\u0128': 'I',
					'\u012A': 'I',
					'\u012C': 'I',
					'\u0130': 'I',
					'\u00CF': 'I',
					'\u1E2E': 'I',
					'\u1EC8': 'I',
					'\u01CF': 'I',
					'\u0208': 'I',
					'\u020A': 'I',
					'\u1ECA': 'I',
					'\u012E': 'I',
					'\u1E2C': 'I',
					'\u0197': 'I',
					'\u24BF': 'J',
					'\uFF2A': 'J',
					'\u0134': 'J',
					'\u0248': 'J',
					'\u24C0': 'K',
					'\uFF2B': 'K',
					'\u1E30': 'K',
					'\u01E8': 'K',
					'\u1E32': 'K',
					'\u0136': 'K',
					'\u1E34': 'K',
					'\u0198': 'K',
					'\u2C69': 'K',
					'\uA740': 'K',
					'\uA742': 'K',
					'\uA744': 'K',
					'\uA7A2': 'K',
					'\u24C1': 'L',
					'\uFF2C': 'L',
					'\u013F': 'L',
					'\u0139': 'L',
					'\u013D': 'L',
					'\u1E36': 'L',
					'\u1E38': 'L',
					'\u013B': 'L',
					'\u1E3C': 'L',
					'\u1E3A': 'L',
					'\u0141': 'L',
					'\u023D': 'L',
					'\u2C62': 'L',
					'\u2C60': 'L',
					'\uA748': 'L',
					'\uA746': 'L',
					'\uA780': 'L',
					'\u01C7': 'LJ',
					'\u01C8': 'Lj',
					'\u24C2': 'M',
					'\uFF2D': 'M',
					'\u1E3E': 'M',
					'\u1E40': 'M',
					'\u1E42': 'M',
					'\u2C6E': 'M',
					'\u019C': 'M',
					'\u24C3': 'N',
					'\uFF2E': 'N',
					'\u01F8': 'N',
					'\u0143': 'N',
					'\u00D1': 'N',
					'\u1E44': 'N',
					'\u0147': 'N',
					'\u1E46': 'N',
					'\u0145': 'N',
					'\u1E4A': 'N',
					'\u1E48': 'N',
					'\u0220': 'N',
					'\u019D': 'N',
					'\uA790': 'N',
					'\uA7A4': 'N',
					'\u01CA': 'NJ',
					'\u01CB': 'Nj',
					'\u24C4': 'O',
					'\uFF2F': 'O',
					'\u00D2': 'O',
					'\u00D3': 'O',
					'\u00D4': 'O',
					'\u1ED2': 'O',
					'\u1ED0': 'O',
					'\u1ED6': 'O',
					'\u1ED4': 'O',
					'\u00D5': 'O',
					'\u1E4C': 'O',
					'\u022C': 'O',
					'\u1E4E': 'O',
					'\u014C': 'O',
					'\u1E50': 'O',
					'\u1E52': 'O',
					'\u014E': 'O',
					'\u022E': 'O',
					'\u0230': 'O',
					'\u00D6': 'O',
					'\u022A': 'O',
					'\u1ECE': 'O',
					'\u0150': 'O',
					'\u01D1': 'O',
					'\u020C': 'O',
					'\u020E': 'O',
					'\u01A0': 'O',
					'\u1EDC': 'O',
					'\u1EDA': 'O',
					'\u1EE0': 'O',
					'\u1EDE': 'O',
					'\u1EE2': 'O',
					'\u1ECC': 'O',
					'\u1ED8': 'O',
					'\u01EA': 'O',
					'\u01EC': 'O',
					'\u00D8': 'O',
					'\u01FE': 'O',
					'\u0186': 'O',
					'\u019F': 'O',
					'\uA74A': 'O',
					'\uA74C': 'O',
					'\u01A2': 'OI',
					'\uA74E': 'OO',
					'\u0222': 'OU',
					'\u24C5': 'P',
					'\uFF30': 'P',
					'\u1E54': 'P',
					'\u1E56': 'P',
					'\u01A4': 'P',
					'\u2C63': 'P',
					'\uA750': 'P',
					'\uA752': 'P',
					'\uA754': 'P',
					'\u24C6': 'Q',
					'\uFF31': 'Q',
					'\uA756': 'Q',
					'\uA758': 'Q',
					'\u024A': 'Q',
					'\u24C7': 'R',
					'\uFF32': 'R',
					'\u0154': 'R',
					'\u1E58': 'R',
					'\u0158': 'R',
					'\u0210': 'R',
					'\u0212': 'R',
					'\u1E5A': 'R',
					'\u1E5C': 'R',
					'\u0156': 'R',
					'\u1E5E': 'R',
					'\u024C': 'R',
					'\u2C64': 'R',
					'\uA75A': 'R',
					'\uA7A6': 'R',
					'\uA782': 'R',
					'\u24C8': 'S',
					'\uFF33': 'S',
					'\u1E9E': 'S',
					'\u015A': 'S',
					'\u1E64': 'S',
					'\u015C': 'S',
					'\u1E60': 'S',
					'\u0160': 'S',
					'\u1E66': 'S',
					'\u1E62': 'S',
					'\u1E68': 'S',
					'\u0218': 'S',
					'\u015E': 'S',
					'\u2C7E': 'S',
					'\uA7A8': 'S',
					'\uA784': 'S',
					'\u24C9': 'T',
					'\uFF34': 'T',
					'\u1E6A': 'T',
					'\u0164': 'T',
					'\u1E6C': 'T',
					'\u021A': 'T',
					'\u0162': 'T',
					'\u1E70': 'T',
					'\u1E6E': 'T',
					'\u0166': 'T',
					'\u01AC': 'T',
					'\u01AE': 'T',
					'\u023E': 'T',
					'\uA786': 'T',
					'\uA728': 'TZ',
					'\u24CA': 'U',
					'\uFF35': 'U',
					'\u00D9': 'U',
					'\u00DA': 'U',
					'\u00DB': 'U',
					'\u0168': 'U',
					'\u1E78': 'U',
					'\u016A': 'U',
					'\u1E7A': 'U',
					'\u016C': 'U',
					'\u00DC': 'U',
					'\u01DB': 'U',
					'\u01D7': 'U',
					'\u01D5': 'U',
					'\u01D9': 'U',
					'\u1EE6': 'U',
					'\u016E': 'U',
					'\u0170': 'U',
					'\u01D3': 'U',
					'\u0214': 'U',
					'\u0216': 'U',
					'\u01AF': 'U',
					'\u1EEA': 'U',
					'\u1EE8': 'U',
					'\u1EEE': 'U',
					'\u1EEC': 'U',
					'\u1EF0': 'U',
					'\u1EE4': 'U',
					'\u1E72': 'U',
					'\u0172': 'U',
					'\u1E76': 'U',
					'\u1E74': 'U',
					'\u0244': 'U',
					'\u24CB': 'V',
					'\uFF36': 'V',
					'\u1E7C': 'V',
					'\u1E7E': 'V',
					'\u01B2': 'V',
					'\uA75E': 'V',
					'\u0245': 'V',
					'\uA760': 'VY',
					'\u24CC': 'W',
					'\uFF37': 'W',
					'\u1E80': 'W',
					'\u1E82': 'W',
					'\u0174': 'W',
					'\u1E86': 'W',
					'\u1E84': 'W',
					'\u1E88': 'W',
					'\u2C72': 'W',
					'\u24CD': 'X',
					'\uFF38': 'X',
					'\u1E8A': 'X',
					'\u1E8C': 'X',
					'\u24CE': 'Y',
					'\uFF39': 'Y',
					'\u1EF2': 'Y',
					'\u00DD': 'Y',
					'\u0176': 'Y',
					'\u1EF8': 'Y',
					'\u0232': 'Y',
					'\u1E8E': 'Y',
					'\u0178': 'Y',
					'\u1EF6': 'Y',
					'\u1EF4': 'Y',
					'\u01B3': 'Y',
					'\u024E': 'Y',
					'\u1EFE': 'Y',
					'\u24CF': 'Z',
					'\uFF3A': 'Z',
					'\u0179': 'Z',
					'\u1E90': 'Z',
					'\u017B': 'Z',
					'\u017D': 'Z',
					'\u1E92': 'Z',
					'\u1E94': 'Z',
					'\u01B5': 'Z',
					'\u0224': 'Z',
					'\u2C7F': 'Z',
					'\u2C6B': 'Z',
					'\uA762': 'Z',
					'\u24D0': 'a',
					'\uFF41': 'a',
					'\u1E9A': 'a',
					'\u00E0': 'a',
					'\u00E1': 'a',
					'\u00E2': 'a',
					'\u1EA7': 'a',
					'\u1EA5': 'a',
					'\u1EAB': 'a',
					'\u1EA9': 'a',
					'\u00E3': 'a',
					'\u0101': 'a',
					'\u0103': 'a',
					'\u1EB1': 'a',
					'\u1EAF': 'a',
					'\u1EB5': 'a',
					'\u1EB3': 'a',
					'\u0227': 'a',
					'\u01E1': 'a',
					'\u00E4': 'a',
					'\u01DF': 'a',
					'\u1EA3': 'a',
					'\u00E5': 'a',
					'\u01FB': 'a',
					'\u01CE': 'a',
					'\u0201': 'a',
					'\u0203': 'a',
					'\u1EA1': 'a',
					'\u1EAD': 'a',
					'\u1EB7': 'a',
					'\u1E01': 'a',
					'\u0105': 'a',
					'\u2C65': 'a',
					'\u0250': 'a',
					'\uA733': 'aa',
					'\u00E6': 'ae',
					'\u01FD': 'ae',
					'\u01E3': 'ae',
					'\uA735': 'ao',
					'\uA737': 'au',
					'\uA739': 'av',
					'\uA73B': 'av',
					'\uA73D': 'ay',
					'\u24D1': 'b',
					'\uFF42': 'b',
					'\u1E03': 'b',
					'\u1E05': 'b',
					'\u1E07': 'b',
					'\u0180': 'b',
					'\u0183': 'b',
					'\u0253': 'b',
					'\u24D2': 'c',
					'\uFF43': 'c',
					'\u0107': 'c',
					'\u0109': 'c',
					'\u010B': 'c',
					'\u010D': 'c',
					'\u00E7': 'c',
					'\u1E09': 'c',
					'\u0188': 'c',
					'\u023C': 'c',
					'\uA73F': 'c',
					'\u2184': 'c',
					'\u24D3': 'd',
					'\uFF44': 'd',
					'\u1E0B': 'd',
					'\u010F': 'd',
					'\u1E0D': 'd',
					'\u1E11': 'd',
					'\u1E13': 'd',
					'\u1E0F': 'd',
					'\u0111': 'd',
					'\u018C': 'd',
					'\u0256': 'd',
					'\u0257': 'd',
					'\uA77A': 'd',
					'\u01F3': 'dz',
					'\u01C6': 'dz',
					'\u24D4': 'e',
					'\uFF45': 'e',
					'\u00E8': 'e',
					'\u00E9': 'e',
					'\u00EA': 'e',
					'\u1EC1': 'e',
					'\u1EBF': 'e',
					'\u1EC5': 'e',
					'\u1EC3': 'e',
					'\u1EBD': 'e',
					'\u0113': 'e',
					'\u1E15': 'e',
					'\u1E17': 'e',
					'\u0115': 'e',
					'\u0117': 'e',
					'\u00EB': 'e',
					'\u1EBB': 'e',
					'\u011B': 'e',
					'\u0205': 'e',
					'\u0207': 'e',
					'\u1EB9': 'e',
					'\u1EC7': 'e',
					'\u0229': 'e',
					'\u1E1D': 'e',
					'\u0119': 'e',
					'\u1E19': 'e',
					'\u1E1B': 'e',
					'\u0247': 'e',
					'\u025B': 'e',
					'\u01DD': 'e',
					'\u24D5': 'f',
					'\uFF46': 'f',
					'\u1E1F': 'f',
					'\u0192': 'f',
					'\uA77C': 'f',
					'\u24D6': 'g',
					'\uFF47': 'g',
					'\u01F5': 'g',
					'\u011D': 'g',
					'\u1E21': 'g',
					'\u011F': 'g',
					'\u0121': 'g',
					'\u01E7': 'g',
					'\u0123': 'g',
					'\u01E5': 'g',
					'\u0260': 'g',
					'\uA7A1': 'g',
					'\u1D79': 'g',
					'\uA77F': 'g',
					'\u24D7': 'h',
					'\uFF48': 'h',
					'\u0125': 'h',
					'\u1E23': 'h',
					'\u1E27': 'h',
					'\u021F': 'h',
					'\u1E25': 'h',
					'\u1E29': 'h',
					'\u1E2B': 'h',
					'\u1E96': 'h',
					'\u0127': 'h',
					'\u2C68': 'h',
					'\u2C76': 'h',
					'\u0265': 'h',
					'\u0195': 'hv',
					'\u24D8': 'i',
					'\uFF49': 'i',
					'\u00EC': 'i',
					'\u00ED': 'i',
					'\u00EE': 'i',
					'\u0129': 'i',
					'\u012B': 'i',
					'\u012D': 'i',
					'\u00EF': 'i',
					'\u1E2F': 'i',
					'\u1EC9': 'i',
					'\u01D0': 'i',
					'\u0209': 'i',
					'\u020B': 'i',
					'\u1ECB': 'i',
					'\u012F': 'i',
					'\u1E2D': 'i',
					'\u0268': 'i',
					'\u0131': 'i',
					'\u24D9': 'j',
					'\uFF4A': 'j',
					'\u0135': 'j',
					'\u01F0': 'j',
					'\u0249': 'j',
					'\u24DA': 'k',
					'\uFF4B': 'k',
					'\u1E31': 'k',
					'\u01E9': 'k',
					'\u1E33': 'k',
					'\u0137': 'k',
					'\u1E35': 'k',
					'\u0199': 'k',
					'\u2C6A': 'k',
					'\uA741': 'k',
					'\uA743': 'k',
					'\uA745': 'k',
					'\uA7A3': 'k',
					'\u24DB': 'l',
					'\uFF4C': 'l',
					'\u0140': 'l',
					'\u013A': 'l',
					'\u013E': 'l',
					'\u1E37': 'l',
					'\u1E39': 'l',
					'\u013C': 'l',
					'\u1E3D': 'l',
					'\u1E3B': 'l',
					'\u017F': 'l',
					'\u0142': 'l',
					'\u019A': 'l',
					'\u026B': 'l',
					'\u2C61': 'l',
					'\uA749': 'l',
					'\uA781': 'l',
					'\uA747': 'l',
					'\u01C9': 'lj',
					'\u24DC': 'm',
					'\uFF4D': 'm',
					'\u1E3F': 'm',
					'\u1E41': 'm',
					'\u1E43': 'm',
					'\u0271': 'm',
					'\u026F': 'm',
					'\u24DD': 'n',
					'\uFF4E': 'n',
					'\u01F9': 'n',
					'\u0144': 'n',
					'\u00F1': 'n',
					'\u1E45': 'n',
					'\u0148': 'n',
					'\u1E47': 'n',
					'\u0146': 'n',
					'\u1E4B': 'n',
					'\u1E49': 'n',
					'\u019E': 'n',
					'\u0272': 'n',
					'\u0149': 'n',
					'\uA791': 'n',
					'\uA7A5': 'n',
					'\u01CC': 'nj',
					'\u24DE': 'o',
					'\uFF4F': 'o',
					'\u00F2': 'o',
					'\u00F3': 'o',
					'\u00F4': 'o',
					'\u1ED3': 'o',
					'\u1ED1': 'o',
					'\u1ED7': 'o',
					'\u1ED5': 'o',
					'\u00F5': 'o',
					'\u1E4D': 'o',
					'\u022D': 'o',
					'\u1E4F': 'o',
					'\u014D': 'o',
					'\u1E51': 'o',
					'\u1E53': 'o',
					'\u014F': 'o',
					'\u022F': 'o',
					'\u0231': 'o',
					'\u00F6': 'o',
					'\u022B': 'o',
					'\u1ECF': 'o',
					'\u0151': 'o',
					'\u01D2': 'o',
					'\u020D': 'o',
					'\u020F': 'o',
					'\u01A1': 'o',
					'\u1EDD': 'o',
					'\u1EDB': 'o',
					'\u1EE1': 'o',
					'\u1EDF': 'o',
					'\u1EE3': 'o',
					'\u1ECD': 'o',
					'\u1ED9': 'o',
					'\u01EB': 'o',
					'\u01ED': 'o',
					'\u00F8': 'o',
					'\u01FF': 'o',
					'\u0254': 'o',
					'\uA74B': 'o',
					'\uA74D': 'o',
					'\u0275': 'o',
					'\u01A3': 'oi',
					'\u0223': 'ou',
					'\uA74F': 'oo',
					'\u24DF': 'p',
					'\uFF50': 'p',
					'\u1E55': 'p',
					'\u1E57': 'p',
					'\u01A5': 'p',
					'\u1D7D': 'p',
					'\uA751': 'p',
					'\uA753': 'p',
					'\uA755': 'p',
					'\u24E0': 'q',
					'\uFF51': 'q',
					'\u024B': 'q',
					'\uA757': 'q',
					'\uA759': 'q',
					'\u24E1': 'r',
					'\uFF52': 'r',
					'\u0155': 'r',
					'\u1E59': 'r',
					'\u0159': 'r',
					'\u0211': 'r',
					'\u0213': 'r',
					'\u1E5B': 'r',
					'\u1E5D': 'r',
					'\u0157': 'r',
					'\u1E5F': 'r',
					'\u024D': 'r',
					'\u027D': 'r',
					'\uA75B': 'r',
					'\uA7A7': 'r',
					'\uA783': 'r',
					'\u24E2': 's',
					'\uFF53': 's',
					'\u00DF': 's',
					'\u015B': 's',
					'\u1E65': 's',
					'\u015D': 's',
					'\u1E61': 's',
					'\u0161': 's',
					'\u1E67': 's',
					'\u1E63': 's',
					'\u1E69': 's',
					'\u0219': 's',
					'\u015F': 's',
					'\u023F': 's',
					'\uA7A9': 's',
					'\uA785': 's',
					'\u1E9B': 's',
					'\u24E3': 't',
					'\uFF54': 't',
					'\u1E6B': 't',
					'\u1E97': 't',
					'\u0165': 't',
					'\u1E6D': 't',
					'\u021B': 't',
					'\u0163': 't',
					'\u1E71': 't',
					'\u1E6F': 't',
					'\u0167': 't',
					'\u01AD': 't',
					'\u0288': 't',
					'\u2C66': 't',
					'\uA787': 't',
					'\uA729': 'tz',
					'\u24E4': 'u',
					'\uFF55': 'u',
					'\u00F9': 'u',
					'\u00FA': 'u',
					'\u00FB': 'u',
					'\u0169': 'u',
					'\u1E79': 'u',
					'\u016B': 'u',
					'\u1E7B': 'u',
					'\u016D': 'u',
					'\u00FC': 'u',
					'\u01DC': 'u',
					'\u01D8': 'u',
					'\u01D6': 'u',
					'\u01DA': 'u',
					'\u1EE7': 'u',
					'\u016F': 'u',
					'\u0171': 'u',
					'\u01D4': 'u',
					'\u0215': 'u',
					'\u0217': 'u',
					'\u01B0': 'u',
					'\u1EEB': 'u',
					'\u1EE9': 'u',
					'\u1EEF': 'u',
					'\u1EED': 'u',
					'\u1EF1': 'u',
					'\u1EE5': 'u',
					'\u1E73': 'u',
					'\u0173': 'u',
					'\u1E77': 'u',
					'\u1E75': 'u',
					'\u0289': 'u',
					'\u24E5': 'v',
					'\uFF56': 'v',
					'\u1E7D': 'v',
					'\u1E7F': 'v',
					'\u028B': 'v',
					'\uA75F': 'v',
					'\u028C': 'v',
					'\uA761': 'vy',
					'\u24E6': 'w',
					'\uFF57': 'w',
					'\u1E81': 'w',
					'\u1E83': 'w',
					'\u0175': 'w',
					'\u1E87': 'w',
					'\u1E85': 'w',
					'\u1E98': 'w',
					'\u1E89': 'w',
					'\u2C73': 'w',
					'\u24E7': 'x',
					'\uFF58': 'x',
					'\u1E8B': 'x',
					'\u1E8D': 'x',
					'\u24E8': 'y',
					'\uFF59': 'y',
					'\u1EF3': 'y',
					'\u00FD': 'y',
					'\u0177': 'y',
					'\u1EF9': 'y',
					'\u0233': 'y',
					'\u1E8F': 'y',
					'\u00FF': 'y',
					'\u1EF7': 'y',
					'\u1E99': 'y',
					'\u1EF5': 'y',
					'\u01B4': 'y',
					'\u024F': 'y',
					'\u1EFF': 'y',
					'\u24E9': 'z',
					'\uFF5A': 'z',
					'\u017A': 'z',
					'\u1E91': 'z',
					'\u017C': 'z',
					'\u017E': 'z',
					'\u1E93': 'z',
					'\u1E95': 'z',
					'\u01B6': 'z',
					'\u0225': 'z',
					'\u0240': 'z',
					'\u2C6C': 'z',
					'\uA763': 'z',
					'\u0386': '\u0391',
					'\u0388': '\u0395',
					'\u0389': '\u0397',
					'\u038A': '\u0399',
					'\u03AA': '\u0399',
					'\u038C': '\u039F',
					'\u038E': '\u03A5',
					'\u03AB': '\u03A5',
					'\u038F': '\u03A9',
					'\u03AC': '\u03B1',
					'\u03AD': '\u03B5',
					'\u03AE': '\u03B7',
					'\u03AF': '\u03B9',
					'\u03CA': '\u03B9',
					'\u0390': '\u03B9',
					'\u03CC': '\u03BF',
					'\u03CD': '\u03C5',
					'\u03CB': '\u03C5',
					'\u03B0': '\u03C5',
					'\u03C9': '\u03C9',
					'\u03C2': '\u03C3'
				};

				return diacritics;
			});

			S2.define('select2/data/base', [
				'../utils'
			], function(Utils) {
				function BaseAdapter($element, options) {
					BaseAdapter.__super__.constructor.call(this);
				}

				Utils.Extend(BaseAdapter, Utils.Observable);

				BaseAdapter.prototype.current = function(callback) {
					throw new Error('The `current` method must be defined in child classes.');
				};

				BaseAdapter.prototype.query = function(params, callback) {
					throw new Error('The `query` method must be defined in child classes.');
				};

				BaseAdapter.prototype.bind = function(container, $container) {
					// Can be implemented in subclasses
				};

				BaseAdapter.prototype.destroy = function() {
					// Can be implemented in subclasses
				};

				BaseAdapter.prototype.generateResultId = function(container, data) {
					var id = container.id + '-result-';

					id += Utils.generateChars(4);

					if (data.id != null) {
						id += '-' + data.id.toString();
					} else {
						id += '-' + Utils.generateChars(4);
					}
					return id;
				};

				return BaseAdapter;
			});

			S2.define('select2/data/select', [
				'./base',
				'../utils',
				'jquery'
			], function(BaseAdapter, Utils, $) {
				function SelectAdapter($element, options) {
					this.$element = $element;
					this.options = options;

					SelectAdapter.__super__.constructor.call(this);
				}

				Utils.Extend(SelectAdapter, BaseAdapter);

				SelectAdapter.prototype.current = function(callback) {
					var data = [];
					var self = this;

					this.$element.find(':selected').each(function() {
						var $option = $(this);

						var option = self.item($option);

						data.push(option);
					});

					callback(data);
				};

				SelectAdapter.prototype.select = function(data) {
					var self = this;

					data.selected = true;

					// If data.element is a DOM node, use it instead
					if ($(data.element).is('option')) {
						data.element.selected = true;

						this.$element.trigger('change');

						return;
					}

					if (this.$element.prop('multiple')) {
						this.current(function(currentData) {
							var val = [];

							data = [data];
							data.push.apply(data, currentData);

							for (var d = 0; d < data.length; d++) {
								var id = data[d].id;

								if ($.inArray(id, val) === -1) {
									val.push(id);
								}
							}

							self.$element.val(val);
							self.$element.trigger('change');
						});
					} else {
						var val = data.id;

						this.$element.val(val);
						this.$element.trigger('change');
					}
				};

				SelectAdapter.prototype.unselect = function(data) {
					var self = this;

					if (!this.$element.prop('multiple')) {
						return;
					}

					data.selected = false;

					if ($(data.element).is('option')) {
						data.element.selected = false;

						this.$element.trigger('change');

						return;
					}

					this.current(function(currentData) {
						var val = [];

						for (var d = 0; d < currentData.length; d++) {
							var id = currentData[d].id;

							if (id !== data.id && $.inArray(id, val) === -1) {
								val.push(id);
							}
						}

						self.$element.val(val);

						self.$element.trigger('change');
					});
				};

				SelectAdapter.prototype.bind = function(container, $container) {
					var self = this;

					this.container = container;

					container.on('select', function(params) {
						self.select(params.data);
					});

					container.on('unselect', function(params) {
						self.unselect(params.data);
					});
				};

				SelectAdapter.prototype.destroy = function() {
					// Remove anything added to child elements
					this.$element.find('*').each(function() {
						// Remove any custom data set by Select2
						$.removeData(this, 'data');
					});
				};

				SelectAdapter.prototype.query = function(params, callback) {
					var data = [];
					var self = this;

					var $options = this.$element.children();

					$options.each(function() {
						var $option = $(this);

						if (!$option.is('option') && !$option.is('optgroup')) {
							return;
						}

						var option = self.item($option);

						var matches = self.matches(params, option);

						if (matches !== null) {
							data.push(matches);
						}
					});

					callback({
						results: data
					});
				};

				SelectAdapter.prototype.addOptions = function($options) {
					Utils.appendMany(this.$element, $options);
				};

				SelectAdapter.prototype.option = function(data) {
					var option;

					if (data.children) {
						option = document.createElement('optgroup');
						option.label = data.text;
					} else {
						option = document.createElement('option');

						if (option.textContent !== undefined) {
							option.textContent = data.text;
						} else {
							option.innerText = data.text;
						}
					}

					if (data.id) {
						option.value = data.id;
					}

					if (data.disabled) {
						option.disabled = true;
					}

					if (data.selected) {
						option.selected = true;
					}

					if (data.title) {
						option.title = data.title;
					}

					var $option = $(option);

					var normalizedData = this._normalizeItem(data);
					normalizedData.element = option;

					// Override the option's data with the combined data
					$.data(option, 'data', normalizedData);

					return $option;
				};

				SelectAdapter.prototype.item = function($option) {
					var data = {};

					data = $.data($option[0], 'data');

					if (data != null) {
						return data;
					}

					if ($option.is('option')) {
						data = {
							id: $option.val(),
							text: $option.text(),
							disabled: $option.prop('disabled'),
							selected: $option.prop('selected'),
							title: $option.prop('title')
						};
					} else if ($option.is('optgroup')) {
						data = {
							text: $option.prop('label'),
							children: [],
							title: $option.prop('title')
						};

						var $children = $option.children('option');
						var children = [];

						for (var c = 0; c < $children.length; c++) {
							var $child = $($children[c]);

							var child = this.item($child);

							children.push(child);
						}

						data.children = children;
					}

					data = this._normalizeItem(data);
					data.element = $option[0];

					$.data($option[0], 'data', data);

					return data;
				};

				SelectAdapter.prototype._normalizeItem = function(item) {
					if (!$.isPlainObject(item)) {
						item = {
							id: item,
							text: item
						};
					}

					item = $.extend({}, {
						text: ''
					}, item);

					var defaults = {
						selected: false,
						disabled: false
					};

					if (item.id != null) {
						item.id = item.id.toString();
					}

					if (item.text != null) {
						item.text = item.text.toString();
					}

					if (item._resultId == null && item.id && this.container != null) {
						item._resultId = this.generateResultId(this.container, item);
					}

					return $.extend({}, defaults, item);
				};

				SelectAdapter.prototype.matches = function(params, data) {
					var matcher = this.options.get('matcher');

					return matcher(params, data);
				};

				return SelectAdapter;
			});

			S2.define('select2/data/array', [
				'./select',
				'../utils',
				'jquery'
			], function(SelectAdapter, Utils, $) {
				function ArrayAdapter($element, options) {
					var data = options.get('data') || [];

					ArrayAdapter.__super__.constructor.call(this, $element, options);

					this.addOptions(this.convertToOptions(data));
				}

				Utils.Extend(ArrayAdapter, SelectAdapter);

				ArrayAdapter.prototype.select = function(data) {
					var $option = this.$element.find('option').filter(function(i, elm) {
						return elm.value == data.id.toString();
					});

					if ($option.length === 0) {
						$option = this.option(data);

						this.addOptions($option);
					}

					ArrayAdapter.__super__.select.call(this, data);
				};

				ArrayAdapter.prototype.convertToOptions = function(data) {
					var self = this;

					var $existing = this.$element.find('option');
					var existingIds = $existing.map(function() {
						return self.item($(this)).id;
					}).get();

					var $options = [];

					// Filter out all items except for the one passed in the argument

					function onlyItem(item) {
						return function() {
							return $(this).val() == item.id;
						};
					}

					for (var d = 0; d < data.length; d++) {
						var item = this._normalizeItem(data[d]);

						// Skip items which were pre-loaded, only merge the data
						if ($.inArray(item.id, existingIds) >= 0) {
							var $existingOption = $existing.filter(onlyItem(item));

							var existingData = this.item($existingOption);
							var newData = $.extend(true, {}, item, existingData);

							var $newOption = this.option(newData);

							$existingOption.replaceWith($newOption);

							continue;
						}

						var $option = this.option(item);

						if (item.children) {
							var $children = this.convertToOptions(item.children);

							Utils.appendMany($option, $children);
						}

						$options.push($option);
					}

					return $options;
				};

				return ArrayAdapter;
			});

			S2.define('select2/data/ajax', [
				'./array',
				'../utils',
				'jquery'
			], function(ArrayAdapter, Utils, $) {
				function AjaxAdapter($element, options) {
					this.ajaxOptions = this._applyDefaults(options.get('ajax'));

					if (this.ajaxOptions.processResults != null) {
						this.processResults = this.ajaxOptions.processResults;
					}

					AjaxAdapter.__super__.constructor.call(this, $element, options);
				}

				Utils.Extend(AjaxAdapter, ArrayAdapter);

				AjaxAdapter.prototype._applyDefaults = function(options) {
					var defaults = {
						data: function(params) {
							return $.extend({}, params, {
								q: params.term
							});
						},
						transport: function(params, success, failure) {
							var $request = $.ajax(params);

							$request.then(success);
							$request.fail(failure);

							return $request;
						}
					};

					return $.extend({}, defaults, options, true);
				};

				AjaxAdapter.prototype.processResults = function(results) {
					return results;
				};

				AjaxAdapter.prototype.query = function(params, callback) {
					var matches = [];
					var self = this;

					if (this._request != null) {
						// JSONP requests cannot always be aborted
						if ($.isFunction(this._request.abort)) {
							this._request.abort();
						}

						this._request = null;
					}

					var options = $.extend({
						type: 'GET'
					}, this.ajaxOptions);

					if (typeof options.url === 'function') {
						options.url = options.url.call(this.$element, params);
					}

					if (typeof options.data === 'function') {
						options.data = options.data.call(this.$element, params);
					}

					function request() {
						var $request = options.transport(options, function(data) {
							var results = self.processResults(data, params);

							if (self.options.get('debug') && window.console && console.error) {
								// Check to make sure that the response included a `results` key.
								if (!results || !results.results || !$.isArray(results.results)) {
									console.error(
										'Select2: The AJAX results did not return an array in the ' +
										'`results` key of the response.'
									);
								}
							}

							callback(results);
						}, function() {
							// Attempt to detect if a request was aborted
							// Only works if the transport exposes a status property
							if ($request.status && $request.status === '0') {
								return;
							}

							self.trigger('results:message', {
								message: 'errorLoading'
							});
						});

						self._request = $request;
					}

					if (this.ajaxOptions.delay && params.term != null) {
						if (this._queryTimeout) {
							window.clearTimeout(this._queryTimeout);
						}

						this._queryTimeout = window.setTimeout(request, this.ajaxOptions.delay);
					} else {
						request();
					}
				};

				return AjaxAdapter;
			});

			S2.define('select2/data/tags', [
				'jquery'
			], function($) {
				function Tags(decorated, $element, options) {
					var tags = options.get('tags');

					var createTag = options.get('createTag');

					if (createTag !== undefined) {
						this.createTag = createTag;
					}

					var insertTag = options.get('insertTag');

					if (insertTag !== undefined) {
						this.insertTag = insertTag;
					}

					decorated.call(this, $element, options);

					if ($.isArray(tags)) {
						for (var t = 0; t < tags.length; t++) {
							var tag = tags[t];
							var item = this._normalizeItem(tag);

							var $option = this.option(item);

							this.$element.append($option);
						}
					}
				}

				Tags.prototype.query = function(decorated, params, callback) {
					var self = this;

					this._removeOldTags();

					if (params.term == null || params.page != null) {
						decorated.call(this, params, callback);
						return;
					}

					function wrapper(obj, child) {
						var data = obj.results;

						for (var i = 0; i < data.length; i++) {
							var option = data[i];

							var checkChildren = (
								option.children != null && !wrapper({
									results: option.children
								}, true)
							);

							var checkText = option.text === params.term;

							if (checkText || checkChildren) {
								if (child) {
									return false;
								}

								obj.data = data;
								callback(obj);

								return;
							}
						}

						if (child) {
							return true;
						}

						var tag = self.createTag(params);

						if (tag != null) {
							var $option = self.option(tag);
							$option.attr('data-select2-tag', true);

							self.addOptions([$option]);

							self.insertTag(data, tag);
						}

						obj.results = data;

						callback(obj);
					}

					decorated.call(this, params, wrapper);
				};

				Tags.prototype.createTag = function(decorated, params) {
					var term = $.trim(params.term);

					if (term === '') {
						return null;
					}

					return {
						id: term,
						text: term
					};
				};

				Tags.prototype.insertTag = function(_, data, tag) {
					data.unshift(tag);
				};

				Tags.prototype._removeOldTags = function(_) {
					var tag = this._lastTag;

					var $options = this.$element.find('option[data-select2-tag]');

					$options.each(function() {
						if (this.selected) {
							return;
						}

						$(this).remove();
					});
				};

				return Tags;
			});

			S2.define('select2/data/tokenizer', [
				'jquery'
			], function($) {
				function Tokenizer(decorated, $element, options) {
					var tokenizer = options.get('tokenizer');

					if (tokenizer !== undefined) {
						this.tokenizer = tokenizer;
					}

					decorated.call(this, $element, options);
				}

				Tokenizer.prototype.bind = function(decorated, container, $container) {
					decorated.call(this, container, $container);

					this.$search = container.dropdown.$search || container.selection.$search ||
						$container.find('.select2-search__field');
				};

				Tokenizer.prototype.query = function(decorated, params, callback) {
					var self = this;

					function createAndSelect(data) {
						// Normalize the data object so we can use it for checks
						var item = self._normalizeItem(data);

						// Check if the data object already exists as a tag
						// Select it if it doesn't
						var $existingOptions = self.$element.find('option').filter(function() {
							return $(this).val() === item.id;
						});

						// If an existing option wasn't found for it, create the option
						if (!$existingOptions.length) {
							var $option = self.option(item);
							$option.attr('data-select2-tag', true);

							self._removeOldTags();
							self.addOptions([$option]);
						}

						// Select the item, now that we know there is an option for it
						select(item);
					}

					function select(data) {
						self.trigger('select', {
							data: data
						});
					}

					params.term = params.term || '';

					var tokenData = this.tokenizer(params, this.options, createAndSelect);

					if (tokenData.term !== params.term) {
						// Replace the search term if we have the search box
						if (this.$search.length) {
							this.$search.val(tokenData.term);
							this.$search.focus();
						}

						params.term = tokenData.term;
					}

					decorated.call(this, params, callback);
				};

				Tokenizer.prototype.tokenizer = function(_, params, options, callback) {
					var separators = options.get('tokenSeparators') || [];
					var term = params.term;
					var i = 0;

					var createTag = this.createTag || function(params) {
						return {
							id: params.term,
							text: params.term
						};
					};

					while (i < term.length) {
						var termChar = term[i];

						if ($.inArray(termChar, separators) === -1) {
							i++;

							continue;
						}

						var part = term.substr(0, i);
						var partParams = $.extend({}, params, {
							term: part
						});

						var data = createTag(partParams);

						if (data == null) {
							i++;
							continue;
						}

						callback(data);

						// Reset the term to not include the tokenized portion
						term = term.substr(i + 1) || '';
						i = 0;
					}

					return {
						term: term
					};
				};

				return Tokenizer;
			});

			S2.define('select2/data/minimumInputLength', [

			], function() {
				function MinimumInputLength(decorated, $e, options) {
					this.minimumInputLength = options.get('minimumInputLength');

					decorated.call(this, $e, options);
				}

				MinimumInputLength.prototype.query = function(decorated, params, callback) {
					params.term = params.term || '';

					if (params.term.length < this.minimumInputLength) {
						this.trigger('results:message', {
							message: 'inputTooShort',
							args: {
								minimum: this.minimumInputLength,
								input: params.term,
								params: params
							}
						});

						return;
					}

					decorated.call(this, params, callback);
				};

				return MinimumInputLength;
			});

			S2.define('select2/data/maximumInputLength', [

			], function() {
				function MaximumInputLength(decorated, $e, options) {
					this.maximumInputLength = options.get('maximumInputLength');

					decorated.call(this, $e, options);
				}

				MaximumInputLength.prototype.query = function(decorated, params, callback) {
					params.term = params.term || '';

					if (this.maximumInputLength > 0 &&
						params.term.length > this.maximumInputLength) {
						this.trigger('results:message', {
							message: 'inputTooLong',
							args: {
								maximum: this.maximumInputLength,
								input: params.term,
								params: params
							}
						});

						return;
					}

					decorated.call(this, params, callback);
				};

				return MaximumInputLength;
			});

			S2.define('select2/data/maximumSelectionLength', [

			], function() {
				function MaximumSelectionLength(decorated, $e, options) {
					this.maximumSelectionLength = options.get('maximumSelectionLength');

					decorated.call(this, $e, options);
				}

				MaximumSelectionLength.prototype.query =
					function(decorated, params, callback) {
						var self = this;

						this.current(function(currentData) {
							var count = currentData != null ? currentData.length : 0;
							if (self.maximumSelectionLength > 0 &&
								count >= self.maximumSelectionLength) {
								self.trigger('results:message', {
									message: 'maximumSelected',
									args: {
										maximum: self.maximumSelectionLength
									}
								});
								return;
							}
							decorated.call(self, params, callback);
						});
					};

				return MaximumSelectionLength;
			});

			S2.define('select2/dropdown', [
				'jquery',
				'./utils'
			], function($, Utils) {
				function Dropdown($element, options) {
					this.$element = $element;
					this.options = options;

					Dropdown.__super__.constructor.call(this);
				}

				Utils.Extend(Dropdown, Utils.Observable);

				Dropdown.prototype.render = function() {
					var $dropdown = $(
						'<span class="select2-dropdown">' +
						'<span class="select2-results"></span>' +
						'</span>'
					);

					$dropdown.attr('dir', this.options.get('dir'));

					this.$dropdown = $dropdown;

					return $dropdown;
				};

				Dropdown.prototype.bind = function() {
					// Should be implemented in subclasses
				};

				Dropdown.prototype.position = function($dropdown, $container) {
					// Should be implmented in subclasses
				};

				Dropdown.prototype.destroy = function() {
					// Remove the dropdown from the DOM
					this.$dropdown.remove();
				};

				return Dropdown;
			});

			S2.define('select2/dropdown/search', [
				'jquery',
				'../utils'
			], function($, Utils) {
				function Search() {}

				Search.prototype.render = function(decorated) {
					var $rendered = decorated.call(this);

					var $search = $(
						'<span class="select2-search select2-search--dropdown">' +
						'<input class="select2-search__field" type="search" tabindex="-1"' +
						' autocomplete="off" autocorrect="off" autocapitalize="off"' +
						' spellcheck="false" role="textbox" />' +
						'</span>'
					);

					this.$searchContainer = $search;
					this.$search = $search.find('input');

					$rendered.prepend($search);

					return $rendered;
				};

				Search.prototype.bind = function(decorated, container, $container) {
					var self = this;

					decorated.call(this, container, $container);

					this.$search.on('keydown', function(evt) {
						self.trigger('keypress', evt);

						self._keyUpPrevented = evt.isDefaultPrevented();
					});

					// Workaround for browsers which do not support the `input` event
					// This will prevent double-triggering of events for browsers which support
					// both the `keyup` and `input` events.
					this.$search.on('input', function(evt) {
						// Unbind the duplicated `keyup` event
						$(this).off('keyup');
					});

					this.$search.on('keyup input', function(evt) {
						self.handleSearch(evt);
					});

					container.on('open', function() {
						self.$search.attr('tabindex', 0);

						self.$search.focus();

						window.setTimeout(function() {
							self.$search.focus();
						}, 0);
					});

					container.on('close', function() {
						self.$search.attr('tabindex', -1);

						self.$search.val('');
					});

					container.on('focus', function() {
						if (container.isOpen()) {
							self.$search.focus();
						}
					});

					container.on('results:all', function(params) {
						if (params.query.term == null || params.query.term === '') {
							var showSearch = self.showSearch(params);

							if (showSearch) {
								self.$searchContainer.removeClass('select2-search--hide');
							} else {
								self.$searchContainer.addClass('select2-search--hide');
							}
						}
					});
				};

				Search.prototype.handleSearch = function(evt) {
					if (!this._keyUpPrevented) {
						var input = this.$search.val();

						this.trigger('query', {
							term: input
						});
					}

					this._keyUpPrevented = false;
				};

				Search.prototype.showSearch = function(_, params) {
					return true;
				};

				return Search;
			});

			S2.define('select2/dropdown/hidePlaceholder', [

			], function() {
				function HidePlaceholder(decorated, $element, options, dataAdapter) {
					this.placeholder = this.normalizePlaceholder(options.get('placeholder'));

					decorated.call(this, $element, options, dataAdapter);
				}

				HidePlaceholder.prototype.append = function(decorated, data) {
					data.results = this.removePlaceholder(data.results);

					decorated.call(this, data);
				};

				HidePlaceholder.prototype.normalizePlaceholder = function(_, placeholder) {
					if (typeof placeholder === 'string') {
						placeholder = {
							id: '',
							text: placeholder
						};
					}

					return placeholder;
				};

				HidePlaceholder.prototype.removePlaceholder = function(_, data) {
					var modifiedData = data.slice(0);

					for (var d = data.length - 1; d >= 0; d--) {
						var item = data[d];

						if (this.placeholder.id === item.id) {
							modifiedData.splice(d, 1);
						}
					}

					return modifiedData;
				};

				return HidePlaceholder;
			});

			S2.define('select2/dropdown/infiniteScroll', [
				'jquery'
			], function($) {
				function InfiniteScroll(decorated, $element, options, dataAdapter) {
					this.lastParams = {};

					decorated.call(this, $element, options, dataAdapter);

					this.$loadingMore = this.createLoadingMore();
					this.loading = false;
				}

				InfiniteScroll.prototype.append = function(decorated, data) {
					this.$loadingMore.remove();
					this.loading = false;

					decorated.call(this, data);

					if (this.showLoadingMore(data)) {
						this.$results.append(this.$loadingMore);
					}
				};

				InfiniteScroll.prototype.bind = function(decorated, container, $container) {
					var self = this;

					decorated.call(this, container, $container);

					container.on('query', function(params) {
						self.lastParams = params;
						self.loading = true;
					});

					container.on('query:append', function(params) {
						self.lastParams = params;
						self.loading = true;
					});

					this.$results.on('scroll', function() {
						var isLoadMoreVisible = $.contains(
							document.documentElement,
							self.$loadingMore[0]
						);

						if (self.loading || !isLoadMoreVisible) {
							return;
						}

						var currentOffset = self.$results.offset().top +
							self.$results.outerHeight(false);
						var loadingMoreOffset = self.$loadingMore.offset().top +
							self.$loadingMore.outerHeight(false);

						if (currentOffset + 50 >= loadingMoreOffset) {
							self.loadMore();
						}
					});
				};

				InfiniteScroll.prototype.loadMore = function() {
					this.loading = true;

					var params = $.extend({}, {
						page: 1
					}, this.lastParams);

					params.page++;

					this.trigger('query:append', params);
				};

				InfiniteScroll.prototype.showLoadingMore = function(_, data) {
					return data.pagination && data.pagination.more;
				};

				InfiniteScroll.prototype.createLoadingMore = function() {
					var $option = $(
						'<li ' +
						'class="select2-results__option select2-results__option--load-more"' +
						'role="treeitem" aria-disabled="true"></li>'
					);

					var message = this.options.get('translations').get('loadingMore');

					$option.html(message(this.lastParams));

					return $option;
				};

				return InfiniteScroll;
			});

			S2.define('select2/dropdown/attachBody', [
				'jquery',
				'../utils'
			], function($, Utils) {
				function AttachBody(decorated, $element, options) {
					this.$dropdownParent = options.get('dropdownParent') || $(document.body);

					decorated.call(this, $element, options);
				}

				AttachBody.prototype.bind = function(decorated, container, $container) {
					var self = this;

					var setupResultsEvents = false;

					decorated.call(this, container, $container);

					container.on('open', function() {
						self._showDropdown();
						self._attachPositioningHandler(container);

						if (!setupResultsEvents) {
							setupResultsEvents = true;

							container.on('results:all', function() {
								self._positionDropdown();
								self._resizeDropdown();
							});

							container.on('results:append', function() {
								self._positionDropdown();
								self._resizeDropdown();
							});
						}
					});

					container.on('close', function() {
						self._hideDropdown();
						self._detachPositioningHandler(container);
					});

					this.$dropdownContainer.on('mousedown', function(evt) {
						evt.stopPropagation();
					});
				};

				AttachBody.prototype.destroy = function(decorated) {
					decorated.call(this);

					this.$dropdownContainer.remove();
				};

				AttachBody.prototype.position = function(decorated, $dropdown, $container) {
					// Clone all of the container classes
					$dropdown.attr('class', $container.attr('class'));

					$dropdown.removeClass('select2');
					$dropdown.addClass('select2-container--open');

					$dropdown.css({
						position: 'absolute',
						top: -999999
					});

					this.$container = $container;
				};

				AttachBody.prototype.render = function(decorated) {
					var $container = $('<span></span>');

					var $dropdown = decorated.call(this);
					$container.append($dropdown);

					this.$dropdownContainer = $container;

					return $container;
				};

				AttachBody.prototype._hideDropdown = function(decorated) {
					this.$dropdownContainer.detach();
				};

				AttachBody.prototype._attachPositioningHandler =
					function(decorated, container) {
						var self = this;

						var scrollEvent = 'scroll.select2.' + container.id;
						var resizeEvent = 'resize.select2.' + container.id;
						var orientationEvent = 'orientationchange.select2.' + container.id;

						var $watchers = this.$container.parents().filter(Utils.hasScroll);
						$watchers.each(function() {
							$(this).data('select2-scroll-position', {
								x: $(this).scrollLeft(),
								y: $(this).scrollTop()
							});
						});

						$watchers.on(scrollEvent, function(ev) {
							var position = $(this).data('select2-scroll-position');
							$(this).scrollTop(position.y);
						});

						$(window).on(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent,
							function(e) {
								self._positionDropdown();
								self._resizeDropdown();
							});
					};

				AttachBody.prototype._detachPositioningHandler =
					function(decorated, container) {
						var scrollEvent = 'scroll.select2.' + container.id;
						var resizeEvent = 'resize.select2.' + container.id;
						var orientationEvent = 'orientationchange.select2.' + container.id;

						var $watchers = this.$container.parents().filter(Utils.hasScroll);
						$watchers.off(scrollEvent);

						$(window).off(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent);
					};

				AttachBody.prototype._positionDropdown = function() {
					var $window = $(window);

					var isCurrentlyAbove = this.$dropdown.hasClass('select2-dropdown--above');
					var isCurrentlyBelow = this.$dropdown.hasClass('select2-dropdown--below');

					var newDirection = null;

					var offset = this.$container.offset();

					offset.bottom = offset.top + this.$container.outerHeight(false);

					var container = {
						height: this.$container.outerHeight(false)
					};

					container.top = offset.top;
					container.bottom = offset.top + container.height;

					var dropdown = {
						height: this.$dropdown.outerHeight(false)
					};

					var viewport = {
						top: $window.scrollTop(),
						bottom: $window.scrollTop() + $window.height()
					};

					var enoughRoomAbove = viewport.top < (offset.top - dropdown.height);
					var enoughRoomBelow = viewport.bottom > (offset.bottom + dropdown.height);

					var css = {
						left: offset.left,
						top: container.bottom
					};

					// Determine what the parent element is to use for calciulating the offset
					var $offsetParent = this.$dropdownParent;

					// For statically positoned elements, we need to get the element
					// that is determining the offset
					if ($offsetParent.css('position') === 'static') {
						$offsetParent = $offsetParent.offsetParent();
					}

					var parentOffset = $offsetParent.offset();

					css.top -= parentOffset.top;
					css.left -= parentOffset.left;

					if (!isCurrentlyAbove && !isCurrentlyBelow) {
						newDirection = 'below';
					}

					if (!enoughRoomBelow && enoughRoomAbove && !isCurrentlyAbove) {
						newDirection = 'above';
					} else if (!enoughRoomAbove && enoughRoomBelow && isCurrentlyAbove) {
						newDirection = 'below';
					}

					if (newDirection == 'above' ||
						(isCurrentlyAbove && newDirection !== 'below')) {
						css.top = container.top - parentOffset.top - dropdown.height;
					}

					if (newDirection != null) {
						this.$dropdown
							.removeClass('select2-dropdown--below select2-dropdown--above')
							.addClass('select2-dropdown--' + newDirection);
						this.$container
							.removeClass('select2-container--below select2-container--above')
							.addClass('select2-container--' + newDirection);
					}

					this.$dropdownContainer.css(css);
				};

				AttachBody.prototype._resizeDropdown = function() {
					var css = {
						width: this.$container.outerWidth(false) + 'px'
					};

					if (this.options.get('dropdownAutoWidth')) {
						css.minWidth = css.width;
						css.position = 'relative';
						css.width = 'auto';
					}

					this.$dropdown.css(css);
				};

				AttachBody.prototype._showDropdown = function(decorated) {
					this.$dropdownContainer.appendTo(this.$dropdownParent);

					this._positionDropdown();
					this._resizeDropdown();
				};

				return AttachBody;
			});

			S2.define('select2/dropdown/minimumResultsForSearch', [

			], function() {
				function countResults(data) {
					var count = 0;

					for (var d = 0; d < data.length; d++) {
						var item = data[d];

						if (item.children) {
							count += countResults(item.children);
						} else {
							count++;
						}
					}

					return count;
				}

				function MinimumResultsForSearch(decorated, $element, options, dataAdapter) {
					this.minimumResultsForSearch = options.get('minimumResultsForSearch');

					if (this.minimumResultsForSearch < 0) {
						this.minimumResultsForSearch = Infinity;
					}

					decorated.call(this, $element, options, dataAdapter);
				}

				MinimumResultsForSearch.prototype.showSearch = function(decorated, params) {
					if (countResults(params.data.results) < this.minimumResultsForSearch) {
						return false;
					}

					return decorated.call(this, params);
				};

				return MinimumResultsForSearch;
			});

			S2.define('select2/dropdown/selectOnClose', [

			], function() {
				function SelectOnClose() {}

				SelectOnClose.prototype.bind = function(decorated, container, $container) {
					var self = this;

					decorated.call(this, container, $container);

					container.on('close', function(params) {
						self._handleSelectOnClose(params);
					});
				};

				SelectOnClose.prototype._handleSelectOnClose = function(_, params) {
					if (params && params.originalSelect2Event != null) {
						var event = params.originalSelect2Event;

						// Don't select an item if the close event was triggered from a select or
						// unselect event
						if (event._type === 'select' || event._type === 'unselect') {
							return;
						}
					}

					var $highlightedResults = this.getHighlightedResults();

					// Only select highlighted results
					if ($highlightedResults.length < 1) {
						return;
					}

					var data = $highlightedResults.data('data');

					// Don't re-select already selected resulte
					if (
						(data.element != null && data.element.selected) ||
						(data.element == null && data.selected)
					) {
						return;
					}

					this.trigger('select', {
						data: data
					});
				};

				return SelectOnClose;
			});

			S2.define('select2/dropdown/closeOnSelect', [

			], function() {
				function CloseOnSelect() {}

				CloseOnSelect.prototype.bind = function(decorated, container, $container) {
					var self = this;

					decorated.call(this, container, $container);

					container.on('select', function(evt) {
						self._selectTriggered(evt);
					});

					container.on('unselect', function(evt) {
						self._selectTriggered(evt);
					});
				};

				CloseOnSelect.prototype._selectTriggered = function(_, evt) {
					var originalEvent = evt.originalEvent;

					// Don't close if the control key is being held
					if (originalEvent && originalEvent.ctrlKey) {
						return;
					}

					this.trigger('close', {
						originalEvent: originalEvent,
						originalSelect2Event: evt
					});
				};

				return CloseOnSelect;
			});

			S2.define('select2/i18n/en', [], function() {
				// English
				return {
					errorLoading: function() {
						return 'The results could not be loaded.';
					},
					inputTooLong: function(args) {
						var overChars = args.input.length - args.maximum;

						var message = 'Please delete ' + overChars + ' character';

						if (overChars != 1) {
							message += 's';
						}

						return message;
					},
					inputTooShort: function(args) {
						var remainingChars = args.minimum - args.input.length;

						var message = 'Please enter ' + remainingChars + ' or more characters';

						return message;
					},
					loadingMore: function() {
						return 'Loading more results…';
					},
					maximumSelected: function(args) {
						var message = 'You can only select ' + args.maximum + ' item';

						if (args.maximum != 1) {
							message += 's';
						}

						return message;
					},
					noResults: function() {
						return 'No results found';
					},
					searching: function() {
						return 'Searching…';
					}
				};
			});

			S2.define('select2/defaults', [
				'jquery',
				'require',

				'./results',

				'./selection/single',
				'./selection/multiple',
				'./selection/placeholder',
				'./selection/allowClear',
				'./selection/search',
				'./selection/eventRelay',

				'./utils',
				'./translation',
				'./diacritics',

				'./data/select',
				'./data/array',
				'./data/ajax',
				'./data/tags',
				'./data/tokenizer',
				'./data/minimumInputLength',
				'./data/maximumInputLength',
				'./data/maximumSelectionLength',

				'./dropdown',
				'./dropdown/search',
				'./dropdown/hidePlaceholder',
				'./dropdown/infiniteScroll',
				'./dropdown/attachBody',
				'./dropdown/minimumResultsForSearch',
				'./dropdown/selectOnClose',
				'./dropdown/closeOnSelect',

				'./i18n/en'
			], function($, require,

						ResultsList,

						SingleSelection, MultipleSelection, Placeholder, AllowClear,
						SelectionSearch, EventRelay,

						Utils, Translation, DIACRITICS,

						SelectData, ArrayData, AjaxData, Tags, Tokenizer,
						MinimumInputLength, MaximumInputLength, MaximumSelectionLength,

						Dropdown, DropdownSearch, HidePlaceholder, InfiniteScroll,
						AttachBody, MinimumResultsForSearch, SelectOnClose, CloseOnSelect,

						EnglishTranslation) {
				function Defaults() {
					this.reset();
				}

				Defaults.prototype.apply = function(options) {
					options = $.extend(true, {}, this.defaults, options);

					if (options.dataAdapter == null) {
						if (options.ajax != null) {
							options.dataAdapter = AjaxData;
						} else if (options.data != null) {
							options.dataAdapter = ArrayData;
						} else {
							options.dataAdapter = SelectData;
						}

						if (options.minimumInputLength > 0) {
							options.dataAdapter = Utils.Decorate(
								options.dataAdapter,
								MinimumInputLength
							);
						}

						if (options.maximumInputLength > 0) {
							options.dataAdapter = Utils.Decorate(
								options.dataAdapter,
								MaximumInputLength
							);
						}

						if (options.maximumSelectionLength > 0) {
							options.dataAdapter = Utils.Decorate(
								options.dataAdapter,
								MaximumSelectionLength
							);
						}

						if (options.tags) {
							options.dataAdapter = Utils.Decorate(options.dataAdapter, Tags);
						}

						if (options.tokenSeparators != null || options.tokenizer != null) {
							options.dataAdapter = Utils.Decorate(
								options.dataAdapter,
								Tokenizer
							);
						}

						if (options.query != null) {
							var Query = require(options.amdBase + 'compat/query');

							options.dataAdapter = Utils.Decorate(
								options.dataAdapter,
								Query
							);
						}

						if (options.initSelection != null) {
							var InitSelection = require(options.amdBase + 'compat/initSelection');

							options.dataAdapter = Utils.Decorate(
								options.dataAdapter,
								InitSelection
							);
						}
					}

					if (options.resultsAdapter == null) {
						options.resultsAdapter = ResultsList;

						if (options.ajax != null) {
							options.resultsAdapter = Utils.Decorate(
								options.resultsAdapter,
								InfiniteScroll
							);
						}

						if (options.placeholder != null) {
							options.resultsAdapter = Utils.Decorate(
								options.resultsAdapter,
								HidePlaceholder
							);
						}

						if (options.selectOnClose) {
							options.resultsAdapter = Utils.Decorate(
								options.resultsAdapter,
								SelectOnClose
							);
						}
					}

					if (options.dropdownAdapter == null) {
						if (options.multiple) {
							options.dropdownAdapter = Dropdown;
						} else {
							var SearchableDropdown = Utils.Decorate(Dropdown, DropdownSearch);

							options.dropdownAdapter = SearchableDropdown;
						}

						if (options.minimumResultsForSearch !== 0) {
							options.dropdownAdapter = Utils.Decorate(
								options.dropdownAdapter,
								MinimumResultsForSearch
							);
						}

						if (options.closeOnSelect) {
							options.dropdownAdapter = Utils.Decorate(
								options.dropdownAdapter,
								CloseOnSelect
							);
						}

						if (
							options.dropdownCssClass != null ||
							options.dropdownCss != null ||
							options.adaptDropdownCssClass != null
						) {
							var DropdownCSS = require(options.amdBase + 'compat/dropdownCss');

							options.dropdownAdapter = Utils.Decorate(
								options.dropdownAdapter,
								DropdownCSS
							);
						}

						options.dropdownAdapter = Utils.Decorate(
							options.dropdownAdapter,
							AttachBody
						);
					}

					if (options.selectionAdapter == null) {
						if (options.multiple) {
							options.selectionAdapter = MultipleSelection;
						} else {
							options.selectionAdapter = SingleSelection;
						}

						// Add the placeholder mixin if a placeholder was specified
						if (options.placeholder != null) {
							options.selectionAdapter = Utils.Decorate(
								options.selectionAdapter,
								Placeholder
							);
						}

						if (options.allowClear) {
							options.selectionAdapter = Utils.Decorate(
								options.selectionAdapter,
								AllowClear
							);
						}

						if (options.multiple) {
							options.selectionAdapter = Utils.Decorate(
								options.selectionAdapter,
								SelectionSearch
							);
						}

						if (
							options.containerCssClass != null ||
							options.containerCss != null ||
							options.adaptContainerCssClass != null
						) {
							var ContainerCSS = require(options.amdBase + 'compat/containerCss');

							options.selectionAdapter = Utils.Decorate(
								options.selectionAdapter,
								ContainerCSS
							);
						}

						options.selectionAdapter = Utils.Decorate(
							options.selectionAdapter,
							EventRelay
						);
					}

					if (typeof options.language === 'string') {
						// Check if the language is specified with a region
						if (options.language.indexOf('-') > 0) {
							// Extract the region information if it is included
							var languageParts = options.language.split('-');
							var baseLanguage = languageParts[0];

							options.language = [options.language, baseLanguage];
						} else {
							options.language = [options.language];
						}
					}

					if ($.isArray(options.language)) {
						var languages = new Translation();
						options.language.push('en');

						var languageNames = options.language;

						for (var l = 0; l < languageNames.length; l++) {
							var name = languageNames[l];
							var language = {};

							try {
								// Try to load it with the original name
								language = Translation.loadPath(name);
							} catch (e) {
								try {
									// If we couldn't load it, check if it wasn't the full path
									name = this.defaults.amdLanguageBase + name;
									language = Translation.loadPath(name);
								} catch (ex) {
									// The translation could not be loaded at all. Sometimes this is
									// because of a configuration problem, other times this can be
									// because of how Select2 helps load all possible translation files.
									if (options.debug && window.console && console.warn) {
										console.warn(
											'Select2: The language file for "' + name + '" could not be ' +
											'automatically loaded. A fallback will be used instead.'
										);
									}

									continue;
								}
							}

							languages.extend(language);
						}

						options.translations = languages;
					} else {
						var baseTranslation = Translation.loadPath(
							this.defaults.amdLanguageBase + 'en'
						);
						var customTranslation = new Translation(options.language);

						customTranslation.extend(baseTranslation);

						options.translations = customTranslation;
					}

					return options;
				};

				Defaults.prototype.reset = function() {
					function stripDiacritics(text) {
						// Used 'uni range + named function' from https://jsperf.com/diacritics/18
						function match(a) {
							return DIACRITICS[a] || a;
						}

						return text.replace(/[^\u0000-\u007E]/g, match);
					}

					function matcher(params, data) {
						// Always return the object if there is nothing to compare
						if ($.trim(params.term) === '') {
							return data;
						}

						// Do a recursive check for options with children
						if (data.children && data.children.length > 0) {
							// Clone the data object if there are children
							// This is required as we modify the object to remove any non-matches
							var match = $.extend(true, {}, data);

							// Check each child of the option
							for (var c = data.children.length - 1; c >= 0; c--) {
								var child = data.children[c];

								var matches = matcher(params, child);

								// If there wasn't a match, remove the object in the array
								if (matches == null) {
									match.children.splice(c, 1);
								}
							}

							// If any children matched, return the new object
							if (match.children.length > 0) {
								return match;
							}

							// If there were no matching children, check just the plain object
							return matcher(params, match);
						}

						var original = stripDiacritics(data.text).toUpperCase();
						var term = stripDiacritics(params.term).toUpperCase();

						// Check if the text contains the term
						if (original.indexOf(term) > -1) {
							return data;
						}

						// If it doesn't contain the term, don't return anything
						return null;
					}

					this.defaults = {
						amdBase: './',
						amdLanguageBase: './i18n/',
						closeOnSelect: true,
						debug: false,
						dropdownAutoWidth: true,
						escapeMarkup: Utils.escapeMarkup,
						language: EnglishTranslation,
						matcher: matcher,
						minimumInputLength: 0,
						maximumInputLength: 0,
						maximumSelectionLength: 0,
						minimumResultsForSearch: 0,
						selectOnClose: false,
						containerCssClass: 'wpmui-select2 :all:',
						dropdownCssClass: 'wpmui-select2',
						sorter: function(data) {
							return data;
						},
						templateResult: function(result) {
							return result.text;
						},
						templateSelection: function(selection) {
							return selection.text;
						},
						theme: 'default',
						width: 'resolve'
					};
				};

				Defaults.prototype.set = function(key, value) {
					var camelKey = $.camelCase(key);

					var data = {};
					data[camelKey] = value;

					var convertedData = Utils._convertData(data);

					$.extend(this.defaults, convertedData);
				};

				var defaults = new Defaults();

				return defaults;
			});

			S2.define('select2/options', [
				'require',
				'jquery',
				'./defaults',
				'./utils'
			], function(require, $, Defaults, Utils) {
				function Options(options, $element) {
					this.options = options;

					if ($element != null) {
						this.fromElement($element);
					}

					this.options = Defaults.apply(this.options);

					if ($element && $element.is('input')) {
						var InputCompat = require(this.get('amdBase') + 'compat/inputData');

						this.options.dataAdapter = Utils.Decorate(
							this.options.dataAdapter,
							InputCompat
						);
					}
				}

				Options.prototype.fromElement = function($e) {
					var excludedData = ['select2'];

					if (this.options.multiple == null) {
						this.options.multiple = $e.prop('multiple');
					}

					if (this.options.disabled == null) {
						this.options.disabled = $e.prop('disabled');
					}

					if (this.options.language == null) {
						if ($e.prop('lang')) {
							this.options.language = $e.prop('lang').toLowerCase();
						} else if ($e.closest('[lang]').prop('lang')) {
							this.options.language = $e.closest('[lang]').prop('lang');
						}
					}

					if (this.options.dir == null) {
						if ($e.prop('dir')) {
							this.options.dir = $e.prop('dir');
						} else if ($e.closest('[dir]').prop('dir')) {
							this.options.dir = $e.closest('[dir]').prop('dir');
						} else {
							this.options.dir = 'ltr';
						}
					}

					$e.prop('disabled', this.options.disabled);
					$e.prop('multiple', this.options.multiple);

					if ($e.data('select2Tags')) {
						if (this.options.debug && window.console && console.warn) {
							console.warn(
								'Select2: The `data-select2-tags` attribute has been changed to ' +
								'use the `data-data` and `data-tags="true"` attributes and will be ' +
								'removed in future versions of Select2.'
							);
						}

						$e.data('data', $e.data('select2Tags'));
						$e.data('tags', true);
					}

					if ($e.data('ajaxUrl')) {
						if (this.options.debug && window.console && console.warn) {
							console.warn(
								'Select2: The `data-ajax-url` attribute has been changed to ' +
								'`data-ajax--url` and support for the old attribute will be removed' +
								' in future versions of Select2.'
							);
						}

						$e.attr('ajax--url', $e.data('ajaxUrl'));
						$e.data('ajax--url', $e.data('ajaxUrl'));
					}

					var dataset = {};

					// Prefer the element's `dataset` attribute if it exists
					// jQuery 1.x does not correctly handle data attributes with multiple dashes
					if ($.fn.jquery && $.fn.jquery.substr(0, 2) == '1.' && $e[0].dataset) {
						dataset = $.extend(true, {}, $e[0].dataset, $e.data());
					} else {
						dataset = $e.data();
					}

					var data = $.extend(true, {}, dataset);

					data = Utils._convertData(data);

					for (var key in data) {
						if ($.inArray(key, excludedData) > -1) {
							continue;
						}

						if ($.isPlainObject(this.options[key])) {
							$.extend(this.options[key], data[key]);
						} else {
							this.options[key] = data[key];
						}
					}

					return this;
				};

				Options.prototype.get = function(key) {
					return this.options[key];
				};

				Options.prototype.set = function(key, val) {
					this.options[key] = val;
				};

				return Options;
			});

			S2.define('select2/core', [
				'jquery',
				'./options',
				'./utils',
				'./keys'
			], function($, Options, Utils, KEYS) {
				var Select2 = function($element, options) {
					if ($element.data('select2') != null) {
						$element.data('select2').destroy();
					}

					this.$element = $element;

					this.id = this._generateId($element);

					options = options || {};

					this.options = new Options(options, $element);

					Select2.__super__.constructor.call(this);

					// Set up the tabindex

					var tabindex = $element.attr('tabindex') || 0;
					$element.data('old-tabindex', tabindex);
					$element.attr('tabindex', '-1');

					// Set up containers and adapters

					var DataAdapter = this.options.get('dataAdapter');
					this.dataAdapter = new DataAdapter($element, this.options);

					var $container = this.render();

					this._placeContainer($container);

					var SelectionAdapter = this.options.get('selectionAdapter');
					this.selection = new SelectionAdapter($element, this.options);
					this.$selection = this.selection.render();

					this.selection.position(this.$selection, $container);

					var DropdownAdapter = this.options.get('dropdownAdapter');
					this.dropdown = new DropdownAdapter($element, this.options);
					this.$dropdown = this.dropdown.render();

					this.dropdown.position(this.$dropdown, $container);

					var ResultsAdapter = this.options.get('resultsAdapter');
					this.results = new ResultsAdapter($element, this.options, this.dataAdapter);
					this.$results = this.results.render();

					this.results.position(this.$results, this.$dropdown);

					// Bind events

					var self = this;

					// Bind the container to all of the adapters
					this._bindAdapters();

					// Register any DOM event handlers
					this._registerDomEvents();

					// Register any internal event handlers
					this._registerDataEvents();
					this._registerSelectionEvents();
					this._registerDropdownEvents();
					this._registerResultsEvents();
					this._registerEvents();

					// Set the initial state
					this.dataAdapter.current(function(initialData) {
						self.trigger('selection:update', {
							data: initialData
						});
					});

					// Hide the original select
					$element.addClass('select2-hidden-accessible');
					$element.attr('aria-hidden', 'true');

					// Synchronize any monitored attributes
					this._syncAttributes();

					$element.data('select2', this);
				};

				Utils.Extend(Select2, Utils.Observable);

				Select2.prototype._generateId = function($element) {
					var id = '';

					if ($element.attr('id') != null) {
						id = $element.attr('id');
					} else if ($element.attr('name') != null) {
						id = $element.attr('name') + '-' + Utils.generateChars(2);
					} else {
						id = Utils.generateChars(4);
					}

					id = id.replace(/(:|\.|\[|\]|,)/g, '');
					id = 'select2-' + id;

					return id;
				};

				Select2.prototype._placeContainer = function($container) {
					$container.insertAfter(this.$element);

					var width = this._resolveWidth(this.$element, this.options.get('width'));

					if (width != null) {
						$container.css('width', width);
					}
				};

				Select2.prototype._resolveWidth = function($element, method) {
					var WIDTH = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;

					if (method == 'resolve') {
						var styleWidth = this._resolveWidth($element, 'style');

						if (styleWidth != null) {
							return styleWidth;
						}

						return this._resolveWidth($element, 'element');
					}

					if (method == 'element') {
						var elementWidth = $element.outerWidth(false);

						if (elementWidth <= 0) {
							return 'auto';
						}

						return elementWidth + 'px';
					}

					if (method == 'style') {
						var style = $element.attr('style');

						if (typeof(style) !== 'string') {
							return null;
						}

						var attrs = style.split(';');

						for (var i = 0, l = attrs.length; i < l; i = i + 1) {
							var attr = attrs[i].replace(/\s/g, '');
							var matches = attr.match(WIDTH);

							if (matches !== null && matches.length >= 1) {
								return matches[1];
							}
						}

						return null;
					}

					return method;
				};

				Select2.prototype._bindAdapters = function() {
					this.dataAdapter.bind(this, this.$container);
					this.selection.bind(this, this.$container);

					this.dropdown.bind(this, this.$container);
					this.results.bind(this, this.$container);
				};

				Select2.prototype._registerDomEvents = function() {
					var self = this;

					this.$element.on('change.select2', function() {
						self.dataAdapter.current(function(data) {
							self.trigger('selection:update', {
								data: data
							});
						});
					});

					this.$element.on('focus.select2', function(evt) {
						self.trigger('focus', evt);
					});

					this._syncA = Utils.bind(this._syncAttributes, this);
					this._syncS = Utils.bind(this._syncSubtree, this);

					if (this.$element[0].attachEvent) {
						this.$element[0].attachEvent('onpropertychange', this._syncA);
					}

					var observer = window.MutationObserver ||
						window.WebKitMutationObserver ||
						window.MozMutationObserver;

					if (observer != null) {
						this._observer = new observer(function(mutations) {
							$.each(mutations, self._syncA);
							$.each(mutations, self._syncS);
						});
						this._observer.observe(this.$element[0], {
							attributes: true,
							childList: true,
							subtree: false
						});
					} else if (this.$element[0].addEventListener) {
						this.$element[0].addEventListener(
							'DOMAttrModified',
							self._syncA,
							false
						);
						this.$element[0].addEventListener(
							'DOMNodeInserted',
							self._syncS,
							false
						);
						this.$element[0].addEventListener(
							'DOMNodeRemoved',
							self._syncS,
							false
						);
					}
				};

				Select2.prototype._registerDataEvents = function() {
					var self = this;

					this.dataAdapter.on('*', function(name, params) {
						self.trigger(name, params);
					});
				};

				Select2.prototype._registerSelectionEvents = function() {
					var self = this;
					var nonRelayEvents = ['toggle', 'focus'];

					this.selection.on('toggle', function() {
						self.toggleDropdown();
					});

					this.selection.on('focus', function(params) {
						self.focus(params);
					});

					this.selection.on('*', function(name, params) {
						if ($.inArray(name, nonRelayEvents) !== -1) {
							return;
						}

						self.trigger(name, params);
					});
				};

				Select2.prototype._registerDropdownEvents = function() {
					var self = this;

					this.dropdown.on('*', function(name, params) {
						self.trigger(name, params);
					});
				};

				Select2.prototype._registerResultsEvents = function() {
					var self = this;

					this.results.on('*', function(name, params) {
						self.trigger(name, params);
					});
				};

				Select2.prototype._registerEvents = function() {
					var self = this;

					this.on('open', function() {
						self.$container.addClass('select2-container--open');
					});

					this.on('close', function() {
						self.$container.removeClass('select2-container--open');
					});

					this.on('enable', function() {
						self.$container.removeClass('select2-container--disabled');
					});

					this.on('disable', function() {
						self.$container.addClass('select2-container--disabled');
					});

					this.on('blur', function() {
						self.$container.removeClass('select2-container--focus');
					});

					this.on('query', function(params) {
						if (!self.isOpen()) {
							self.trigger('open', {});
						}

						this.dataAdapter.query(params, function(data) {
							self.trigger('results:all', {
								data: data,
								query: params
							});
						});
					});

					this.on('query:append', function(params) {
						this.dataAdapter.query(params, function(data) {
							self.trigger('results:append', {
								data: data,
								query: params
							});
						});
					});

					this.on('keypress', function(evt) {
						var key = evt.which;

						if (self.isOpen()) {
							if (key === KEYS.ESC || key === KEYS.TAB ||
								(key === KEYS.UP && evt.altKey)) {
								self.close();

								evt.preventDefault();
							} else if (key === KEYS.ENTER) {
								self.trigger('results:select', {});

								evt.preventDefault();
							} else if ((key === KEYS.SPACE && evt.ctrlKey)) {
								self.trigger('results:toggle', {});

								evt.preventDefault();
							} else if (key === KEYS.UP) {
								self.trigger('results:previous', {});

								evt.preventDefault();
							} else if (key === KEYS.DOWN) {
								self.trigger('results:next', {});

								evt.preventDefault();
							}
						} else {
							if (key === KEYS.ENTER || key === KEYS.SPACE ||
								(key === KEYS.DOWN && evt.altKey)) {
								self.open();

								evt.preventDefault();
							}
						}
					});
				};

				Select2.prototype._syncAttributes = function() {
					this.options.set('disabled', this.$element.prop('disabled'));

					if (this.options.get('disabled')) {
						if (this.isOpen()) {
							this.close();
						}

						this.trigger('disable', {});
					} else {
						this.trigger('enable', {});
					}
				};

				Select2.prototype._syncSubtree = function(evt, mutations) {
					var changed = false;
					var self = this;

					// Ignore any mutation events raised for elements that aren't options or
					// optgroups. This handles the case when the select element is destroyed
					if (
						evt && evt.target && (
							evt.target.nodeName !== 'OPTION' && evt.target.nodeName !== 'OPTGROUP'
						)
					) {
						return;
					}

					if (!mutations) {
						// If mutation events aren't supported, then we can only assume that the
						// change affected the selections
						changed = true;
					} else if (mutations.addedNodes && mutations.addedNodes.length > 0) {
						for (var n = 0; n < mutations.addedNodes.length; n++) {
							var node = mutations.addedNodes[n];

							if (node.selected) {
								changed = true;
							}
						}
					} else if (mutations.removedNodes && mutations.removedNodes.length > 0) {
						changed = true;
					}

					// Only re-pull the data if we think there is a change
					if (changed) {
						this.dataAdapter.current(function(currentData) {
							self.trigger('selection:update', {
								data: currentData
							});
						});
					}
				};

				/**
				 * Override the trigger method to automatically trigger pre-events when
				 * there are events that can be prevented.
				 */
				Select2.prototype.trigger = function(name, args) {
					var actualTrigger = Select2.__super__.trigger;
					var preTriggerMap = {
						'open': 'opening',
						'close': 'closing',
						'select': 'selecting',
						'unselect': 'unselecting'
					};

					if (args === undefined) {
						args = {};
					}

					if (name in preTriggerMap) {
						var preTriggerName = preTriggerMap[name];
						var preTriggerArgs = {
							prevented: false,
							name: name,
							args: args
						};

						actualTrigger.call(this, preTriggerName, preTriggerArgs);

						if (preTriggerArgs.prevented) {
							args.prevented = true;

							return;
						}
					}

					actualTrigger.call(this, name, args);
				};

				Select2.prototype.toggleDropdown = function() {
					if (this.options.get('disabled')) {
						return;
					}

					if (this.isOpen()) {
						this.close();
					} else {
						this.open();
					}
				};

				Select2.prototype.open = function() {
					if (this.isOpen()) {
						return;
					}

					this.trigger('query', {});
				};

				Select2.prototype.close = function() {
					if (!this.isOpen()) {
						return;
					}

					this.trigger('close', {});
				};

				Select2.prototype.isOpen = function() {
					return this.$container.hasClass('select2-container--open');
				};

				Select2.prototype.hasFocus = function() {
					return this.$container.hasClass('select2-container--focus');
				};

				Select2.prototype.focus = function(data) {
					// No need to re-trigger focus events if we are already focused
					if (this.hasFocus()) {
						return;
					}

					this.$container.addClass('select2-container--focus');
					this.trigger('focus', {});
				};

				Select2.prototype.enable = function(args) {
					if (this.options.get('debug') && window.console && console.warn) {
						console.warn(
							'Select2: The `select2("enable")` method has been deprecated and will' +
							' be removed in later Select2 versions. Use $element.prop("disabled")' +
							' instead.'
						);
					}

					if (args == null || args.length === 0) {
						args = [true];
					}

					var disabled = !args[0];

					this.$element.prop('disabled', disabled);
				};

				Select2.prototype.data = function() {
					if (this.options.get('debug') &&
						arguments.length > 0 && window.console && console.warn) {
						console.warn(
							'Select2: Data can no longer be set using `select2("data")`. You ' +
							'should consider setting the value instead using `$element.val()`.'
						);
					}

					var data = [];

					this.dataAdapter.current(function(currentData) {
						data = currentData;
					});

					return data;
				};

				Select2.prototype.val = function(args) {
					if (this.options.get('debug') && window.console && console.warn) {
						console.warn(
							'Select2: The `select2("val")` method has been deprecated and will be' +
							' removed in later Select2 versions. Use $element.val() instead.'
						);
					}

					if (args == null || args.length === 0) {
						return this.$element.val();
					}

					var newVal = args[0];

					if ($.isArray(newVal)) {
						newVal = $.map(newVal, function(obj) {
							return obj.toString();
						});
					}

					this.$element.val(newVal).trigger('change');
				};

				Select2.prototype.destroy = function() {
					this.$container.remove();

					if (this.$element[0].detachEvent) {
						this.$element[0].detachEvent('onpropertychange', this._syncA);
					}

					if (this._observer != null) {
						this._observer.disconnect();
						this._observer = null;
					} else if (this.$element[0].removeEventListener) {
						this.$element[0]
							.removeEventListener('DOMAttrModified', this._syncA, false);
						this.$element[0]
							.removeEventListener('DOMNodeInserted', this._syncS, false);
						this.$element[0]
							.removeEventListener('DOMNodeRemoved', this._syncS, false);
					}

					this._syncA = null;
					this._syncS = null;

					this.$element.off('.select2');
					this.$element.attr('tabindex', this.$element.data('old-tabindex'));

					this.$element.removeClass('select2-hidden-accessible');
					this.$element.attr('aria-hidden', 'false');
					this.$element.removeData('select2');

					this.dataAdapter.destroy();
					this.selection.destroy();
					this.dropdown.destroy();
					this.results.destroy();

					this.dataAdapter = null;
					this.selection = null;
					this.dropdown = null;
					this.results = null;
				};

				Select2.prototype.render = function() {
					var $container = $(
						'<span class="select2 select2-container">' +
						'<span class="selection"></span>' +
						'<span class="dropdown-wrapper" aria-hidden="true"></span>' +
						'</span>'
					);

					$container.attr('dir', this.options.get('dir'));

					this.$container = $container;

					this.$container.addClass('select2-container--' + this.options.get('theme'));

					$container.data('element', this.$element);

					return $container;
				};

				return Select2;
			});

			S2.define('select2/compat/utils', [
				'jquery'
			], function($) {
				function syncCssClasses($dest, $src, adapter) {
					var classes, replacements = [],
						adapted;

					classes = $.trim($dest.attr('class'));

					if (classes) {
						classes = '' + classes; // for IE which returns object

						$(classes.split(/\s+/)).each(function() {
							// Save all Select2 classes
							if (this.indexOf('select2-') === 0) {
								replacements.push(this);
							}
						});
					}

					classes = $.trim($src.attr('class'));

					if (classes) {
						classes = '' + classes; // for IE which returns object

						$(classes.split(/\s+/)).each(function() {
							// Only adapt non-Select2 classes
							if (this.indexOf('select2-') !== 0) {
								adapted = adapter(this);

								if (adapted != null) {
									replacements.push(adapted);
								}
							}
						});
					}

					$dest.attr('class', replacements.join(' '));
				}

				return {
					syncCssClasses: syncCssClasses
				};
			});

			S2.define('select2/compat/containerCss', [
				'jquery',
				'./utils'
			], function($, CompatUtils) {
				// No-op CSS adapter that discards all classes by default
				function _containerAdapter(clazz) {
					return null;
				}

				function ContainerCSS() {}

				ContainerCSS.prototype.render = function(decorated) {
					var $container = decorated.call(this);

					var containerCssClass = this.options.get('containerCssClass') || '';

					if ($.isFunction(containerCssClass)) {
						containerCssClass = containerCssClass(this.$element);
					}

					var containerCssAdapter = this.options.get('adaptContainerCssClass');
					containerCssAdapter = containerCssAdapter || _containerAdapter;

					if (containerCssClass.indexOf(':all:') !== -1) {
						containerCssClass = containerCssClass.replace(':all:', '');

						var _cssAdapter = containerCssAdapter;

						containerCssAdapter = function(clazz) {
							var adapted = _cssAdapter(clazz);

							if (adapted != null) {
								// Append the old one along with the adapted one
								return adapted + ' ' + clazz;
							}

							return clazz;
						};
					}

					var containerCss = this.options.get('containerCss') || {};

					if ($.isFunction(containerCss)) {
						containerCss = containerCss(this.$element);
					}

					CompatUtils.syncCssClasses($container, this.$element, containerCssAdapter);

					$container.css(containerCss);
					$container.addClass(containerCssClass);

					return $container;
				};

				return ContainerCSS;
			});

			S2.define('select2/compat/dropdownCss', [
				'jquery',
				'./utils'
			], function($, CompatUtils) {
				// No-op CSS adapter that discards all classes by default
				function _dropdownAdapter(clazz) {
					return null;
				}

				function DropdownCSS() {}

				DropdownCSS.prototype.render = function(decorated) {
					var $dropdown = decorated.call(this);

					var dropdownCssClass = this.options.get('dropdownCssClass') || '';

					if ($.isFunction(dropdownCssClass)) {
						dropdownCssClass = dropdownCssClass(this.$element);
					}

					var dropdownCssAdapter = this.options.get('adaptDropdownCssClass');
					dropdownCssAdapter = dropdownCssAdapter || _dropdownAdapter;

					if (dropdownCssClass.indexOf(':all:') !== -1) {
						dropdownCssClass = dropdownCssClass.replace(':all:', '');

						var _cssAdapter = dropdownCssAdapter;

						dropdownCssAdapter = function(clazz) {
							var adapted = _cssAdapter(clazz);

							if (adapted != null) {
								// Append the old one along with the adapted one
								return adapted + ' ' + clazz;
							}

							return clazz;
						};
					}

					var dropdownCss = this.options.get('dropdownCss') || {};

					if ($.isFunction(dropdownCss)) {
						dropdownCss = dropdownCss(this.$element);
					}

					CompatUtils.syncCssClasses($dropdown, this.$element, dropdownCssAdapter);

					$dropdown.css(dropdownCss);
					$dropdown.addClass(dropdownCssClass);

					return $dropdown;
				};

				return DropdownCSS;
			});

			S2.define('select2/compat/initSelection', [
				'jquery'
			], function($) {
				function InitSelection(decorated, $element, options) {
					if (options.get('debug') && window.console && console.warn) {
						console.warn(
							'Select2: The `initSelection` option has been deprecated in favor' +
							' of a custom data adapter that overrides the `current` method. ' +
							'This method is now called multiple times instead of a single ' +
							'time when the instance is initialized. Support will be removed ' +
							'for the `initSelection` option in future versions of Select2'
						);
					}

					this.initSelection = options.get('initSelection');
					this._isInitialized = false;

					decorated.call(this, $element, options);
				}

				InitSelection.prototype.current = function(decorated, callback) {
					var self = this;

					if (this._isInitialized) {
						decorated.call(this, callback);

						return;
					}

					this.initSelection.call(null, this.$element, function(data) {
						self._isInitialized = true;

						if (!$.isArray(data)) {
							data = [data];
						}

						callback(data);
					});
				};

				return InitSelection;
			});

			S2.define('select2/compat/inputData', [
				'jquery'
			], function($) {
				function InputData(decorated, $element, options) {
					this._currentData = [];
					this._valueSeparator = options.get('valueSeparator') || ',';

					if ($element.prop('type') === 'hidden') {
						if (options.get('debug') && console && console.warn) {
							console.warn(
								'Select2: Using a hidden input with Select2 is no longer ' +
								'supported and may stop working in the future. It is recommended ' +
								'to use a `<select>` element instead.'
							);
						}
					}

					decorated.call(this, $element, options);
				}

				InputData.prototype.current = function(_, callback) {
					function getSelected(data, selectedIds) {
						var selected = [];

						if (data.selected || $.inArray(data.id, selectedIds) !== -1) {
							data.selected = true;
							selected.push(data);
						} else {
							data.selected = false;
						}

						if (data.children) {
							selected.push.apply(selected, getSelected(data.children, selectedIds));
						}

						return selected;
					}

					var selected = [];

					for (var d = 0; d < this._currentData.length; d++) {
						var data = this._currentData[d];

						selected.push.apply(
							selected,
							getSelected(
								data,
								this.$element.val().split(
									this._valueSeparator
								)
							)
						);
					}

					callback(selected);
				};

				InputData.prototype.select = function(_, data) {
					if (!this.options.get('multiple')) {
						this.current(function(allData) {
							$.map(allData, function(data) {
								data.selected = false;
							});
						});

						this.$element.val(data.id);
						this.$element.trigger('change');
					} else {
						var value = this.$element.val();
						value += this._valueSeparator + data.id;

						this.$element.val(value);
						this.$element.trigger('change');
					}
				};

				InputData.prototype.unselect = function(_, data) {
					var self = this;

					data.selected = false;

					this.current(function(allData) {
						var values = [];

						for (var d = 0; d < allData.length; d++) {
							var item = allData[d];

							if (data.id == item.id) {
								continue;
							}

							values.push(item.id);
						}

						self.$element.val(values.join(self._valueSeparator));
						self.$element.trigger('change');
					});
				};

				InputData.prototype.query = function(_, params, callback) {
					var results = [];

					for (var d = 0; d < this._currentData.length; d++) {
						var data = this._currentData[d];

						var matches = this.matches(params, data);

						if (matches !== null) {
							results.push(matches);
						}
					}

					callback({
						results: results
					});
				};

				InputData.prototype.addOptions = function(_, $options) {
					var options = $.map($options, function($option) {
						return $.data($option[0], 'data');
					});

					this._currentData.push.apply(this._currentData, options);
				};

				return InputData;
			});

			S2.define('select2/compat/matcher', [
				'jquery'
			], function($) {
				function oldMatcher(matcher) {
					function wrappedMatcher(params, data) {
						var match = $.extend(true, {}, data);

						if (params.term == null || $.trim(params.term) === '') {
							return match;
						}

						if (data.children) {
							for (var c = data.children.length - 1; c >= 0; c--) {
								var child = data.children[c];

								// Check if the child object matches
								// The old matcher returned a boolean true or false
								var doesMatch = matcher(params.term, child.text, child);

								// If the child didn't match, pop it off
								if (!doesMatch) {
									match.children.splice(c, 1);
								}
							}

							if (match.children.length > 0) {
								return match;
							}
						}

						if (matcher(params.term, data.text, data)) {
							return match;
						}

						return null;
					}

					return wrappedMatcher;
				}

				return oldMatcher;
			});

			S2.define('select2/compat/query', [

			], function() {
				function Query(decorated, $element, options) {
					if (options.get('debug') && window.console && console.warn) {
						console.warn(
							'Select2: The `query` option has been deprecated in favor of a ' +
							'custom data adapter that overrides the `query` method. Support ' +
							'will be removed for the `query` option in future versions of ' +
							'Select2.'
						);
					}

					decorated.call(this, $element, options);
				}

				Query.prototype.query = function(_, params, callback) {
					params.callback = callback;

					var query = this.options.get('query');

					query.call(null, params);
				};

				return Query;
			});

			S2.define('select2/dropdown/attachContainer', [

			], function() {
				function AttachContainer(decorated, $element, options) {
					decorated.call(this, $element, options);
				}

				AttachContainer.prototype.position =
					function(decorated, $dropdown, $container) {
						var $dropdownContainer = $container.find('.dropdown-wrapper');
						$dropdownContainer.append($dropdown);

						$dropdown.addClass('select2-dropdown--below');
						$container.addClass('select2-container--below');
					};

				return AttachContainer;
			});

			S2.define('select2/dropdown/stopPropagation', [

			], function() {
				function StopPropagation() {}

				StopPropagation.prototype.bind = function(decorated, container, $container) {
					decorated.call(this, container, $container);

					var stoppedEvents = [
						'blur',
						'change',
						'click',
						'dblclick',
						'focus',
						'focusin',
						'focusout',
						'input',
						'keydown',
						'keyup',
						'keypress',
						'mousedown',
						'mouseenter',
						'mouseleave',
						'mousemove',
						'mouseover',
						'mouseup',
						'search',
						'touchend',
						'touchstart'
					];

					this.$dropdown.on(stoppedEvents.join(' '), function(evt) {
						evt.stopPropagation();
					});
				};

				return StopPropagation;
			});

			S2.define('select2/selection/stopPropagation', [

			], function() {
				function StopPropagation() {}

				StopPropagation.prototype.bind = function(decorated, container, $container) {
					decorated.call(this, container, $container);

					var stoppedEvents = [
						'blur',
						'change',
						'click',
						'dblclick',
						'focus',
						'focusin',
						'focusout',
						'input',
						'keydown',
						'keyup',
						'keypress',
						'mousedown',
						'mouseenter',
						'mouseleave',
						'mousemove',
						'mouseover',
						'mouseup',
						'search',
						'touchend',
						'touchstart'
					];

					this.$selection.on(stoppedEvents.join(' '), function(evt) {
						evt.stopPropagation();
					});
				};

				return StopPropagation;
			});

			/*!
         * jQuery Mousewheel 3.1.13
         *
         * Copyright jQuery Foundation and other contributors
         * Released under the MIT license
         * https://jquery.org/license
         */

			(function(factory) {
				if (typeof S2.define === 'function' && S2.define.amd) {
					// AMD. Register as an anonymous module.
					S2.define('jquery-mousewheel', ['jquery'], factory);
				} else if (typeof exports === 'object') {
					// Node/CommonJS style for Browserify
					module.exports = factory;
				} else {
					// Browser globals
					factory(jQuery);
				}
			}(function($) {

				var toFix = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],
					toBind = ('onwheel' in document || document.documentMode >= 9) ? ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],
					slice = Array.prototype.slice,
					nullLowestDeltaTimeout, lowestDelta;

				if ($.event.fixHooks) {
					for (var i = toFix.length; i;) {
						$.event.fixHooks[toFix[--i]] = $.event.mouseHooks;
					}
				}

				var special = $.event.special.mousewheel = {
					version: '3.1.12',

					setup: function() {
						if (this.addEventListener) {
							for (var i = toBind.length; i;) {
								this.addEventListener(toBind[--i], handler, false);
							}
						} else {
							this.onmousewheel = handler;
						}
						// Store the line height and page height for this particular element
						$.data(this, 'mousewheel-line-height', special.getLineHeight(this));
						$.data(this, 'mousewheel-page-height', special.getPageHeight(this));
					},

					teardown: function() {
						if (this.removeEventListener) {
							for (var i = toBind.length; i;) {
								this.removeEventListener(toBind[--i], handler, false);
							}
						} else {
							this.onmousewheel = null;
						}
						// Clean up the data we added to the element
						$.removeData(this, 'mousewheel-line-height');
						$.removeData(this, 'mousewheel-page-height');
					},

					getLineHeight: function(elem) {
						var $elem = $(elem),
							$parent = $elem['offsetParent' in $.fn ? 'offsetParent' : 'parent']();
						if (!$parent.length) {
							$parent = $('body');
						}
						return parseInt($parent.css('fontSize'), 10) || parseInt($elem.css('fontSize'), 10) || 16;
					},

					getPageHeight: function(elem) {
						return $(elem).height();
					},

					settings: {
						adjustOldDeltas: true, // see shouldAdjustOldDeltas() below
						normalizeOffset: true // calls getBoundingClientRect for each event
					}
				};

				$.fn.extend({
					mousewheel: function(fn) {
						return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');
					},

					unmousewheel: function(fn) {
						return this.unbind('mousewheel', fn);
					}
				});


				function handler(event) {
					var orgEvent = event || window.event,
						args = slice.call(arguments, 1),
						delta = 0,
						deltaX = 0,
						deltaY = 0,
						absDelta = 0,
						offsetX = 0,
						offsetY = 0;
					event = $.event.fix(orgEvent);
					event.type = 'mousewheel';

					// Old school scrollwheel delta
					if ('detail' in orgEvent) {
						deltaY = orgEvent.detail * -1;
					}
					if ('wheelDelta' in orgEvent) {
						deltaY = orgEvent.wheelDelta;
					}
					if ('wheelDeltaY' in orgEvent) {
						deltaY = orgEvent.wheelDeltaY;
					}
					if ('wheelDeltaX' in orgEvent) {
						deltaX = orgEvent.wheelDeltaX * -1;
					}

					// Firefox < 17 horizontal scrolling related to DOMMouseScroll event
					if ('axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS) {
						deltaX = deltaY * -1;
						deltaY = 0;
					}

					// Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy
					delta = deltaY === 0 ? deltaX : deltaY;

					// New school wheel delta (wheel event)
					if ('deltaY' in orgEvent) {
						deltaY = orgEvent.deltaY * -1;
						delta = deltaY;
					}
					if ('deltaX' in orgEvent) {
						deltaX = orgEvent.deltaX;
						if (deltaY === 0) {
							delta = deltaX * -1;
						}
					}

					// No change actually happened, no reason to go any further
					if (deltaY === 0 && deltaX === 0) {
						return;
					}

					// Need to convert lines and pages to pixels if we aren't already in pixels
					// There are three delta modes:
					//   * deltaMode 0 is by pixels, nothing to do
					//   * deltaMode 1 is by lines
					//   * deltaMode 2 is by pages
					if (orgEvent.deltaMode === 1) {
						var lineHeight = $.data(this, 'mousewheel-line-height');
						delta *= lineHeight;
						deltaY *= lineHeight;
						deltaX *= lineHeight;
					} else if (orgEvent.deltaMode === 2) {
						var pageHeight = $.data(this, 'mousewheel-page-height');
						delta *= pageHeight;
						deltaY *= pageHeight;
						deltaX *= pageHeight;
					}

					// Store lowest absolute delta to normalize the delta values
					absDelta = Math.max(Math.abs(deltaY), Math.abs(deltaX));

					if (!lowestDelta || absDelta < lowestDelta) {
						lowestDelta = absDelta;

						// Adjust older deltas if necessary
						if (shouldAdjustOldDeltas(orgEvent, absDelta)) {
							lowestDelta /= 40;
						}
					}

					// Adjust older deltas if necessary
					if (shouldAdjustOldDeltas(orgEvent, absDelta)) {
						// Divide all the things by 40!
						delta /= 40;
						deltaX /= 40;
						deltaY /= 40;
					}

					// Get a whole, normalized value for the deltas
					delta = Math[delta >= 1 ? 'floor' : 'ceil'](delta / lowestDelta);
					deltaX = Math[deltaX >= 1 ? 'floor' : 'ceil'](deltaX / lowestDelta);
					deltaY = Math[deltaY >= 1 ? 'floor' : 'ceil'](deltaY / lowestDelta);

					// Normalise offsetX and offsetY properties
					if (special.settings.normalizeOffset && this.getBoundingClientRect) {
						var boundingRect = this.getBoundingClientRect();
						offsetX = event.clientX - boundingRect.left;
						offsetY = event.clientY - boundingRect.top;
					}

					// Add information to the event object
					event.deltaX = deltaX;
					event.deltaY = deltaY;
					event.deltaFactor = lowestDelta;
					event.offsetX = offsetX;
					event.offsetY = offsetY;
					// Go ahead and set deltaMode to 0 since we converted to pixels
					// Although this is a little odd since we overwrite the deltaX/Y
					// properties with normalized deltas.
					event.deltaMode = 0;

					// Add event and delta to the front of the arguments
					args.unshift(event, delta, deltaX, deltaY);

					// Clearout lowestDelta after sometime to better
					// handle multiple device types that give different
					// a different lowestDelta
					// Ex: trackpad = 3 and mouse wheel = 120
					if (nullLowestDeltaTimeout) {
						clearTimeout(nullLowestDeltaTimeout);
					}
					nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);

					return ($.event.dispatch || $.event.handle).apply(this, args);
				}

				function nullLowestDelta() {
					lowestDelta = null;
				}

				function shouldAdjustOldDeltas(orgEvent, absDelta) {
					// If this is an older event and the delta is divisable by 120,
					// then we are assuming that the browser is treating this as an
					// older mouse wheel event and that we should divide the deltas
					// by 40 to try and get a more usable deltaFactor.
					// Side note, this actually impacts the reported scroll distance
					// in older browsers and can cause scrolling to be slower than native.
					// Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.
					return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;
				}

			}));

			S2.define('jquery.select2', [
				'jquery',
				'jquery-mousewheel',

				'./select2/core',
				'./select2/defaults'
			], function($, _, Select2, Defaults) {
				if ($.fn.wpmuiSelect == null) {
					// All methods that should return the element
					var thisMethods = ['open', 'close', 'destroy'];

					$.fn.wpmuiSelect = function(options) {
						options = options || {};

						if (typeof options === 'object') {
							this.each(function() {
								var instanceOptions = $.extend(true, {}, options);

								var instance = new Select2($(this), instanceOptions);
							});

							return this;
						} else if (typeof options === 'string') {
							var ret;
							var args = Array.prototype.slice.call(arguments, 1);

							this.each(function() {
								var instance = $(this).data('select2');

								if (instance == null && window.console && console.error) {
									console.error(
										'The select2(\'' + options + '\') method was called on an ' +
										'element that is not using Select2.'
									);
								}

								ret = instance[options].apply(instance, args);
							});

							// Check if we should be returning `this`
							if ($.inArray(options, thisMethods) > -1) {
								return this;
							}

							return ret;
						} else {
							throw new Error('Invalid arguments for Select2: ' + options);
						}
					};
				}

				if ($.fn.wpmuiSelect.defaults == null) {
					$.fn.wpmuiSelect.defaults = Defaults;
				}

				return Select2;
			});

			// Return the AMD loader configuration so it can be used outside of this file
			return {
				define: S2.define,
				require: S2.require
			};
		}());

	// Autoload the jQuery bindings
	// We know that all of the modules exist above this, so we're safe
	var select2 = S2.require('jquery.select2');

	// Hold the AMD module references on the jQuery function that was just loaded
	// This allows Select2 to use the internal loader outside of this file, such
	// as in the language files.
	jQuery.fn.wpmuiSelect.amd = S2;

	// Return the Select2 instance for anyone who is importing it.
	return select2;
}));
/*! jQuery Validation Plugin - v1.17.0 - 7/29/2017
 * https://jqueryvalidation.org/
 * Copyright (c) 2017 Jörn Zaefferer; Licensed MIT */
!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):"object"==typeof module&&module.exports?module.exports=a(require("jquery")):a(jQuery)}(function(a){a.extend(a.fn,{validate:function(b){if(!this.length)return void(b&&b.debug&&window.console&&console.warn("Nothing selected, can't validate, returning nothing."));var c=a.data(this[0],"validator");return c?c:(this.attr("novalidate","novalidate"),c=new a.validator(b,this[0]),a.data(this[0],"validator",c),c.settings.onsubmit&&(this.on("click.validate",":submit",function(b){c.submitButton=b.currentTarget,a(this).hasClass("cancel")&&(c.cancelSubmit=!0),void 0!==a(this).attr("formnovalidate")&&(c.cancelSubmit=!0)}),this.on("submit.validate",function(b){function d(){var d,e;return c.submitButton&&(c.settings.submitHandler||c.formSubmitted)&&(d=a("<input type='hidden'/>").attr("name",c.submitButton.name).val(a(c.submitButton).val()).appendTo(c.currentForm)),!c.settings.submitHandler||(e=c.settings.submitHandler.call(c,c.currentForm,b),d&&d.remove(),void 0!==e&&e)}return c.settings.debug&&b.preventDefault(),c.cancelSubmit?(c.cancelSubmit=!1,d()):c.form()?c.pendingRequest?(c.formSubmitted=!0,!1):d():(c.focusInvalid(),!1)})),c)},valid:function(){var b,c,d;return a(this[0]).is("form")?b=this.validate().form():(d=[],b=!0,c=a(this[0].form).validate(),this.each(function(){b=c.element(this)&&b,b||(d=d.concat(c.errorList))}),c.errorList=d),b},rules:function(b,c){var d,e,f,g,h,i,j=this[0];if(null!=j&&(!j.form&&j.hasAttribute("contenteditable")&&(j.form=this.closest("form")[0],j.name=this.attr("name")),null!=j.form)){if(b)switch(d=a.data(j.form,"validator").settings,e=d.rules,f=a.validator.staticRules(j),b){case"add":a.extend(f,a.validator.normalizeRule(c)),delete f.messages,e[j.name]=f,c.messages&&(d.messages[j.name]=a.extend(d.messages[j.name],c.messages));break;case"remove":return c?(i={},a.each(c.split(/\s/),function(a,b){i[b]=f[b],delete f[b]}),i):(delete e[j.name],f)}return g=a.validator.normalizeRules(a.extend({},a.validator.classRules(j),a.validator.attributeRules(j),a.validator.dataRules(j),a.validator.staticRules(j)),j),g.required&&(h=g.required,delete g.required,g=a.extend({required:h},g)),g.remote&&(h=g.remote,delete g.remote,g=a.extend(g,{remote:h})),g}}}),a.extend(a.expr.pseudos||a.expr[":"],{blank:function(b){return!a.trim(""+a(b).val())},filled:function(b){var c=a(b).val();return null!==c&&!!a.trim(""+c)},unchecked:function(b){return!a(b).prop("checked")}}),a.validator=function(b,c){this.settings=a.extend(!0,{},a.validator.defaults,b),this.currentForm=c,this.init()},a.validator.format=function(b,c){return 1===arguments.length?function(){var c=a.makeArray(arguments);return c.unshift(b),a.validator.format.apply(this,c)}:void 0===c?b:(arguments.length>2&&c.constructor!==Array&&(c=a.makeArray(arguments).slice(1)),c.constructor!==Array&&(c=[c]),a.each(c,function(a,c){b=b.replace(new RegExp("\\{"+a+"\\}","g"),function(){return c})}),b)},a.extend(a.validator,{defaults:{messages:{},groups:{},rules:{},errorClass:"error",pendingClass:"pending",validClass:"valid",errorElement:"label",focusCleanup:!1,focusInvalid:!0,errorContainer:a([]),errorLabelContainer:a([]),onsubmit:!0,ignore:":hidden",ignoreTitle:!1,onfocusin:function(a){this.lastActive=a,this.settings.focusCleanup&&(this.settings.unhighlight&&this.settings.unhighlight.call(this,a,this.settings.errorClass,this.settings.validClass),this.hideThese(this.errorsFor(a)))},onfocusout:function(a){this.checkable(a)||!(a.name in this.submitted)&&this.optional(a)||this.element(a)},onkeyup:function(b,c){var d=[16,17,18,20,35,36,37,38,39,40,45,144,225];9===c.which&&""===this.elementValue(b)||a.inArray(c.keyCode,d)!==-1||(b.name in this.submitted||b.name in this.invalid)&&this.element(b)},onclick:function(a){a.name in this.submitted?this.element(a):a.parentNode.name in this.submitted&&this.element(a.parentNode)},highlight:function(b,c,d){"radio"===b.type?this.findByName(b.name).addClass(c).removeClass(d):a(b).addClass(c).removeClass(d)},unhighlight:function(b,c,d){"radio"===b.type?this.findByName(b.name).removeClass(c).addClass(d):a(b).removeClass(c).addClass(d)}},setDefaults:function(b){a.extend(a.validator.defaults,b)},messages:{required:"This field is required.",remote:"Please fix this field.",email:"Please enter a valid email address.",url:"Please enter a valid URL.",date:"Please enter a valid date.",dateISO:"Please enter a valid date (ISO).",number:"Please enter a valid number.",digits:"Please enter only digits.",equalTo:"Please enter the same value again.",maxlength:a.validator.format("Please enter no more than {0} characters."),minlength:a.validator.format("Please enter at least {0} characters."),rangelength:a.validator.format("Please enter a value between {0} and {1} characters long."),range:a.validator.format("Please enter a value between {0} and {1}."),max:a.validator.format("Please enter a value less than or equal to {0}."),min:a.validator.format("Please enter a value greater than or equal to {0}."),step:a.validator.format("Please enter a multiple of {0}.")},autoCreateRanges:!1,prototype:{init:function(){function b(b){!this.form&&this.hasAttribute("contenteditable")&&(this.form=a(this).closest("form")[0],this.name=a(this).attr("name"));var c=a.data(this.form,"validator"),d="on"+b.type.replace(/^validate/,""),e=c.settings;e[d]&&!a(this).is(e.ignore)&&e[d].call(c,this,b)}this.labelContainer=a(this.settings.errorLabelContainer),this.errorContext=this.labelContainer.length&&this.labelContainer||a(this.currentForm),this.containers=a(this.settings.errorContainer).add(this.settings.errorLabelContainer),this.submitted={},this.valueCache={},this.pendingRequest=0,this.pending={},this.invalid={},this.reset();var c,d=this.groups={};a.each(this.settings.groups,function(b,c){"string"==typeof c&&(c=c.split(/\s/)),a.each(c,function(a,c){d[c]=b})}),c=this.settings.rules,a.each(c,function(b,d){c[b]=a.validator.normalizeRule(d)}),a(this.currentForm).on("focusin.validate focusout.validate keyup.validate",":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox'], [contenteditable], [type='button']",b).on("click.validate","select, option, [type='radio'], [type='checkbox']",b),this.settings.invalidHandler&&a(this.currentForm).on("invalid-form.validate",this.settings.invalidHandler)},form:function(){return this.checkForm(),a.extend(this.submitted,this.errorMap),this.invalid=a.extend({},this.errorMap),this.valid()||a(this.currentForm).triggerHandler("invalid-form",[this]),this.showErrors(),this.valid()},checkForm:function(){this.prepareForm();for(var a=0,b=this.currentElements=this.elements();b[a];a++)this.check(b[a]);return this.valid()},element:function(b){var c,d,e=this.clean(b),f=this.validationTargetFor(e),g=this,h=!0;return void 0===f?delete this.invalid[e.name]:(this.prepareElement(f),this.currentElements=a(f),d=this.groups[f.name],d&&a.each(this.groups,function(a,b){b===d&&a!==f.name&&(e=g.validationTargetFor(g.clean(g.findByName(a))),e&&e.name in g.invalid&&(g.currentElements.push(e),h=g.check(e)&&h))}),c=this.check(f)!==!1,h=h&&c,c?this.invalid[f.name]=!1:this.invalid[f.name]=!0,this.numberOfInvalids()||(this.toHide=this.toHide.add(this.containers)),this.showErrors(),a(b).attr("aria-invalid",!c)),h},showErrors:function(b){if(b){var c=this;a.extend(this.errorMap,b),this.errorList=a.map(this.errorMap,function(a,b){return{message:a,element:c.findByName(b)[0]}}),this.successList=a.grep(this.successList,function(a){return!(a.name in b)})}this.settings.showErrors?this.settings.showErrors.call(this,this.errorMap,this.errorList):this.defaultShowErrors()},resetForm:function(){a.fn.resetForm&&a(this.currentForm).resetForm(),this.invalid={},this.submitted={},this.prepareForm(),this.hideErrors();var b=this.elements().removeData("previousValue").removeAttr("aria-invalid");this.resetElements(b)},resetElements:function(a){var b;if(this.settings.unhighlight)for(b=0;a[b];b++)this.settings.unhighlight.call(this,a[b],this.settings.errorClass,""),this.findByName(a[b].name).removeClass(this.settings.validClass);else a.removeClass(this.settings.errorClass).removeClass(this.settings.validClass)},numberOfInvalids:function(){return this.objectLength(this.invalid)},objectLength:function(a){var b,c=0;for(b in a)void 0!==a[b]&&null!==a[b]&&a[b]!==!1&&c++;return c},hideErrors:function(){this.hideThese(this.toHide)},hideThese:function(a){a.not(this.containers).text(""),this.addWrapper(a).hide()},valid:function(){return 0===this.size()},size:function(){return this.errorList.length},focusInvalid:function(){if(this.settings.focusInvalid)try{a(this.findLastActive()||this.errorList.length&&this.errorList[0].element||[]).filter(":visible").focus().trigger("focusin")}catch(b){}},findLastActive:function(){var b=this.lastActive;return b&&1===a.grep(this.errorList,function(a){return a.element.name===b.name}).length&&b},elements:function(){var b=this,c={};return a(this.currentForm).find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter(function(){var d=this.name||a(this).attr("name");return!d&&b.settings.debug&&window.console&&console.error("%o has no name assigned",this),this.hasAttribute("contenteditable")&&(this.form=a(this).closest("form")[0],this.name=d),!(d in c||!b.objectLength(a(this).rules()))&&(c[d]=!0,!0)})},clean:function(b){return a(b)[0]},errors:function(){var b=this.settings.errorClass.split(" ").join(".");return a(this.settings.errorElement+"."+b,this.errorContext)},resetInternals:function(){this.successList=[],this.errorList=[],this.errorMap={},this.toShow=a([]),this.toHide=a([])},reset:function(){this.resetInternals(),this.currentElements=a([])},prepareForm:function(){this.reset(),this.toHide=this.errors().add(this.containers)},prepareElement:function(a){this.reset(),this.toHide=this.errorsFor(a)},elementValue:function(b){var c,d,e=a(b),f=b.type;return"radio"===f||"checkbox"===f?this.findByName(b.name).filter(":checked").val():"number"===f&&"undefined"!=typeof b.validity?b.validity.badInput?"NaN":e.val():(c=b.hasAttribute("contenteditable")?e.text():e.val(),"file"===f?"C:\\fakepath\\"===c.substr(0,12)?c.substr(12):(d=c.lastIndexOf("/"),d>=0?c.substr(d+1):(d=c.lastIndexOf("\\"),d>=0?c.substr(d+1):c)):"string"==typeof c?c.replace(/\r/g,""):c)},check:function(b){b=this.validationTargetFor(this.clean(b));var c,d,e,f,g=a(b).rules(),h=a.map(g,function(a,b){return b}).length,i=!1,j=this.elementValue(b);if("function"==typeof g.normalizer?f=g.normalizer:"function"==typeof this.settings.normalizer&&(f=this.settings.normalizer),f){if(j=f.call(b,j),"string"!=typeof j)throw new TypeError("The normalizer should return a string value.");delete g.normalizer}for(d in g){e={method:d,parameters:g[d]};try{if(c=a.validator.methods[d].call(this,j,b,e.parameters),"dependency-mismatch"===c&&1===h){i=!0;continue}if(i=!1,"pending"===c)return void(this.toHide=this.toHide.not(this.errorsFor(b)));if(!c)return this.formatAndAdd(b,e),!1}catch(k){throw this.settings.debug&&window.console&&console.log("Exception occurred when checking element "+b.id+", check the '"+e.method+"' method.",k),k instanceof TypeError&&(k.message+=".  Exception occurred when checking element "+b.id+", check the '"+e.method+"' method."),k}}if(!i)return this.objectLength(g)&&this.successList.push(b),!0},customDataMessage:function(b,c){return a(b).data("msg"+c.charAt(0).toUpperCase()+c.substring(1).toLowerCase())||a(b).data("msg")},customMessage:function(a,b){var c=this.settings.messages[a];return c&&(c.constructor===String?c:c[b])},findDefined:function(){for(var a=0;a<arguments.length;a++)if(void 0!==arguments[a])return arguments[a]},defaultMessage:function(b,c){"string"==typeof c&&(c={method:c});var d=this.findDefined(this.customMessage(b.name,c.method),this.customDataMessage(b,c.method),!this.settings.ignoreTitle&&b.title||void 0,a.validator.messages[c.method],"<strong>Warning: No message defined for "+b.name+"</strong>"),e=/\$?\{(\d+)\}/g;return"function"==typeof d?d=d.call(this,c.parameters,b):e.test(d)&&(d=a.validator.format(d.replace(e,"{$1}"),c.parameters)),d},formatAndAdd:function(a,b){var c=this.defaultMessage(a,b);this.errorList.push({message:c,element:a,method:b.method}),this.errorMap[a.name]=c,this.submitted[a.name]=c},addWrapper:function(a){return this.settings.wrapper&&(a=a.add(a.parent(this.settings.wrapper))),a},defaultShowErrors:function(){var a,b,c;for(a=0;this.errorList[a];a++)c=this.errorList[a],this.settings.highlight&&this.settings.highlight.call(this,c.element,this.settings.errorClass,this.settings.validClass),this.showLabel(c.element,c.message);if(this.errorList.length&&(this.toShow=this.toShow.add(this.containers)),this.settings.success)for(a=0;this.successList[a];a++)this.showLabel(this.successList[a]);if(this.settings.unhighlight)for(a=0,b=this.validElements();b[a];a++)this.settings.unhighlight.call(this,b[a],this.settings.errorClass,this.settings.validClass);this.toHide=this.toHide.not(this.toShow),this.hideErrors(),this.addWrapper(this.toShow).show()},validElements:function(){return this.currentElements.not(this.invalidElements())},invalidElements:function(){return a(this.errorList).map(function(){return this.element})},showLabel:function(b,c){var d,e,f,g,h=this.errorsFor(b),i=this.idOrName(b),j=a(b).attr("aria-describedby");h.length?(h.removeClass(this.settings.validClass).addClass(this.settings.errorClass),h.html(c)):(h=a("<"+this.settings.errorElement+">").attr("id",i+"-error").addClass(this.settings.errorClass).html(c||""),d=h,this.settings.wrapper&&(d=h.hide().show().wrap("<"+this.settings.wrapper+"/>").parent()),this.labelContainer.length?this.labelContainer.append(d):this.settings.errorPlacement?this.settings.errorPlacement.call(this,d,a(b)):d.insertAfter(b),h.is("label")?h.attr("for",i):0===h.parents("label[for='"+this.escapeCssMeta(i)+"']").length&&(f=h.attr("id"),j?j.match(new RegExp("\\b"+this.escapeCssMeta(f)+"\\b"))||(j+=" "+f):j=f,a(b).attr("aria-describedby",j),e=this.groups[b.name],e&&(g=this,a.each(g.groups,function(b,c){c===e&&a("[name='"+g.escapeCssMeta(b)+"']",g.currentForm).attr("aria-describedby",h.attr("id"))})))),!c&&this.settings.success&&(h.text(""),"string"==typeof this.settings.success?h.addClass(this.settings.success):this.settings.success(h,b)),this.toShow=this.toShow.add(h)},errorsFor:function(b){var c=this.escapeCssMeta(this.idOrName(b)),d=a(b).attr("aria-describedby"),e="label[for='"+c+"'], label[for='"+c+"'] *";return d&&(e=e+", #"+this.escapeCssMeta(d).replace(/\s+/g,", #")),this.errors().filter(e)},escapeCssMeta:function(a){return a.replace(/([\\!"#$%&'()*+,.\/:;<=>?@\[\]^`{|}~])/g,"\\$1")},idOrName:function(a){return this.groups[a.name]||(this.checkable(a)?a.name:a.id||a.name)},validationTargetFor:function(b){return this.checkable(b)&&(b=this.findByName(b.name)),a(b).not(this.settings.ignore)[0]},checkable:function(a){return/radio|checkbox/i.test(a.type)},findByName:function(b){return a(this.currentForm).find("[name='"+this.escapeCssMeta(b)+"']")},getLength:function(b,c){switch(c.nodeName.toLowerCase()){case"select":return a("option:selected",c).length;case"input":if(this.checkable(c))return this.findByName(c.name).filter(":checked").length}return b.length},depend:function(a,b){return!this.dependTypes[typeof a]||this.dependTypes[typeof a](a,b)},dependTypes:{"boolean":function(a){return a},string:function(b,c){return!!a(b,c.form).length},"function":function(a,b){return a(b)}},optional:function(b){var c=this.elementValue(b);return!a.validator.methods.required.call(this,c,b)&&"dependency-mismatch"},startRequest:function(b){this.pending[b.name]||(this.pendingRequest++,a(b).addClass(this.settings.pendingClass),this.pending[b.name]=!0)},stopRequest:function(b,c){this.pendingRequest--,this.pendingRequest<0&&(this.pendingRequest=0),delete this.pending[b.name],a(b).removeClass(this.settings.pendingClass),c&&0===this.pendingRequest&&this.formSubmitted&&this.form()?(a(this.currentForm).submit(),this.submitButton&&a("input:hidden[name='"+this.submitButton.name+"']",this.currentForm).remove(),this.formSubmitted=!1):!c&&0===this.pendingRequest&&this.formSubmitted&&(a(this.currentForm).triggerHandler("invalid-form",[this]),this.formSubmitted=!1)},previousValue:function(b,c){return c="string"==typeof c&&c||"remote",a.data(b,"previousValue")||a.data(b,"previousValue",{old:null,valid:!0,message:this.defaultMessage(b,{method:c})})},destroy:function(){this.resetForm(),a(this.currentForm).off(".validate").removeData("validator").find(".validate-equalTo-blur").off(".validate-equalTo").removeClass("validate-equalTo-blur")}},classRuleSettings:{required:{required:!0},email:{email:!0},url:{url:!0},date:{date:!0},dateISO:{dateISO:!0},number:{number:!0},digits:{digits:!0},creditcard:{creditcard:!0}},addClassRules:function(b,c){b.constructor===String?this.classRuleSettings[b]=c:a.extend(this.classRuleSettings,b)},classRules:function(b){var c={},d=a(b).attr("class");return d&&a.each(d.split(" "),function(){this in a.validator.classRuleSettings&&a.extend(c,a.validator.classRuleSettings[this])}),c},normalizeAttributeRule:function(a,b,c,d){/min|max|step/.test(c)&&(null===b||/number|range|text/.test(b))&&(d=Number(d),isNaN(d)&&(d=void 0)),d||0===d?a[c]=d:b===c&&"range"!==b&&(a[c]=!0)},attributeRules:function(b){var c,d,e={},f=a(b),g=b.getAttribute("type");for(c in a.validator.methods)"required"===c?(d=b.getAttribute(c),""===d&&(d=!0),d=!!d):d=f.attr(c),this.normalizeAttributeRule(e,g,c,d);return e.maxlength&&/-1|2147483647|524288/.test(e.maxlength)&&delete e.maxlength,e},dataRules:function(b){var c,d,e={},f=a(b),g=b.getAttribute("type");for(c in a.validator.methods)d=f.data("rule"+c.charAt(0).toUpperCase()+c.substring(1).toLowerCase()),this.normalizeAttributeRule(e,g,c,d);return e},staticRules:function(b){var c={},d=a.data(b.form,"validator");return d.settings.rules&&(c=a.validator.normalizeRule(d.settings.rules[b.name])||{}),c},normalizeRules:function(b,c){return a.each(b,function(d,e){if(e===!1)return void delete b[d];if(e.param||e.depends){var f=!0;switch(typeof e.depends){case"string":f=!!a(e.depends,c.form).length;break;case"function":f=e.depends.call(c,c)}f?b[d]=void 0===e.param||e.param:(a.data(c.form,"validator").resetElements(a(c)),delete b[d])}}),a.each(b,function(d,e){b[d]=a.isFunction(e)&&"normalizer"!==d?e(c):e}),a.each(["minlength","maxlength"],function(){b[this]&&(b[this]=Number(b[this]))}),a.each(["rangelength","range"],function(){var c;b[this]&&(a.isArray(b[this])?b[this]=[Number(b[this][0]),Number(b[this][1])]:"string"==typeof b[this]&&(c=b[this].replace(/[\[\]]/g,"").split(/[\s,]+/),b[this]=[Number(c[0]),Number(c[1])]))}),a.validator.autoCreateRanges&&(null!=b.min&&null!=b.max&&(b.range=[b.min,b.max],delete b.min,delete b.max),null!=b.minlength&&null!=b.maxlength&&(b.rangelength=[b.minlength,b.maxlength],delete b.minlength,delete b.maxlength)),b},normalizeRule:function(b){if("string"==typeof b){var c={};a.each(b.split(/\s/),function(){c[this]=!0}),b=c}return b},addMethod:function(b,c,d){a.validator.methods[b]=c,a.validator.messages[b]=void 0!==d?d:a.validator.messages[b],c.length<3&&a.validator.addClassRules(b,a.validator.normalizeRule(b))},methods:{required:function(b,c,d){if(!this.depend(d,c))return"dependency-mismatch";if("select"===c.nodeName.toLowerCase()){var e=a(c).val();return e&&e.length>0}return this.checkable(c)?this.getLength(b,c)>0:b.length>0},email:function(a,b){return this.optional(b)||/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(a)},url:function(a,b){return this.optional(b)||/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[\/?#]\S*)?$/i.test(a)},date:function(a,b){return this.optional(b)||!/Invalid|NaN/.test(new Date(a).toString())},dateISO:function(a,b){return this.optional(b)||/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(a)},number:function(a,b){return this.optional(b)||/^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(a)},digits:function(a,b){return this.optional(b)||/^\d+$/.test(a)},minlength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(b,c);return this.optional(c)||e>=d},maxlength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(b,c);return this.optional(c)||e<=d},rangelength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(b,c);return this.optional(c)||e>=d[0]&&e<=d[1]},min:function(a,b,c){return this.optional(b)||a>=c},max:function(a,b,c){return this.optional(b)||a<=c},range:function(a,b,c){return this.optional(b)||a>=c[0]&&a<=c[1]},step:function(b,c,d){var e,f=a(c).attr("type"),g="Step attribute on input type "+f+" is not supported.",h=["text","number","range"],i=new RegExp("\\b"+f+"\\b"),j=f&&!i.test(h.join()),k=function(a){var b=(""+a).match(/(?:\.(\d+))?$/);return b&&b[1]?b[1].length:0},l=function(a){return Math.round(a*Math.pow(10,e))},m=!0;if(j)throw new Error(g);return e=k(d),(k(b)>e||l(b)%l(d)!==0)&&(m=!1),this.optional(c)||m},equalTo:function(b,c,d){var e=a(d);return this.settings.onfocusout&&e.not(".validate-equalTo-blur").length&&e.addClass("validate-equalTo-blur").on("blur.validate-equalTo",function(){a(c).valid()}),b===e.val()},remote:function(b,c,d,e){if(this.optional(c))return"dependency-mismatch";e="string"==typeof e&&e||"remote";var f,g,h,i=this.previousValue(c,e);return this.settings.messages[c.name]||(this.settings.messages[c.name]={}),i.originalMessage=i.originalMessage||this.settings.messages[c.name][e],this.settings.messages[c.name][e]=i.message,d="string"==typeof d&&{url:d}||d,h=a.param(a.extend({data:b},d.data)),i.old===h?i.valid:(i.old=h,f=this,this.startRequest(c),g={},g[c.name]=b,a.ajax(a.extend(!0,{mode:"abort",port:"validate"+c.name,dataType:"json",data:g,context:f.currentForm,success:function(a){var d,g,h,j=a===!0||"true"===a;f.settings.messages[c.name][e]=i.originalMessage,j?(h=f.formSubmitted,f.resetInternals(),f.toHide=f.errorsFor(c),f.formSubmitted=h,f.successList.push(c),f.invalid[c.name]=!1,f.showErrors()):(d={},g=a||f.defaultMessage(c,{method:e,parameters:b}),d[c.name]=i.message=g,f.invalid[c.name]=!0,f.showErrors(d)),i.valid=j,f.stopRequest(c,j)}},d)),"pending")}}});var b,c={};return a.ajaxPrefilter?a.ajaxPrefilter(function(a,b,d){var e=a.port;"abort"===a.mode&&(c[e]&&c[e].abort(),c[e]=d)}):(b=a.ajax,a.ajax=function(d){var e=("mode"in d?d:a.ajaxSettings).mode,f=("port"in d?d:a.ajaxSettings).port;return"abort"===e?(c[f]&&c[f].abort(),c[f]=b.apply(this,arguments),c[f]):b.apply(this,arguments)}),a});

/*! jQuery Validation Plugin - v1.17.0 - 7/29/2017
 * https://jqueryvalidation.org/
 * Copyright (c) 2017 Jörn Zaefferer; Licensed MIT */
!function(a){"function"==typeof define&&define.amd?define(["jquery","./jquery.validate.min"],a):"object"==typeof module&&module.exports?module.exports=a(require("jquery")):a(jQuery)}(function(a){return function(){function b(a){return a.replace(/<.[^<>]*?>/g," ").replace(/&nbsp;|&#160;/gi," ").replace(/[.(),;:!?%#$'\"_+=\/\-“”’]*/g,"")}a.validator.addMethod("maxWords",function(a,c,d){return this.optional(c)||b(a).match(/\b\w+\b/g).length<=d},a.validator.format("Please enter {0} words or less.")),a.validator.addMethod("minWords",function(a,c,d){return this.optional(c)||b(a).match(/\b\w+\b/g).length>=d},a.validator.format("Please enter at least {0} words.")),a.validator.addMethod("rangeWords",function(a,c,d){var e=b(a),f=/\b\w+\b/g;return this.optional(c)||e.match(f).length>=d[0]&&e.match(f).length<=d[1]},a.validator.format("Please enter between {0} and {1} words."))}(),a.validator.addMethod("accept",function(b,c,d){var e,f,g,h="string"==typeof d?d.replace(/\s/g,""):"image/*",i=this.optional(c);if(i)return i;if("file"===a(c).attr("type")&&(h=h.replace(/[\-\[\]\/\{\}\(\)\+\?\.\\\^\$\|]/g,"\\$&").replace(/,/g,"|").replace(/\/\*/g,"/.*"),c.files&&c.files.length))for(g=new RegExp(".?("+h+")$","i"),e=0;e<c.files.length;e++)if(f=c.files[e],!f.type.match(g))return!1;return!0},a.validator.format("Please enter a value with a valid mimetype.")),a.validator.addMethod("alphanumeric",function(a,b){return this.optional(b)||/^\w+$/i.test(a)},"Letters, numbers, and underscores only please"),a.validator.addMethod("bankaccountNL",function(a,b){if(this.optional(b))return!0;if(!/^[0-9]{9}|([0-9]{2} ){3}[0-9]{3}$/.test(a))return!1;var c,d,e,f=a.replace(/ /g,""),g=0,h=f.length;for(c=0;c<h;c++)d=h-c,e=f.substring(c,c+1),g+=d*e;return g%11===0},"Please specify a valid bank account number"),a.validator.addMethod("bankorgiroaccountNL",function(b,c){return this.optional(c)||a.validator.methods.bankaccountNL.call(this,b,c)||a.validator.methods.giroaccountNL.call(this,b,c)},"Please specify a valid bank or giro account number"),a.validator.addMethod("bic",function(a,b){return this.optional(b)||/^([A-Z]{6}[A-Z2-9][A-NP-Z1-9])(X{3}|[A-WY-Z0-9][A-Z0-9]{2})?$/.test(a.toUpperCase())},"Please specify a valid BIC code"),a.validator.addMethod("cifES",function(a,b){"use strict";function c(a){return a%2===0}if(this.optional(b))return!0;var d,e,f,g,h=new RegExp(/^([ABCDEFGHJKLMNPQRSUVW])(\d{7})([0-9A-J])$/gi),i=a.substring(0,1),j=a.substring(1,8),k=a.substring(8,9),l=0,m=0,n=0;if(9!==a.length||!h.test(a))return!1;for(d=0;d<j.length;d++)e=parseInt(j[d],10),c(d)?(e*=2,n+=e<10?e:e-9):m+=e;return l=m+n,f=(10-l.toString().substr(-1)).toString(),f=parseInt(f,10)>9?"0":f,g="JABCDEFGHI".substr(f,1).toString(),i.match(/[ABEH]/)?k===f:i.match(/[KPQS]/)?k===g:k===f||k===g},"Please specify a valid CIF number."),a.validator.addMethod("cpfBR",function(a){if(a=a.replace(/([~!@#$%^&*()_+=`{}\[\]\-|\\:;'<>,.\/? ])+/g,""),11!==a.length)return!1;var b,c,d,e,f=0;if(b=parseInt(a.substring(9,10),10),c=parseInt(a.substring(10,11),10),d=function(a,b){var c=10*a%11;return 10!==c&&11!==c||(c=0),c===b},""===a||"00000000000"===a||"11111111111"===a||"22222222222"===a||"33333333333"===a||"44444444444"===a||"55555555555"===a||"66666666666"===a||"77777777777"===a||"88888888888"===a||"99999999999"===a)return!1;for(e=1;e<=9;e++)f+=parseInt(a.substring(e-1,e),10)*(11-e);if(d(f,b)){for(f=0,e=1;e<=10;e++)f+=parseInt(a.substring(e-1,e),10)*(12-e);return d(f,c)}return!1},"Please specify a valid CPF number"),a.validator.addMethod("creditcard",function(a,b){if(this.optional(b))return"dependency-mismatch";if(/[^0-9 \-]+/.test(a))return!1;var c,d,e=0,f=0,g=!1;if(a=a.replace(/\D/g,""),a.length<13||a.length>19)return!1;for(c=a.length-1;c>=0;c--)d=a.charAt(c),f=parseInt(d,10),g&&(f*=2)>9&&(f-=9),e+=f,g=!g;return e%10===0},"Please enter a valid credit card number."),a.validator.addMethod("creditcardtypes",function(a,b,c){if(/[^0-9\-]+/.test(a))return!1;a=a.replace(/\D/g,"");var d=0;return c.mastercard&&(d|=1),c.visa&&(d|=2),c.amex&&(d|=4),c.dinersclub&&(d|=8),c.enroute&&(d|=16),c.discover&&(d|=32),c.jcb&&(d|=64),c.unknown&&(d|=128),c.all&&(d=255),1&d&&/^(5[12345])/.test(a)?16===a.length:2&d&&/^(4)/.test(a)?16===a.length:4&d&&/^(3[47])/.test(a)?15===a.length:8&d&&/^(3(0[012345]|[68]))/.test(a)?14===a.length:16&d&&/^(2(014|149))/.test(a)?15===a.length:32&d&&/^(6011)/.test(a)?16===a.length:64&d&&/^(3)/.test(a)?16===a.length:64&d&&/^(2131|1800)/.test(a)?15===a.length:!!(128&d)},"Please enter a valid credit card number."),a.validator.addMethod("currency",function(a,b,c){var d,e="string"==typeof c,f=e?c:c[0],g=!!e||c[1];return f=f.replace(/,/g,""),f=g?f+"]":f+"]?",d="^["+f+"([1-9]{1}[0-9]{0,2}(\\,[0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}[0-9]{0,}(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)$",d=new RegExp(d),this.optional(b)||d.test(a)},"Please specify a valid currency"),a.validator.addMethod("dateFA",function(a,b){return this.optional(b)||/^[1-4]\d{3}\/((0?[1-6]\/((3[0-1])|([1-2][0-9])|(0?[1-9])))|((1[0-2]|(0?[7-9]))\/(30|([1-2][0-9])|(0?[1-9]))))$/.test(a)},a.validator.messages.date),a.validator.addMethod("dateITA",function(a,b){var c,d,e,f,g,h=!1,i=/^\d{1,2}\/\d{1,2}\/\d{4}$/;return i.test(a)?(c=a.split("/"),d=parseInt(c[0],10),e=parseInt(c[1],10),f=parseInt(c[2],10),g=new Date(Date.UTC(f,e-1,d,12,0,0,0)),h=g.getUTCFullYear()===f&&g.getUTCMonth()===e-1&&g.getUTCDate()===d):h=!1,this.optional(b)||h},a.validator.messages.date),a.validator.addMethod("dateNL",function(a,b){return this.optional(b)||/^(0?[1-9]|[12]\d|3[01])[\.\/\-](0?[1-9]|1[012])[\.\/\-]([12]\d)?(\d\d)$/.test(a)},a.validator.messages.date),a.validator.addMethod("extension",function(a,b,c){return c="string"==typeof c?c.replace(/,/g,"|"):"png|jpe?g|gif",this.optional(b)||a.match(new RegExp("\\.("+c+")$","i"))},a.validator.format("Please enter a value with a valid extension.")),a.validator.addMethod("giroaccountNL",function(a,b){return this.optional(b)||/^[0-9]{1,7}$/.test(a)},"Please specify a valid giro account number"),a.validator.addMethod("iban",function(a,b){if(this.optional(b))return!0;var c,d,e,f,g,h,i,j,k,l=a.replace(/ /g,"").toUpperCase(),m="",n=!0,o="",p="",q=5;if(l.length<q)return!1;if(c=l.substring(0,2),h={AL:"\\d{8}[\\dA-Z]{16}",AD:"\\d{8}[\\dA-Z]{12}",AT:"\\d{16}",AZ:"[\\dA-Z]{4}\\d{20}",BE:"\\d{12}",BH:"[A-Z]{4}[\\dA-Z]{14}",BA:"\\d{16}",BR:"\\d{23}[A-Z][\\dA-Z]",BG:"[A-Z]{4}\\d{6}[\\dA-Z]{8}",CR:"\\d{17}",HR:"\\d{17}",CY:"\\d{8}[\\dA-Z]{16}",CZ:"\\d{20}",DK:"\\d{14}",DO:"[A-Z]{4}\\d{20}",EE:"\\d{16}",FO:"\\d{14}",FI:"\\d{14}",FR:"\\d{10}[\\dA-Z]{11}\\d{2}",GE:"[\\dA-Z]{2}\\d{16}",DE:"\\d{18}",GI:"[A-Z]{4}[\\dA-Z]{15}",GR:"\\d{7}[\\dA-Z]{16}",GL:"\\d{14}",GT:"[\\dA-Z]{4}[\\dA-Z]{20}",HU:"\\d{24}",IS:"\\d{22}",IE:"[\\dA-Z]{4}\\d{14}",IL:"\\d{19}",IT:"[A-Z]\\d{10}[\\dA-Z]{12}",KZ:"\\d{3}[\\dA-Z]{13}",KW:"[A-Z]{4}[\\dA-Z]{22}",LV:"[A-Z]{4}[\\dA-Z]{13}",LB:"\\d{4}[\\dA-Z]{20}",LI:"\\d{5}[\\dA-Z]{12}",LT:"\\d{16}",LU:"\\d{3}[\\dA-Z]{13}",MK:"\\d{3}[\\dA-Z]{10}\\d{2}",MT:"[A-Z]{4}\\d{5}[\\dA-Z]{18}",MR:"\\d{23}",MU:"[A-Z]{4}\\d{19}[A-Z]{3}",MC:"\\d{10}[\\dA-Z]{11}\\d{2}",MD:"[\\dA-Z]{2}\\d{18}",ME:"\\d{18}",NL:"[A-Z]{4}\\d{10}",NO:"\\d{11}",PK:"[\\dA-Z]{4}\\d{16}",PS:"[\\dA-Z]{4}\\d{21}",PL:"\\d{24}",PT:"\\d{21}",RO:"[A-Z]{4}[\\dA-Z]{16}",SM:"[A-Z]\\d{10}[\\dA-Z]{12}",SA:"\\d{2}[\\dA-Z]{18}",RS:"\\d{18}",SK:"\\d{20}",SI:"\\d{15}",ES:"\\d{20}",SE:"\\d{20}",CH:"\\d{5}[\\dA-Z]{12}",TN:"\\d{20}",TR:"\\d{5}[\\dA-Z]{17}",AE:"\\d{3}\\d{16}",GB:"[A-Z]{4}\\d{14}",VG:"[\\dA-Z]{4}\\d{16}"},g=h[c],"undefined"!=typeof g&&(i=new RegExp("^[A-Z]{2}\\d{2}"+g+"$",""),!i.test(l)))return!1;for(d=l.substring(4,l.length)+l.substring(0,4),j=0;j<d.length;j++)e=d.charAt(j),"0"!==e&&(n=!1),n||(m+="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".indexOf(e));for(k=0;k<m.length;k++)f=m.charAt(k),p=""+o+f,o=p%97;return 1===o},"Please specify a valid IBAN"),a.validator.addMethod("integer",function(a,b){return this.optional(b)||/^-?\d+$/.test(a)},"A positive or negative non-decimal number please"),a.validator.addMethod("ipv4",function(a,b){return this.optional(b)||/^(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)$/i.test(a)},"Please enter a valid IP v4 address."),a.validator.addMethod("ipv6",function(a,b){return this.optional(b)||/^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(a)},"Please enter a valid IP v6 address."),a.validator.addMethod("lettersonly",function(a,b){return this.optional(b)||/^[a-z]+$/i.test(a)},"Letters only please"),a.validator.addMethod("letterswithbasicpunc",function(a,b){return this.optional(b)||/^[a-z\-.,()'"\s]+$/i.test(a)},"Letters or punctuation only please"),a.validator.addMethod("mobileNL",function(a,b){return this.optional(b)||/^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)6((\s|\s?\-\s?)?[0-9]){8}$/.test(a)},"Please specify a valid mobile number"),a.validator.addMethod("mobileUK",function(a,b){return a=a.replace(/\(|\)|\s+|-/g,""),this.optional(b)||a.length>9&&a.match(/^(?:(?:(?:00\s?|\+)44\s?|0)7(?:[1345789]\d{2}|624)\s?\d{3}\s?\d{3})$/)},"Please specify a valid mobile number"),a.validator.addMethod("netmask",function(a,b){return this.optional(b)||/^(254|252|248|240|224|192|128)\.0\.0\.0|255\.(254|252|248|240|224|192|128|0)\.0\.0|255\.255\.(254|252|248|240|224|192|128|0)\.0|255\.255\.255\.(254|252|248|240|224|192|128|0)/i.test(a)},"Please enter a valid netmask."),a.validator.addMethod("nieES",function(a,b){"use strict";if(this.optional(b))return!0;var c,d=new RegExp(/^[MXYZ]{1}[0-9]{7,8}[TRWAGMYFPDXBNJZSQVHLCKET]{1}$/gi),e="TRWAGMYFPDXBNJZSQVHLCKET",f=a.substr(a.length-1).toUpperCase();return a=a.toString().toUpperCase(),!(a.length>10||a.length<9||!d.test(a))&&(a=a.replace(/^[X]/,"0").replace(/^[Y]/,"1").replace(/^[Z]/,"2"),c=9===a.length?a.substr(0,8):a.substr(0,9),e.charAt(parseInt(c,10)%23)===f)},"Please specify a valid NIE number."),a.validator.addMethod("nifES",function(a,b){"use strict";return!!this.optional(b)||(a=a.toUpperCase(),!!a.match("((^[A-Z]{1}[0-9]{7}[A-Z0-9]{1}$|^[T]{1}[A-Z0-9]{8}$)|^[0-9]{8}[A-Z]{1}$)")&&(/^[0-9]{8}[A-Z]{1}$/.test(a)?"TRWAGMYFPDXBNJZSQVHLCKE".charAt(a.substring(8,0)%23)===a.charAt(8):!!/^[KLM]{1}/.test(a)&&a[8]==="TRWAGMYFPDXBNJZSQVHLCKE".charAt(a.substring(8,1)%23)))},"Please specify a valid NIF number."),a.validator.addMethod("nipPL",function(a){"use strict";if(a=a.replace(/[^0-9]/g,""),10!==a.length)return!1;for(var b=[6,5,7,2,3,4,5,6,7],c=0,d=0;d<9;d++)c+=b[d]*a[d];var e=c%11,f=10===e?0:e;return f===parseInt(a[9],10)},"Please specify a valid NIP number."),a.validator.addMethod("notEqualTo",function(b,c,d){return this.optional(c)||!a.validator.methods.equalTo.call(this,b,c,d)},"Please enter a different value, values must not be the same."),a.validator.addMethod("nowhitespace",function(a,b){return this.optional(b)||/^\S+$/i.test(a)},"No white space please"),a.validator.addMethod("pattern",function(a,b,c){return!!this.optional(b)||("string"==typeof c&&(c=new RegExp("^(?:"+c+")$")),c.test(a))},"Invalid format."),a.validator.addMethod("phoneNL",function(a,b){return this.optional(b)||/^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)[1-9]((\s|\s?\-\s?)?[0-9]){8}$/.test(a)},"Please specify a valid phone number."),a.validator.addMethod("phonesUK",function(a,b){return a=a.replace(/\(|\)|\s+|-/g,""),this.optional(b)||a.length>9&&a.match(/^(?:(?:(?:00\s?|\+)44\s?|0)(?:1\d{8,9}|[23]\d{9}|7(?:[1345789]\d{8}|624\d{6})))$/)},"Please specify a valid uk phone number"),a.validator.addMethod("phoneUK",function(a,b){return a=a.replace(/\(|\)|\s+|-/g,""),this.optional(b)||a.length>9&&a.match(/^(?:(?:(?:00\s?|\+)44\s?)|(?:\(?0))(?:\d{2}\)?\s?\d{4}\s?\d{4}|\d{3}\)?\s?\d{3}\s?\d{3,4}|\d{4}\)?\s?(?:\d{5}|\d{3}\s?\d{3})|\d{5}\)?\s?\d{4,5})$/)},"Please specify a valid phone number"),a.validator.addMethod("phoneUS",function(a,b){return a=a.replace(/\s+/g,""),this.optional(b)||a.length>9&&a.match(/^(\+?1-?)?(\([2-9]([02-9]\d|1[02-9])\)|[2-9]([02-9]\d|1[02-9]))-?[2-9]([02-9]\d|1[02-9])-?\d{4}$/)},"Please specify a valid phone number"),a.validator.addMethod("postalcodeBR",function(a,b){return this.optional(b)||/^\d{2}.\d{3}-\d{3}?$|^\d{5}-?\d{3}?$/.test(a)},"Informe um CEP válido."),a.validator.addMethod("postalCodeCA",function(a,b){return this.optional(b)||/^[ABCEGHJKLMNPRSTVXY]\d[ABCEGHJKLMNPRSTVWXYZ] *\d[ABCEGHJKLMNPRSTVWXYZ]\d$/i.test(a)},"Please specify a valid postal code"),a.validator.addMethod("postalcodeIT",function(a,b){return this.optional(b)||/^\d{5}$/.test(a)},"Please specify a valid postal code"),a.validator.addMethod("postalcodeNL",function(a,b){return this.optional(b)||/^[1-9][0-9]{3}\s?[a-zA-Z]{2}$/.test(a)},"Please specify a valid postal code"),a.validator.addMethod("postcodeUK",function(a,b){return this.optional(b)||/^((([A-PR-UWYZ][0-9])|([A-PR-UWYZ][0-9][0-9])|([A-PR-UWYZ][A-HK-Y][0-9])|([A-PR-UWYZ][A-HK-Y][0-9][0-9])|([A-PR-UWYZ][0-9][A-HJKSTUW])|([A-PR-UWYZ][A-HK-Y][0-9][ABEHMNPRVWXY]))\s?([0-9][ABD-HJLNP-UW-Z]{2})|(GIR)\s?(0AA))$/i.test(a)},"Please specify a valid UK postcode"),a.validator.addMethod("require_from_group",function(b,c,d){var e=a(d[1],c.form),f=e.eq(0),g=f.data("valid_req_grp")?f.data("valid_req_grp"):a.extend({},this),h=e.filter(function(){return g.elementValue(this)}).length>=d[0];return f.data("valid_req_grp",g),a(c).data("being_validated")||(e.data("being_validated",!0),e.each(function(){g.element(this)}),e.data("being_validated",!1)),h},a.validator.format("Please fill at least {0} of these fields.")),a.validator.addMethod("skip_or_fill_minimum",function(b,c,d){var e=a(d[1],c.form),f=e.eq(0),g=f.data("valid_skip")?f.data("valid_skip"):a.extend({},this),h=e.filter(function(){return g.elementValue(this)}).length,i=0===h||h>=d[0];return f.data("valid_skip",g),a(c).data("being_validated")||(e.data("being_validated",!0),e.each(function(){g.element(this)}),e.data("being_validated",!1)),i},a.validator.format("Please either skip these fields or fill at least {0} of them.")),a.validator.addMethod("stateUS",function(a,b,c){var d,e="undefined"==typeof c,f=!e&&"undefined"!=typeof c.caseSensitive&&c.caseSensitive,g=!e&&"undefined"!=typeof c.includeTerritories&&c.includeTerritories,h=!e&&"undefined"!=typeof c.includeMilitary&&c.includeMilitary;return d=g||h?g&&h?"^(A[AEKLPRSZ]|C[AOT]|D[CE]|FL|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEINOPST]|N[CDEHJMVY]|O[HKR]|P[AR]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY])$":g?"^(A[KLRSZ]|C[AOT]|D[CE]|FL|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEINOPST]|N[CDEHJMVY]|O[HKR]|P[AR]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY])$":"^(A[AEKLPRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])$":"^(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])$",d=f?new RegExp(d):new RegExp(d,"i"),this.optional(b)||d.test(a)},"Please specify a valid state"),a.validator.addMethod("strippedminlength",function(b,c,d){return a(b).text().length>=d},a.validator.format("Please enter at least {0} characters")),a.validator.addMethod("time",function(a,b){return this.optional(b)||/^([01]\d|2[0-3]|[0-9])(:[0-5]\d){1,2}$/.test(a)},"Please enter a valid time, between 00:00 and 23:59"),a.validator.addMethod("time12h",function(a,b){return this.optional(b)||/^((0?[1-9]|1[012])(:[0-5]\d){1,2}(\ ?[AP]M))$/i.test(a)},"Please enter a valid time in 12-hour am/pm format"),a.validator.addMethod("url2",function(a,b){return this.optional(b)||/^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)*(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(a)},a.validator.messages.url),a.validator.addMethod("vinUS",function(a){if(17!==a.length)return!1;var b,c,d,e,f,g,h=["A","B","C","D","E","F","G","H","J","K","L","M","N","P","R","S","T","U","V","W","X","Y","Z"],i=[1,2,3,4,5,6,7,8,1,2,3,4,5,7,9,2,3,4,5,6,7,8,9],j=[8,7,6,5,4,3,2,10,0,9,8,7,6,5,4,3,2],k=0;for(b=0;b<17;b++){if(e=j[b],d=a.slice(b,b+1),8===b&&(g=d),isNaN(d)){for(c=0;c<h.length;c++)if(d.toUpperCase()===h[c]){d=i[c],d*=e,isNaN(g)&&8===c&&(g=h[c]);break}}else d*=e;k+=d}return f=k%11,10===f&&(f="X"),f===g},"The specified vehicle identification number (VIN) is invalid."),a.validator.addMethod("zipcodeUS",function(a,b){return this.optional(b)||/^\d{5}(-\d{4})?$/.test(a)},"The specified US ZIP Code is invalid"),a.validator.addMethod("ziprange",function(a,b){return this.optional(b)||/^90[2-5]\d\{2\}-\d{4}$/.test(a)},"Your ZIP-code must be in the range 902xx-xxxx to 905xx-xxxx"),a});
!function(t,i,e,n){"use strict";var o="forminatorLoader",a={action:"",type:"",id:"",render_id:"",is_preview:"",preview_data:[],last_submit_data:{},extra:{}};function r(i,e){this.element=i,this.$el=t(this.element),this.settings=t.extend({},a,e),this._defaults=a,this._name=o,this.frontInitCalled=!1,this.scriptsQue=[],this.frontOptions=null,this.init()}t.extend(r.prototype,{init:function(){var t=e.location.search.replace(/(^\?)/,"").split("&").map(function(t){return this[(t=t.split("="))[0]]=t[1],this}.bind({}))[0];t.action=this.settings.action,t.type=this.settings.type,t.id=this.settings.id,t.render_id=this.settings.render_id,t.is_preview=this.settings.is_preview,t.preview_data=JSON.stringify(this.settings.preview_data),t.last_submit_data=this.settings.last_submit_data,t.extra=this.settings.extra,this.load_ajax(t)},load_ajax:function(n){var o=this;t.ajax({type:"POST",url:i.ForminatorFront.ajaxUrl,data:n,cache:!1,beforeSend:function(){t(e).trigger("before.load.forminator",n.id)},success:function(a){if(a.success){var r=a.data;if(t(e).trigger("response.success.load.forminator",n.id,a),!r.is_ajax_load)return!1;if(r.pagination_config&&(i.Forminator_Cform_Paginations=i.Forminator_Cform_Paginations||[],i.Forminator_Cform_Paginations[n.id]=r.pagination_config),o.frontOptions=r.options||null,r.html){var s=r.style||null,l=r.script||null;o.render_html(r.html,s,l)}r.styles&&o.maybe_append_styles(r.styles),r.scripts&&o.maybe_append_scripts(r.scripts),!r.scripts&&o.frontOptions&&o.init_front()}else t(e).trigger("response.error.load.forminator",n.id,a)},error:function(){t(e).trigger("request.error.load.forminator",n.id)}}).always(function(){t(e).trigger("after.load.forminator",n.id)})},render_html:function(i,e,n){var o=this.settings.id,a=this.settings.render_id,r="",s=null;(s=this.$el.find(".forminator-cform-response-message")).length&&(r=s.get(0).outerHTML),(s=this.$el.find(".forminator-poll-response-message")).length&&(r=s.get(0).outerHTML),this.$el.replaceWith(i),r&&(t("#forminator-module-"+o+"[data-forminator-render="+a+"] .forminator-cform-response-message").replaceWith(r),t("#forminator-module-"+o+"[data-forminator-render="+a+"] .forminator-poll-response-message").replaceWith(r)),e&&(t("style#forminator-module-"+o).length&&t("style#forminator-module-"+o).remove(),t("body").append(e)),n&&t("body").append(n)},maybe_append_styles:function(i){for(var e in i)if(i.hasOwnProperty(e)&&!t("link#"+e).length){var n=t("<link>");n.attr("rel","stylesheet"),n.attr("id",e),n.attr("type","text/css"),n.attr("media","all"),n.attr("href",i[e].src),t("head").append(n)}},maybe_append_scripts:function(e){var n=[];for(var o in e)if(e.hasOwnProperty(o)){var a=e[o].on,r=e[o].load;if("window"===a){if(i[r])continue}else if("$"===a&&t.fn[r])continue;var s={};s.src=e[o].src,n.push(s),this.scriptsQue.push(o)}if(this.scriptsQue.length)for(var l in n)n.hasOwnProperty(l)&&this.load_script(n[l]);else this.init_front()},load_script:function(t){var i=this,n=e.createElement("script"),o=e.getElementsByTagName("body")[0];n.type="text/javascript",n.src=t.src,n.async=!0,n.defer=!0,n.onload=function(){i.script_on_load()},o.appendChild(n)},script_on_load:function(){this.scriptsQue.pop(),this.scriptsQue.length||this.init_front()},init_front:function(){if(!this.frontInitCalled){this.frontInitCalled=!0;var i=this.settings.id,e=this.settings.render_id,n=this.frontOptions||null;n&&t("#forminator-module-"+i+"[data-forminator-render="+e+"]").forminatorFront(n),this.init_window_vars()}},init_window_vars:function(){if("undefined"!=typeof ForminatorValidationErrors){var t=jQuery(ForminatorValidationErrors.selector).data("forminatorFrontSubmit");void 0!==t&&t.show_messages(ForminatorValidationErrors.errors)}if("undefined"!=typeof ForminatorFormHider){var i=jQuery(ForminatorFormHider.selector).data("forminatorFront");void 0!==i&&i.hide()}}}),t.fn[o]=function(i){return this.each(function(){t.data(this,o)||t.data(this,o,new r(this,i))})}}(jQuery,window,document),function(t,i,e,n){"use strict";var o="forminatorFront",a={form_type:"custom-form",rules:{},messages:{},conditions:{},inline_validation:!1,chart_design:"bar",chart_options:{}};function r(i,e){this.element=i,this.$el=t(this.element),this.forminator_selector="#"+t(this.element).attr("id")+'[data-forminator-render="'+t(this.element).data("forminator-render")+'"]',this.forminator_loader_selector='div[data-forminator-render="'+t(this.element).data("forminator-render")+'"][data-form="'+t(this.element).attr("id")+'"]',this.settings=t.extend({},a,e),void 0!==this.settings.messages&&(this.settings.messages=this.maybeParseStringToJson(this.settings.messages,"object")),void 0!==this.settings.rules&&(this.settings.rules=this.maybeParseStringToJson(this.settings.rules,"object")),void 0!==this.settings.calendar&&(this.settings.calendar=this.maybeParseStringToJson(this.settings.calendar,"array")),this._defaults=a,this._name=o,this.init()}t.extend(r.prototype,{init:function(){switch(t(this.forminator_loader_selector).remove(),0===this.$el.closest(".wph-modal").length&&this.$el.show(),t(e).on("hustle:module:displayed",function(i,e){t(".wph-modal-active").find("form").css("display","")}),setTimeout(function(){t(".wph-modal-active").find("form").css("display","")},10),this.settings.form_type){case"custom-form":this.init_custom_form();break;case"poll":this.init_poll_form();break;case"quiz":this.init_quiz_form()}t(this.element).forminatorFrontSubmit({form_type:this.settings.form_type,forminator_selector:this.forminator_selector,chart_design:this.settings.chart_design,chart_options:this.settings.chart_options}),this.activate_field(),this.material_field(),this.small_form()},init_custom_form:function(){var e=this;this.settings.inline_validation&&(this.init_intlTelInput_validation(),t(this.element).forminatorFrontValidate({rules:e.settings.rules,messages:e.settings.messages})),this.init_pagination(),t(this.element).forminatorFrontCondition(this.settings.conditions),t(this.element).find(".forminator-datepicker").forminatorFrontDatePicker(this.settings.calendar),this.init_select2(),this.responsive_captcha(),this.field_counter(),this.field_number(),this.field_time(),this.upload_field(),t(i).on("resize",function(){e.responsive_captcha()})},init_poll_form:function(){var i=this,e=this.$el.find(".forminator-radio--field"),n=this.$el.find(".forminator-input");this.$el.hasClass("forminator-poll-disabled")&&this.$el.find(".forminator-radio--field").each(function(){t(this).attr("disabled",!0)}),e.on("click",function(){n.hide(),n.attr("name","");var e=this.checked,o=t(this).attr("id"),a=t(this).attr("name");if(i.$el.find(".forminator-input#"+o+"-extra").length){var r=i.$el.find(".forminator-input#"+o+"-extra");e?(r.attr("name",a+"-extra"),r.show()):r.hide()}return!0})},init_quiz_form:function(){var e=this;this.$el.find(".forminator-button").each(function(){t(this).prop("disabled",!0)}),this.$el.find(".forminator-answer input").each(function(){t(this).attr("checked",!1)}),this.$el.find(".forminator-result--info button").on("click",function(){location.reload()}),this.$el.find(".forminator-submit-rightaway").click(function(){e.$el.submit(),t(this).closest(".forminator-question").find(".forminator-submit-rightaway").addClass("forminator-has-been-disabled").attr("disabled","disabled")}),this.$el.on("click",".forminator-social--icon a",function(e){e.preventDefault();var n=t(this).data("social"),o=t(this).closest(".forminator-social--icons").data("message"),a={facebook:"https://www.facebook.com/sharer/sharer.php?u="+i.location.href+"&t="+o,twitter:"https://twitter.com/intent/tweet?&url="+i.location.href+"&text="+o,google:"https://plus.google.com/share?url="+i.location.href,linkedin:"https://www.linkedin.com/shareArticle?mini=true&url="+i.location.href+"&title="+o};if(void 0!==a[n]){var r=i.open(a[n],n,"height="+t(i).height()+",width="+t(i).width());return i.focus&&r.focus(),!1}}),this.$el.on("change",".forminator-answer input",function(i){var n=0,o=e.$el.find(".forminator-question").length;e.$el.find(".forminator-answer input").each(function(){t(this).prop("checked")&&n++,n===o&&e.$el.find(".forminator-button").each(function(){t(this).prop("disabled",!1)})})})},small_form:function(){var e=t(this.element);t(i).width()>782&&e.parent().width()<=420&&!e.closest(".form-preview-wrapper").length&&e.addClass("forminator-size--small")},init_intlTelInput_validation:function(){var e=t(this.element),n=e.is(".forminator-design--material");e.find(".forminator-phone--field").each(function(){var e=t(this).data("national_mode"),o=t(this).data("country");if(void 0!==e){n&&t(this).unwrap(".forminator-input--wrap");var a={nationalMode:"enabled"===e,initialCountry:"us",utilsScript:i.ForminatorFront.cform.intlTelInput_utils_script};void 0!==o&&(a.initialCountry=o,a.allowDropdown=!1),t(this).intlTelInput(a),n&&(t(this).closest(".intl-tel-input.allow-dropdown").addClass("forminator-phone-intl").removeClass("intl-tel-input"),t(this).closest(".forminator-field").addClass("intl-tel-input"),t(this).wrap('<div class="forminator-input--wrap"></div>'))}})},init_select2:function(){var i=t(this.element),e=i.attr("id");i.hasClass("forminator-design--default")?(t(this.element).find(".forminator-select").wpmuiSelect({allowClear:!1,containerCssClass:"forminator-select2",dropdownCssClass:"forminator-dropdown forminator-dropdown--default forminator-ddfor--"+e}),t(this.element).find(".forminator-time").wpmuiSelect({allowClear:!1,containerCssClass:"forminator-select2",dropdownCssClass:"forminator-droptime forminator-droptime--default forminator-ddfor--"+e})):i.hasClass("forminator-design--material")?(t(this.element).find(".forminator-select").wpmuiSelect({allowClear:!1,containerCssClass:"forminator-select2",dropdownCssClass:"forminator-dropdown forminator-dropdown--material forminator-ddfor--"+e}),t(this.element).find(".forminator-time").wpmuiSelect({allowClear:!1,containerCssClass:"forminator-select2",dropdownCssClass:"forminator-droptime forminator-droptime--material forminator-ddfor--"+e})):i.hasClass("forminator-design--bold")?(t(this.element).find(".forminator-select").wpmuiSelect({allowClear:!1,containerCssClass:"forminator-select2",dropdownCssClass:"forminator-dropdown forminator-dropdown--bold forminator-ddfor--"+e}),t(this.element).find(".forminator-time").wpmuiSelect({allowClear:!1,containerCssClass:"forminator-select2",dropdownCssClass:"forminator-droptime forminator-droptime--bold forminator-ddfor--"+e})):i.hasClass("forminator-design--flat")?(t(this.element).find(".forminator-select").wpmuiSelect({allowClear:!1,containerCssClass:"forminator-select2",dropdownCssClass:"forminator-dropdown forminator-dropdown--flat forminator-ddfor--"+e}),t(this.element).find(".forminator-time").wpmuiSelect({allowClear:!1,containerCssClass:"forminator-select2",dropdownCssClass:"forminator-droptime forminator-droptime--flat forminator-ddfor--"+e})):(t(this.element).find(".forminator-select").wpmuiSelect({allowClear:!1,containerCssClass:"forminator-select2",dropdownCssClass:"forminator-dropdown forminator-ddfor--"+e}),t(this.element).find(".forminator-time").wpmuiSelect({allowClear:!1,containerCssClass:"forminator-select2",dropdownCssClass:"forminator-droptime forminator-droptime--flat forminator-ddfor--"+e}))},responsive_captcha:function(){t(this.element).find(".forminator-g-recaptcha").each(function(){if(t(this).is(":visible")){var i=t(this).parent().width(),e=1;i<302&&(e=i/302),t(this).css("transform","scale("+e+")"),t(this).css("-webkit-transform","scale("+e+")"),t(this).css("transform-origin","0 0"),t(this).css("-webkit-transform-origin","0 0")}})},init_pagination:function(){var e=t(this.element).find(".forminator-pagination").length,n=i.location.hash,o=!1,a=0;e>0&&(void 0!==n&&n.indexOf("step-")>=0&&(o=!0,a=n.substr(6,8)),t(this.element).forminatorFrontPagination({totalSteps:e,hashStep:o,step:a,inline_validation:this.settings.inline_validation}))},activate_field:function(){var i=t(this.element);function e(){i.find(".select2-container").hasClass("select2-container--open")?setTimeout(e,300):i.find(".select2-container").closest(".forminator-field").removeClass("forminator-is_active")}i.find(".forminator-input, .forminator-textarea").each(function(){var i=t(this);""!==t(this).val().trim()?(t(this).closest(".forminator-field").addClass("forminator-is_filled"),t(this).closest(".forminator-poll--answer").addClass("forminator-is_filled")):(t(this).closest(".forminator-field").removeClass("forminator-is_filled"),t(this).closest(".forminator-poll--answer").removeClass("forminator-is_filled")),i.mouseover(function(i){i.stopPropagation(),t(this).closest(".forminator-field").addClass("forminator-is_hover"),t(this).closest(".forminator-poll--answer").addClass("forminator-is_hover")}).mouseout(function(i){i.stopPropagation(),t(this).closest(".forminator-field").removeClass("forminator-is_hover"),t(this).closest(".forminator-poll--answer").removeClass("forminator-is_hover")}),i.focus(function(i){i.stopPropagation(),t(this).closest(".forminator-field").addClass("forminator-is_active"),t(this).closest(".forminator-poll--answer").addClass("forminator-is_active")}).blur(function(i){i.stopPropagation(),t(this).closest(".forminator-field").removeClass("forminator-is_active"),t(this).closest(".forminator-poll--answer").removeClass("forminator-is_active")}),i.change(function(i){i.stopPropagation(),""!==t(this).val().trim()?(t(this).closest(".forminator-field").addClass("forminator-is_filled"),t(this).closest(".forminator-poll--answer").addClass("forminator-is_filled")):(t(this).closest(".forminator-field").removeClass("forminator-is_filled"),t(this).closest(".forminator-poll--answer").removeClass("forminator-is_filled")),""!==t(this).val().trim()&&""!==t(this).find("forminator-label--validation").text()&&(t(this).find(".forminator-label--validation").remove(),t(this).find(".forminator-field").removeClass("forminator-has_error"))})}),i.find(".forminator-select + .select2, .forminator-time + .select2").each(function(){var i=t(this);i.mouseover(function(i){i.stopPropagation(),t(this).closest(".forminator-field").addClass("forminator-is_hover")}).mouseout(function(i){i.stopPropagation(),t(this).closest(".forminator-field").removeClass("forminator-is_hover")}),i.on("click",function(n){n.stopPropagation(),e(),i.hasClass("select2-container--open")?t(this).closest(".forminator-field").addClass("forminator-is_active"):t(this).closest(".forminator-field").removeClass("forminator-is_active")})})},field_counter:function(){t(this.element).find(".forminator-input, .forminator-textarea").each(function(){var i=t(this),e=0;i.on("change keyup",function(i){i.stopPropagation();var n=t(this).closest(".forminator-field").find(".forminator-field--helper .forminator-label--limit");n.length&&n.data("limit")&&(e="words"!==n.data("type")?t(this).val().trim().length:t(this).val().trim().split(/\s+/).length,n.html(e+" / "+n.data("limit")))})})},field_number:function(){},field_time:function(){t(".forminator-input-time").on("input",function(i){var e=t(this),n=e.val();n&&n.length>=2&&e.val(n.substr(0,2))})},material_field:function(){var i=t(this.element);if(i.is(".forminator-design--material")){var e=i.find(".forminator-input--wrap"),n=i.find(".forminator-textarea--wrap"),o=i.find(".forminator-date"),a=(i.find(".forminator-product"),i.find(".forminator-pagination--nav").find("li"));t('<span class="forminator-nav-border"></span>').insertAfter(a),e.prev(".forminator-field--label").addClass("forminator-floating--input"),e.closest(".forminator-phone-intl").prev(".forminator-field--label").addClass("forminator-floating--input"),n.prev(".forminator-field--label").addClass("forminator-floating--textarea"),o.hasClass("forminator-has_icon")?o.prev(".forminator-field--label").addClass("forminator-floating--date"):o.prev(".forminator-field--label").addClass("forminator-floating--input")}},toggle_file_input:function(){t(this.element).find(".forminator-upload").each(function(){var i=t(this),e=i.find(".forminator-input"),n=i.find(".forminator-upload--remove");""!==e.val()?n.show():n.hide()})},upload_field:function(){var i=this,e=t(this.element);this.toggle_file_input(),e.find(".forminator-upload--remove").on("click",function(i){i.preventDefault();var e=t(this),n=e.siblings(".forminator-input"),o=e.siblings(".forminator-label");n.val(""),o.html("No file chosen"),e.hide()}),e.find(".forminator-upload-button").on("click",function(n){n.preventDefault();var o=t(this).attr("data-id"),a=e.find("input#"+o),r=e.find("label#"+o);a.trigger("click"),a.change(function(){var e=t(this).val(),n=e.length?e.split("\\").pop():"";r.text(n),i.toggle_file_input()})}),e.find(".forminator-input-file").on("change",function(i){i.preventDefault();var e=t(this)[0].files.length,n=t(this).find("~ .forminator-upload--remove");0===e?n.hide():n.show()})},renderCaptcha:function(e){var n=this;if(void 0===t(e).data("forminator-recapchta-widget")){var o=t(e).data("size"),a={sitekey:t(e).data("sitekey"),theme:t(e).data("theme"),size:o};if("invisible"===o&&(a.badge="inline",a.callback=function(i){t(n.element).trigger("submit.frontSubmit")}),""!==a.sitekey){var r=i.grecaptcha.render(e,a);t(e).data("forminator-recapchta-widget",r),this.responsive_captcha()}}},hide:function(){this.$el.hide()},maybeParseStringToJson:function(t,i){var e={};if("object"==typeof t)return t;if("object"===i)t="{"+t.trim()+"}";else{if("array"!==i)return{};t="["+t.trim()+"]"}try{t=t.replace(/\,(?!\s*?[\{\[\"\'\w])/g,""),e=JSON.parse(t)}catch(t){console.error(t.message),"object"===i?e={}:"array"===i&&(e=[])}return e}}),t.fn[o]=function(i){return this.each(function(){t.data(this,o)||t.data(this,o,new r(this,i))})},t(e).on("tinymce-editor-init",function(t,i){i.on("change",function(){0===i.id.indexOf("forminator-wp-editor-")&&i.save()})})}(jQuery,window,document);var forminator_render_captcha=function(){jQuery(".forminator-g-recaptcha").each(function(){var t=jQuery(this).closest("form");if(t.length>0){var i=t.data("forminatorFront");void 0!==i&&i.renderCaptcha(jQuery(this)[0])}})};!function(t,i,e,n){"use strict";var o="forminatorFrontPagination",a={totalSteps:0,step:0,hashStep:0,inline_validation:!1};function r(e,n){this.element=t(e),this.$el=this.element,this.totalSteps=0,this.step=0,this.hashStep=!1,this.next_button=i.ForminatorFront.cform.pagination_next,this.prev_button=i.ForminatorFront.cform.pagination_prev,this.form_id=0,this.settings=t.extend({},a,n),this._defaults=a,this._name=o,this.init()}t.extend(r.prototype,{init:function(){this.$el.find("input[name=form_id]").length>0&&(this.form_id=this.$el.find("input[name=form_id]").val()),this.form_id&&"object"==typeof i.Forminator_Cform_Paginations&&"object"==typeof i.Forminator_Cform_Paginations[this.form_id]&&"custom"===i.Forminator_Cform_Paginations[this.form_id]["pagination-labels"]&&(this.prev_button=i.Forminator_Cform_Paginations[this.form_id]["pagination-footer-button-text"],this.next_button=i.Forminator_Cform_Paginations[this.form_id]["pagination-right-button-text"]),this.totalSteps=this.settings.totalSteps,this.step=this.settings.step,this.settings.hashStep&&this.step>0?this.go_to(this.step,!0):this.go_to(0,!1),this.render_navigation(),this.render_bar_navigation(),this.render_footer_navigation(),this.init_events(),this.update_buttons(),this.update_navigation()},init_events:function(){var t=this;this.$el.find(".forminator-pagination-prev").click(function(i){i.preventDefault(),t.handle_click("prev")}),this.$el.find(".forminator-pagination-next").click(function(i){i.preventDefault(),t.handle_click("next")}),this.$el.on("reset",function(i){t.on_form_reset(i)}),this.$el.on("forminator.front.pagination.focus.input",function(i,e){t.on_focus_input(i,e)})},on_form_reset:function(t){this.go_to(0,!0),this.update_buttons()},on_focus_input:function(t,i){var e=this.get_page_of_input(i);this.go_to(e,!0),this.update_buttons()},render_footer_navigation:function(){this.$el.hasClass("forminator-design--material")?this.$el.append('<div class="forminator-pagination--footer"><button class="forminator-button forminator-pagination-prev"><span class="forminator-button--mask" aria-label="hidden"></span><span class="forminator-button--text">'+this.prev_button+'</span></button><button class="forminator-button forminator-pagination-next"><span class="forminator-button--mask" aria-label="hidden"></span><span class="forminator-button--text">'+this.next_button+"</span></button></div>"):this.$el.append('<div class="forminator-pagination--footer"><button class="forminator-button forminator-pagination-prev">'+this.prev_button+'</button><button class="forminator-button forminator-pagination-next">'+this.next_button+"</button></div>")},render_bar_navigation:function(){var t=this.$el.find(".forminator-pagination--bar");t.length&&(t.html('<div class="forminator-bar--text forminator-current">0%</div><div class="forminator-bar--progress"><span style="width: 0%"></span></div>'),this.calculate_bar_percentage())},calculate_bar_percentage:function(){var t=this.totalSteps,i=this.step+1,e=this.$el;if(e.length){var n=Math.round(i/t*100);e.find(".forminator-current").html(n+"%"),e.find(".forminator-bar--progress span").css("width",n+"%")}},render_navigation:function(){var i=this.$el.find(".forminator-pagination--nav");if(i.length){var e=this.$el.find(".forminator-pagination").not(".forminator-pagination-start"),n=this.$el.find(".forminator-pagination-start");this.$el.hasClass("forminator-design--material")?(e.each(function(){var e=t(this),n=e.data("label"),o=e.data("step")-1;i.append('<li class="forminator-nav-step forminator-nav-step-'+o+'"><span class="forminator-step-text">'+n+"</span></li>")}),n.each(function(){var n=t(this).data("label"),o=e.length;i.append('<li class="forminator-nav-step forminator-nav-step-'+o+'"><span class="forminator-step-text">'+n+"</span></li>")})):(e.each(function(){var e=t(this),n=e.data("label"),o=e.data("step")-1;i.append('<li class="forminator-nav-step forminator-nav-step-'+o+'"><span class="forminator-step-text">'+n+'</span><span class="forminator-step-dot" aria-label="hidden"></span></li>')}),n.each(function(){var n=t(this).data("label"),o=e.length;i.append('<li class="forminator-nav-step forminator-nav-step-'+o+'"><span class="forminator-step-text">'+n+'</span><span class="forminator-step-dot" aria-label="hidden"></span></li>')}))}},handle_click:function(t){if("prev"===t&&0!==this.step)this.go_to(this.step-1,!0);else if("next"===t){if(this.settings.inline_validation&&!this.is_step_inputs_valid())return;this.go_to(this.step+1,!0)}this.update_buttons()},is_step_inputs_valid:function(){var t=0,i=this.$el.data("validator"),e=this.$el.find("[data-step="+this.step+"]");return void 0===i||(e.find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(":hidden:not(.forminator-wp-editor-required, .forminator-input-file-required)").not('[gramm="true"]').each(function(e,n){i.element(n)||(0===t&&n.focus(),t++)}),0===t)},get_page_of_input:function(i){var e=this.step,n=t(i).closest(".forminator-pagination");if(n.length>0){var o=t(n).data("step");void 0!==o&&(e=+o)}return e},update_buttons:function(){if(0===this.step?this.$el.find(".forminator-pagination-prev").attr("disabled",!0):this.$el.find(".forminator-pagination-prev").removeAttr("disabled"),this.step===this.totalSteps&&(this.step--,this.$el.submit()),this.step===this.totalSteps-1){var t=this.$el.find(".forminator-pagination-submit").html();this.$el.hasClass("forminator-design--material")?this.$el.find(".forminator-pagination-next .forminator-button--text").html(t):this.$el.find(".forminator-pagination-next").html(t)}else this.$el.hasClass("forminator-design--material")?this.$el.find(".forminator-pagination-next .forminator-button--text").html(this.next_button):this.$el.find(".forminator-pagination-next").html(this.next_button)},go_to:function(t,i){if(this.step=t,t===this.totalSteps)return!1;this.$el.find(".forminator-pagination").hide(),this.$el.find("[data-step="+t+"]").show();var e=this.$el.data("forminatorFront");void 0!==e&&e.responsive_captcha(),this.update_navigation(),i&&this.scroll_to_top_form()},update_navigation:function(){this.$el.find(".forminator-step-current").removeClass("forminator-step-current"),this.$el.find(".forminator-nav-step-"+this.step).addClass("forminator-step-current"),this.calculate_bar_percentage()},scroll_to_top_form:function(){var e=this.$el,n=this.$el.find(".forminator-row").not(":hidden").first();if(n.length&&(e=n),e.length){var o="html,body";this.$el.closest(".sui-dialog").length>0&&(o=".sui-dialog"),this.$el.closest(".wph-modal").length>0&&(o=".wph-modal"),t(o).animate({scrollTop:e.offset().top-(t(i).height()-e.outerHeight(!0))/2},500,function(){e.attr("tabindex")||e.attr("tabindex",-1),e.focus()})}}}),t.fn[o]=function(i){return this.each(function(){t.data(this,o)||t.data(this,o,new r(this,i))})}}(jQuery,window,document),function(t,i,e,n){"use strict";var o="forminatorFrontDatePicker",a={};function r(i,e){this.element=i,this.$el=t(this.element),this.settings=t.extend({},a,e),this._defaults=a,this._name=o,this.init()}t.extend(r.prototype,{init:function(){var i=this,e=this.$el.data("format"),n=this.$el.data("restrict-type"),o=this.$el.data("restrict"),a=this.$el.data("restrict"),r=this.$el.data("start-year"),s=this.$el.data("end-year");a=!isNaN(parseFloat(a))&&isFinite(a)?[a.toString()]:o.split(","),r||(r="c-95"),s||(s="c+95");var l=this.$el.closest(".forminator-custom-form"),f="forminator-calendar";l.hasClass("forminator-design--default")?f="forminator-calendar--default":l.hasClass("forminator-design--material")?f="forminator-calendar--material":l.hasClass("forminator-design--flat")?f="forminator-calendar--flat":l.hasClass("forminator-design--bold")&&(f="forminator-calendar--bold"),this.$el.datepicker({beforeShow:function(t,i){i.dpDiv.addClass(f+" forminator-calfor--"+l.attr("id"))},beforeShowDay:function(t){return"week"===n?i.restrict_week(a,t):i.restrict_custom(a,t)},dayNamesMin:this.settings,changeMonth:!0,changeYear:!0,dateFormat:e,yearRange:r+":"+s,minDate:new Date(r,0,1),maxDate:new Date(s,11,31),onClose:function(){t(this).valid()}})},restrict_week:function(t,i){var e=i.getDay();return-1!==t.indexOf(e.toString())?[!1,"disabledDate"]:[!0,"enabledDate"]},restrict_custom:function(t,i){var e=[];e[0]="January",e[1]="February",e[2]="March",e[3]="April",e[4]="May",e[5]="June",e[6]="July",e[7]="August",e[8]="September",e[9]="October",e[10]="November",e[11]="December";var n=i.getMonth(),o=i.getDate(),a=i.getFullYear(),r=o+" "+e[n]+" "+a;return-1!==t.indexOf(r)?[!1,"disabledDate"]:[!0,"enabledDate"]}}),t.fn[o]=function(i){return this.each(function(){t.data(this,o)||t.data(this,o,new r(this,i))})}}(jQuery,window,document),function(t,i,e,n){"use strict";var o="forminatorFrontValidate",a={rules:{},messages:{}};function r(i,e){this.element=i,this.$el=t(this.element),this.settings=t.extend({},a,e),this._defaults=a,this._name=o,this.init()}t.extend(r.prototype,{init:function(){t(this.element).validate({ignore:":hidden:not(.do-validate)",errorPlacement:function(t,i){},onfocusout:function(i){!1===t(i).hasClass("hasDatepicker")&&t(i).valid()},highlight:function(i,e,n){var o=this.errorMap[i.name],a=t(i).closest(".forminator-field--inner");0===a.length&&(a=t(i).closest(".forminator-field"));var r=a.find(".forminator-label--validation");if(0===r.length&&(a.append('<label class="forminator-label--validation"></label>'),r=a.find(".forminator-label--validation")),t(i).attr("aria-invalid","true"),r.html(o),a.addClass("forminator-has_error"),t(i).hasClass("forminator-input-time")){var s=t(i).closest(".forminator-field:not(.forminator-field--inner)"),l=s.children(".forminator-label--validation"),f="",d=[];0===l.length&&(s.append('<label class="forminator-label--validation"></label>'),l=s.children(".forminator-label--validation")),l.html(""),s.find(".forminator-input-time").each(function(){0===(f=t(this).siblings(".forminator-label--validation")).length&&(f=t(this).closest(".forminator-field").find(".forminator-label--validation")),d.push(f.html())}),l.html(d[0]+(d[0].length>0?" <br/> ":"")+d[1])}},unhighlight:function(i,e,n){var o=t(i).closest(".forminator-field--inner");0===o.length&&(o=t(i).closest(".forminator-field"));var a=o.find(".forminator-label--validation");if(t(i).removeAttr("aria-invalid"),a.remove(),o.removeClass("forminator-has_error"),t(i).hasClass("forminator-input-time")){var r=t(i).closest(".forminator-field:not(.forminator-field--inner)"),s=r.children(".forminator-label--validation"),l=0,f="",d="";r.find(".forminator-input-time").each(function(){"true"===t(this).attr("aria-invalid")&&(0===(d=t(this).siblings(".forminator-label--validation")).length&&(d=t(this).closest(".forminator-field").find(".forminator-label--validation")),f=d.html(),l++)}),0===l?s.remove():s.html(f)}},rules:this.settings.rules,messages:this.settings.messages})}}),t.fn[o]=function(i){return this.each(function(){t.data(this,o)||t.data(this,o,new r(this,i))})},t.validator.addMethod("validurl",function(i,e){var n=t.validator.methods.url.bind(this);return n(i,e)||n("https://"+i,e)}),t.validator.addMethod("forminatorPhoneNational",function(i,e){return this.optional(e)||t(e).intlTelInput("isValidNumber")}),t.validator.addMethod("forminatorPhoneInternational",function(i,e){return this.optional(e)||t(e).intlTelInput("isValidNumber")}),t.validator.addMethod("dateformat",function(t,i,e){var n,o,a,r,s,l=!1;return("yy-mm-dd"!==e?/^\d{1,2}\/\d{1,2}\/\d{4}$/:/^\d{4}-\d{1,2}-\d{1,2}$/).test(t)?("dd/mm/yy"===e?(n=t.split("/"),o=parseInt(n[0],10),a=parseInt(n[1],10),r=parseInt(n[2],10)):"mm/dd/yy"===e?(n=t.split("/"),a=parseInt(n[0],10),o=parseInt(n[1],10),r=parseInt(n[2],10)):(n=t.split("-"),r=parseInt(n[0],10),a=parseInt(n[1],10),o=parseInt(n[2],10)),l=(s=new Date(Date.UTC(r,a-1,o,12,0,0,0))).getUTCFullYear()===r&&s.getUTCMonth()===a-1&&s.getUTCDate()===o):l=!1,this.optional(i)||l}),t.validator.addMethod("maxwords",function(t,i,e){return this.optional(i)||jQuery.trim(t).split(/\s+/).length<=e}),t.validator.addMethod("trim",function(t,i,e){return!0===this.optional(i)||0!==t.trim().length}),t.validator.addMethod("emailWP",function(t,i,e){if(this.optional(i))return!0;if(t.trim().length<6)return!1;if(t.indexOf("@",1)<0)return!1;var n=t.split("@",2);if(!n[0].match(/^[a-zA-Z0-9!#$%&'*+\/=?^_`{|}~\.-]+$/))return!1;if(n[1].match(/\.{2,}/))return!1;var o=n[1].split(".");if(o.length<2)return!1;for(var a=o.length,r=0;r<a;r++)if(!o[r].match(/^[a-z0-9-]+$/i))return!1;return!0}),t.validator.methods.number=function(t,i,e){return this.optional(i)||/^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$/.test(t)}}(jQuery,window,document),function(t,i,e,n){"use strict";var o="forminatorFrontCondition",a={fields:{},relations:{}};function r(i,e){this.element=i,this.$el=t(this.element),this.settings=t.extend({},a,e),this._defaults=a,this._name=o,this.init()}t.extend(r.prototype,{init:function(){var i=this;this.add_missing_relations(),this.$el.find(".forminator-field input, .forminator-field select").change(function(e){var n=t(this),o=n.closest(".forminator-col").attr("id");if(void 0===o&&(o=n.attr("id")),!i.has_relations(o))return!1;i.get_relations(o).forEach(function(t){var e=i.get_field_logic(t),n=e.action,o=e.rule,a=e.conditions,r=0;a.forEach(function(t){i.is_applicable_rule(t)&&r++}),"all"===o&&r===a.length||"any"===o&&r>0?i.toggle_field(t,n,"valid"):i.toggle_field(t,n,"invalid")})}),this.$el.find(".forminator-field input, .forminator-field select").change(),this.init_events()},init_events:function(){var t=this;this.$el.on("forminator.front.condition.restart",function(i){t.on_restart(i)})},on_restart:function(t){this.$el.find(".forminator-field input, .forminator-field select").change()},add_missing_relations:function(){var t=this,i={};if(void 0!==this.settings.fields){var e=this.settings.fields;Object.keys(e).forEach(function(n){e[n].conditions.forEach(function(e){var o=e.field;t.has_relations(o)||(void 0===i[o]&&(i[o]=[]),i[o].push(n))})})}Object.keys(i).forEach(function(e){t.settings.relations[e]=i[e]})},get_field_logic:function(t){return void 0===this.settings.fields[t]?[]:this.settings.fields[t]},has_relations:function(t){return void 0!==this.settings.relations[t]},get_relations:function(t){return this.has_relations(t)?this.settings.relations[t]:[]},get_field_value:function(i){var e=this.get_form_field(i),n=e.val();return this.field_is_radio(e)?n=e.filter(":checked").val():this.field_is_checkbox(e)&&(n=[],e.each(function(){t(this).is(":checked")&&n.push(t(this).val().toLowerCase())})),n||""},field_is_radio:function(i){var e=!1;return i.each(function(){if("radio"===t(this).attr("type"))return e=!0,!1}),e},field_is_checkbox:function(i){var e=!1;return i.each(function(){if("checkbox"===t(this).attr("type"))return e=!0,!1}),e},get_form_field:function(t){var i=this.$el.find("#"+t+"-field");return 0===i.length&&0===(i=this.$el.find("input[name="+t+"]")).length&&0===(i=this.$el.find("textarea[name="+t+"]")).length&&0===(i=this.$el.find('input[name="'+t+'[]"]')).length&&(i=this.$el.find("#"+t)),i},is_numeric:function(t){return!isNaN(parseFloat(t))&&isFinite(t)},is_applicable_rule:function(t){if(void 0===t)return!1;var i=this.get_field_value(t.field),e=t.value,n=t.operator;return this.is_matching(i,e,n)},is_matching:function(i,e,n){var o=Array.isArray(i);switch(o||(i=i?i.toLowerCase():""),e=e?e.toLowerCase():"",n){case"is":return o?t.inArray(e,i)>-1:i===e;case"is_not":return o?-1===t.inArray(e,i):i!==e;case"is_great":return i=+i,e=+e,!(!this.is_numeric(i)||!this.is_numeric(e))&&i>e;case"is_less":return i=+i,e=+e,!(!this.is_numeric(i)||!this.is_numeric(e))&&i<e;case"contains":return this.contains(i,e);case"starts":return i.startsWith(e);case"ends":return i.endsWith(e)}return!1},contains:function(t,i){return t.toLowerCase().indexOf(i)>=0},toggle_field:function(t,i,e){var n=this.get_form_field(t).closest(".forminator-col"),o=n.find(".forminator-input-file-required"),a=n.find(".forminator-wp-editor-required"),r=n.closest(".forminator-row");"show"===i&&("valid"===e?(r.removeClass("forminator-hidden"),n.removeClass("forminator-hidden"),o.length>0&&o.addClass("do-validate"),a.length>0&&a.addClass("do-validate")):(n.addClass("forminator-hidden"),o.length>0&&o.removeClass("do-validate"),a.length>0&&a.removeClass("do-validate"),0===r.find("> .forminator-col:not(.forminator-hidden)").length&&r.addClass("forminator-hidden"))),"hide"===i&&("valid"===e?(n.addClass("forminator-hidden"),o.length>0&&o.removeClass("do-validate"),a.length>0&&a.removeClass("do-validate")):(n.removeClass("forminator-hidden"),o.length>0&&o.addClass("do-validate"),a.length>0&&a.addClass("do-validate")))}}),t.fn[o]=function(i){return this.each(function(){t.data(this,o)||t.data(this,o,new r(this,i))})}}(jQuery,window,document),function(t,i,e,n){"use strict";var o="forminatorFrontSubmit",a={form_type:"custom-form",forminatorFront:!1,forminator_selector:"",chart_design:"bar",chart_options:{}};function r(i,e){this.element=i,this.$el=t(this.element),this.forminatorFront=null,this.settings=t.extend({},a,e),this._defaults=a,this._name=o,this.init()}t.extend(r.prototype,{init:function(){switch(this.forminatorFront=this.$el.data("forminatorFront"),this.settings.form_type){case"custom-form":this.settings.forminator_selector&&t(this.settings.forminator_selector).length||(this.settings.forminator_selector=".forminator-custom-form"),this.handle_submit_custom_form();break;case"quiz":this.settings.forminator_selector&&t(this.settings.forminator_selector).length||(this.settings.forminator_selector=".forminator-quiz"),this.handle_submit_quiz();break;case"poll":this.settings.forminator_selector&&t(this.settings.forminator_selector).length||(this.settings.forminator_selector=".forminator-poll"),this.handle_submit_poll()}},handle_submit_custom_form:function(){var e=this;t(this.element);e.$el.find(".forminator-cform-response-message").find(".forminator-label--success").not(":hidden").length&&e.focus_to_element(e.$el.find(".forminator-cform-response-message"),!0),t("body").on("submit.frontSubmit",this.settings.forminator_selector,function(n){var o=t(this),a=new FormData(this),r=o.find(".forminator-cform-response-message"),s=o.find(".forminator-g-recaptcha");if(s.length){var l=(s=t(s.get(0))).data("forminator-recapchta-widget"),f=s.data("size"),d=i.grecaptcha.getResponse(l);if("invisible"===f&&0===d.length)return i.grecaptcha.execute(l),!1;if(e.$el.hasClass("forminator_ajax")&&i.grecaptcha.reset(l),r.html(""),s.hasClass("error")&&s.removeClass("error"),0===d.length)return s.hasClass("error")||s.addClass("error"),r.html('<label class="forminator-label--error"><span>'+i.ForminatorFront.cform.captcha_error+"</span></label>"),e.focus_to_element(r),!1}return!e.$el.hasClass("forminator_ajax")||(r.html(""),r.html('<label class="forminator-label--info"><span>'+i.ForminatorFront.cform.processing+"</span></label>"),e.focus_to_element(r),e.$el.find("input[type=file]").each(function(){""===t(this).val()&&"function"==typeof i.FormData.prototype.delete&&a.delete(t(this).attr("name"))}),n.preventDefault(),t.ajax({type:"POST",url:i.ForminatorFront.ajaxUrl,data:a,cache:!1,contentType:!1,processData:!1,beforeSend:function(){o.find("button").attr("disabled",!0)},success:function(n){o.find(".forminator-label--validation").remove(),o.find(".forminator-field").removeClass("forminator-has_error"),o.find("button").removeAttr("disabled"),r.html("");var s=n.success?"success":"error";void 0!==n.message?(r.html('<div class="forminator-label--'+s+'"><span>'+n.message+"</span></div>"),e.focus_to_element(r,"success"===s)):void 0!==n.data&&(s=n.data.success?"success":"error",r.html('<div class="forminator-label--'+s+'"><span>'+n.data.message+"</span></div>"),e.focus_to_element(r,"success"===s)),!n.data.success&&n.data.errors.length&&(o.trigger("forminator:form:submit:failed",a),e.show_messages(n.data.errors)),!0===n.success&&(o[0]&&(o[0].reset(),o.find(".forminator-upload--remove").hide(),o.find(".forminator-upload .forminator-input").val(""),o.find(".forminator-upload .forminator-label").html(i.ForminatorFront.cform.no_file_chosen),o.find(".forminator-select").each(function(){t(this).val(null).trigger("change")}),o.trigger("forminator:form:submit:success",a),o.trigger("forminator.front.condition.restart")),void 0!==n.data.url&&(i.location.href=n.data.url),void 0!==n.data.behav&&"behaviour-hide"===n.data.behav&&e.$el.hide())},error:function(t){o.find("button").removeAttr("disabled"),r.html("");var n=400===t.status?i.ForminatorFront.cform.upload_error:i.ForminatorFront.cform.error;r.html('<label class="forminator-label--notice"><span>'+n+"</span></label>"),e.focus_to_element(r),o.trigger("forminator:form:submit:failed",a)}}),!1)})},handle_submit_quiz:function(){var e=this;t("body").on("submit.frontSubmit",this.settings.forminator_selector,function(n){var o,a=t(this);n.preventDefault(),e.$el.find(".forminator-has-been-disabled").removeAttr("disabled"),o=a.serialize(),e.$el.find(".forminator-has-been-disabled").attr("disabled","disabled");var r=e.$el.find(".forminator-button"),s=r.data("loading");return""!==s&&r.text(s),t.ajax({type:"POST",url:i.ForminatorFront.ajaxUrl,data:o,beforeSend:function(){e.$el.find("button").attr("disabled","disabled")},success:function(t){t.success?"nowrong"===t.data.type?(i.history.pushState("forminator","Forminator",t.data.result_url),e.$el.find(".forminator-quiz--result").html(t.data.result),e.$el.find(".forminator-answer input").attr("disabled","disabled")):"knowledge"===t.data.type&&(i.history.pushState("forminator","Forminator",t.data.result_url),e.$el.find(".forminator-quiz--result").size()>0&&e.$el.find(".forminator-quiz--result").html(t.data.finalText),Object.keys(t.data.result).forEach(function(i){var n=e.$el.find("#"+i);n.find(".forminator-question--result").html("<span>"+t.data.result[i].message+"</span>"),n.find(".forminator-submit-rightaway").attr("disabled","disabled");var o,a=e.$el.find('[id|="'+t.data.result[i].answer+'"]').closest(".forminator-answer");o=t.data.result[i].isCorrect?"forminator-is_correct":"forminator-is_incorrect",a.addClass(o)})):e.$el.find("button").removeAttr("disabled")}}),!1}),t("body").on("click",".forminator-result--retake",function(){location.reload()})},handle_submit_poll:function(){var e=this;e.$el.find(".forminator-poll-response-message").find(".forminator-label--success").not(":hidden").length&&e.focus_to_element(e.$el.find(".forminator-poll-response-message"),!0),t("body").on("submit.frontSubmit",this.settings.forminator_selector,function(n){t(this);var o=e.$el.find(".forminator-poll-response-message");return!e.$el.hasClass("forminator_ajax")||(o.html(""),o.html('<label class="forminator-label--info"><span>'+i.ForminatorFront.poll.processing+"</span></label>"),e.focus_to_element(o),n.preventDefault(),t.ajax({type:"POST",url:i.ForminatorFront.ajaxUrl,data:e.$el.serialize(),beforeSend:function(){e.$el.find("button").attr("disabled",!0)},success:function(t){e.$el.find("button").removeAttr("disabled"),o.html("");var n=t.success?"success":"error";!1===t.success?(o.html('<label class="forminator-label--'+n+'"><span>'+t.data.message+"</span></label>"),e.focus_to_element(o)):void 0!==t.data&&(n=t.data.success?"success":"error",o.html('<label class="forminator-label--'+n+'"><span>'+t.data.message+"</span></label>"),e.focus_to_element(o,"success"===n)),!0===t.success&&(void 0!==t.data.url?i.location.href=t.data.url:void 0!==t.data.chart_data&&t.data.chart_data.length>1&&"undefined"!=typeof google&&(void 0===google.visualization?(google.charts.load("current",{packages:["corechart","bar"]}),google.charts.setOnLoadCallback(function(){e.render_poll_chart(t.data.chart_data,t.data.back_button,e)})):e.render_poll_chart(t.data.chart_data,t.data.back_button,e)))},error:function(){e.$el.find("button").removeAttr("disabled"),o.html(""),o.html('<label class="forminator-label--notice"><span>'+i.ForminatorFront.poll.error+"</span></label>"),e.focus_to_element(o)}}),!1)})},render_poll_chart:function(i,n,o){o.$el.find(".forminator-poll--chart").remove();var a="forminator-chart-poll-"+(o.$el.attr("id")+"-"+o.$el.data("forminatorRender")),r=t('<div id="'+a+'" class="forminator-poll--chart" style="width: 100%; height: 300px;"></div>'),s=google.visualization.arrayToDataTable(i),l=t(n),f=!1;t(r).insertBefore(o.$el.find(".forminator-poll--answers")),o.$el.find(".forminator-poll--answers").hide(),o.$el.find(".forminator-poll--actions").empty(),l.click(function(t){t.preventDefault(),location.reload()}),o.$el.find(".forminator-poll--actions").append(l),"bar"===o.settings.chart_design?f=new google.visualization.BarChart(e.getElementById(a)):"pie"===this.settings.chart_design&&(f=new google.visualization.PieChart(e.getElementById(a))),f&&f.draw(s,o.settings.chart_options)},focus_to_element:function(e,n){n=n||!1,e.show(),t("html,body").animate({scrollTop:e.offset().top-(t(i).height()-e.outerHeight(!0))/2},500,function(){e.attr("tabindex")||e.attr("tabindex",-1),e.focus(),n&&e.show().delay(5e3).fadeOut("slow")})},show_messages:function(i){var e=this,n=e.$el.data("forminatorFrontCondition");if(void 0!==n){this.$el.find(".forminator-label--validation").remove();var o=0;i.forEach(function(i){var a=Object.keys(i),r=Object.values(i),s=n.get_form_field(a);if(s.length){if(0===o&&(e.$el.trigger("forminator.front.pagination.focus.input",[s]),e.focus_to_element(s)),t(s).hasClass("forminator-input-time")){var l=t(s).closest(".forminator-field:not(.forminator-field--inner)"),f=l.children(".forminator-label--validation");0===f.length&&(l.append('<label class="forminator-label--validation"></label>'),f=l.children(".forminator-label--validation")),f.html(r)}var d=t(s).closest(".forminator-field--inner");0===d.length&&0===(d=t(s).closest(".forminator-field")).length&&(d=t(s).find(".forminator-field")).length>1&&(d=d.first());var m=d.find(".forminator-label--validation");0===m.length&&(d.append('<label class="forminator-label--validation"></label>'),m=d.find(".forminator-label--validation")),t(s).attr("aria-invalid","true"),m.html(r),d.addClass("forminator-has_error"),o++}})}return this}}),t.fn[o]=function(i){return this.each(function(){t.data(this,o)||t.data(this,o,new r(this,i))})}}(jQuery,window,document);
